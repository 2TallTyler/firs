/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

${industry.get_spritesets()}

${industry.get_spritelayouts()}

switch(FEAT_INDUSTRYTILES, PARENT, ${industry.id}_industry_master_graphics_switch, STORE_TEMP(random_bits, 0)) {
	${industry.id}_spritelayout_1; // default
}

<!--! dredging site has one layout only, don't bother inserting templated industry layouts etc -->
<!--! ${industry.get_industry_layouts_as_graphic_switches()} -->

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(tile_nearby_industry,  TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (tile_location_check, ${industry.id}_tile_nearby_industry)

item(FEAT_INDUSTRYTILES, ${industry.id}_tile, TILE_DREDGINGSITE_1) {
	property {
		substitute:       0;
		accepted_cargos:  [[ENSP, 8]];
		land_shape_flags: bitmask(LSF_ONLY_ON_FLAT_LAND);
	}

	graphics {
		tile_check: ${industry.id}_tile_location_check;
		${industry.id}_industry_master_graphics_switch;
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

tilelayout tilelayout_dredging_site_1 {
	0, 0: 255;
	0, 1: 24;
	0, 2: 24;
	0, 4: 255;
	1, 0: 255;
	1, 4: 255;
	2, 0: 255;
	2, 2: 255;
	2, 3: ${industry.id}_tile;
	2, 4: 255;
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* availability years */
#define THIS_MIN_YEAR 1825

CHECK_INCOMPATIBLE  (dredging_site, 56, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_INCOMPATIBLE  (lime_kiln,     16, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_dredging_site)
CHECK_INCOMPATIBLE  (glass_works,   16, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_lime_kiln)
CHECK_INCOMPATIBLE  (cement_plant,  16, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_glass_works)
CHECK_INCOMPATIBLE  (brick_works,   16, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_cement_plant)
CHECK_COAST_DISTANCE(coastal_distance, 0, param_max_coastal_distance, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_brick_works)
CHECK_FOUNDER       (${industry.id}_coastal_distance)

${industry.get_primary_supplies_stuff()}

#include "../../src/templates/check_availability.pnml"

${industry.get_industry_properties()}

item(FEAT_INDUSTRIES, dredging_site, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:   ${industry.id}_produce;
		construction_probability:${industry.id}_check_availability;
		location_check:          ${industry.id}_check_location;
		produce_256_ticks:       ${industry.id}_produce_256_ticks;
		monthly_prod_change:     ${industry.id}_monthly_update;
        random_prod_change:      return CB_RESULT_IND_PROD_NO_CHANGE;
		build_prod_change:       randomise_primary_production_on_build;
		extra_text_industry:     ${industry.id}_extra_text;
		extra_text_fund:         return string(STR_FUND_AVAILABLE_FROM, THIS_MIN_YEAR);
		colour:                  switch_colour;
	}
}
#include "../../src/templates/undefs.pnml"

