<!--! macros are not currently combinable, this is a bit limited, a tree parser (similar to location checks) would be better -->

<metal:random_first_frame metal:define-macro="random_first_frame">
    <!--!
        Randomises the start frame of the animation.
        Use to desync animations between tiles that are repeated in an industry
        - avoids a horrible-looking synchronised effect for smoke, etc.
        Set animation_triggers to 'bitmask(ANIM_TRIGGER_INDTILE_CONSTRUCTION_STATE)'.
    -->
    <!--!
        frosch pointed out this case could have simply been handled in the graphics block,
        returning  "extra_callback_info1 % ${tile.animation_length}" directly for the cb.
        Would save building a silly switch with a value for every frame.
        But is slightly more complex to configure in the python industry definition, so eh.
    -->
    switch(FEAT_INDUSTRYTILES, SELF, ${tile.id}_anim_control, (extra_callback_info1 % ${tile.animation_length})) {
        <tal:frames repeat="frame range(tile.animation_length)">
            ${repeat.frame.index}: return ${repeat.frame.index};
        </tal:frames>
        return CB_RESULT_NEXT_FRAME;
    }
</metal:random_first_frame>

<metal:mine_winding_wheels metal:define-macro="mine_winding_wheels">
    <!--! starts animation on first frame, intended to be called by periodic tile loop -->
    switch(FEAT_INDUSTRYTILES, SELF, ${tile.id}_anim_control, 0) {
        return 0;
    }
</metal:mine_winding_wheels>
