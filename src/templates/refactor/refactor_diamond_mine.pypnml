/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

<!--!
    Diamond Mine uses base set sprites currently.
    When new sprites are ready, convert to primary template and bin this.
-->

#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(tile_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (tile_player_check, ${industry.id}_tile_nearby_industry)
TILE_DISALLOW_SLOPES      (tile_location_check, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_tile_player_check)

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_1, 91) {
	property {
		substitute: 91;
		override: 91;
		accepted_cargos: [[ENSP, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_2, 92) {
	property {
		substitute: 92;
		override: 92;
		accepted_cargos: [[ENSP, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_3, 93) {
	property {
		substitute: 93;
		override: 93;
		accepted_cargos: [[ENSP, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_4, 94) {
	property {
		substitute: 94;
		override: 94;
		accepted_cargos: [[ENSP, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_5, 95) {
	property {
		substitute: 95;
		override: 95;
		accepted_cargos: [[ENSP, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_6, 96) {
	property {
		substitute: 96;
		override: 96;
		accepted_cargos: [[ENSP, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_7, 97) {
	property {
		substitute: 97;
		override: 97;
		accepted_cargos: [[ENSP, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_8, 98) {
	property {
		substitute: 98;
		override: 98;
		accepted_cargos: [[ENSP, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_9, 99) {
	property {
		substitute: 99;
		override: 99;
		accepted_cargos: [[ENSP, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

<tal:include define="location_checks_industry load: location_check_macros_industry.pynml"
             metal:use-macro="location_checks_industry.macros['render_tree']" />

<tal:include metal:use-macro="load: extra_text_primary.pynml" />

<tal:include metal:use-macro="load: produce_primary.pypnml" />
<tal:include metal:use-macro="load: check_primary_supplies_delivered.pypnml" />

<tal:include metal:use-macro="load: availability.pynml" />

<tal:include metal:use-macro="load: properties_industry.pynml" />

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:   ${industry.id}_produce;
		construction_probability:${industry.id}_check_availability;
		location_check:          ${industry.id}_check_location;
		produce_256_ticks:       ${industry.id}_produce_256_ticks;
		monthly_prod_change:     ${industry.id}_monthly_update;
        random_prod_change:      return CB_RESULT_IND_PROD_NO_CHANGE;
		build_prod_change:       randomise_primary_production_on_build;
		extra_text_industry:     ${industry.id}_extra_text;
		colour:                  switch_colour;
	}
}

#include "../src/templates/undefs.pnml"
