/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_1, 25) {
	property {
		substitute: 25;
		override: 25;
		accepted_cargos: [[ENSP, 8], [PASS, 8]];
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_2, 26) {
	property {
		substitute: 26;
		override: 26;
		accepted_cargos: [[ENSP, 8], [PASS, 8]];
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_3, 27) {
	property {
		substitute: 27;
		override: 27;
		accepted_cargos: [[ENSP, 8], [PASS, 8]];
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_4, 28) {
	property {
		substitute: 28;
		override: 28;
		accepted_cargos: [[ENSP, 8], [PASS, 8]];
	}
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

CHECK_COAST_DISTANCE(${industry.id}_coastal_distance, 0, param_max_coastal_distance, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_INCOMPATIBLE  (${industry.id}_oil_refinery, oil_refinery,    16, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_coastal_distance)
CHECK_FOUNDER       (${industry.id}_check_location, ${industry.id}_oil_refinery)

<tal:include metal:use-macro="load: extra_text_primary.pynml" />

<tal:include metal:use-macro="load: produce_primary.pypnml" />
<tal:include metal:use-macro="load: check_primary_supplies_delivered.pypnml" />

<tal:include metal:use-macro="load: check_availability.pynml" />

<tal:include metal:use-macro="load: industry_properties.pynml" />

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:   ${industry.id}_produce;
		construction_probability:${industry.id}_check_availability;
		location_check:          ${industry.id}_check_location;
		produce_256_ticks:       ${industry.id}_produce_256_ticks;
		monthly_prod_change:     ${industry.id}_monthly_update;
        random_prod_change:      return CB_RESULT_IND_PROD_NO_CHANGE;
		build_prod_change:       randomise_primary_production_on_build;
		extra_text_industry:     ${industry.id}_extra_text;
		extra_text_fund:         return string(STR_FUND_AVAILABLE_FROM, ${industry.get_intro_year(None)});
		colour:                  switch_colour;
	}
}

#include "../../src/templates/undefs.pnml"
