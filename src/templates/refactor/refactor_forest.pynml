/* **************
 * _tile_1
 * *************/

<tal:spritelayout define="tree_temperate_a 1593; tree_temperate_b 1586">
    // ground awareness of spritelayout can probably be folded into standard spritelayouts? (only forest uses that template)
    <tal:include metal:use-macro="load: spritelayouts_groundaware.pynml" />
        building {
            sprite: ${tree_temperate_b};
            xoffset: 2;
            yoffset: 2;
            xextent: 13;
            yextent: 13;
            hide_sprite: climate != CLIMATE_TEMPERATE;
        }
        building {
            sprite: ${tree_temperate_a};
            xoffset: 8;
            yoffset: 2;
            xextent: 7;
            yextent: 13;
            hide_sprite: climate != CLIMATE_TEMPERATE;
        }
        building {
            sprite: ${tree_temperate_a};
            yoffset: 7;
            yextent: 8;
            hide_sprite: climate != CLIMATE_TEMPERATE;
        }
        building {
            sprite: ${tree_temperate_b};
            xoffset: 8;
            yoffset: 7;
            xextent: 7;
            yextent: 8;
            hide_sprite: climate != CLIMATE_TEMPERATE;
        }

        building {
            sprite: 1817;
            xoffset: 2;
            yoffset: 2;
            xextent: 13;
            yextent: 13;
            hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
        }
        building {
            sprite: 1775;
            xoffset: 8;
            yoffset: 2;
            xextent: 7;
            yextent: 13;
            hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
        }
        building {
            sprite: 1817;
            yoffset: 7;
            yextent: 8;
            hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
        }
        building {
            sprite: 1775;
            xoffset: 8;
            yoffset: 7;
            xextent: 7;
            yextent: 8;
            hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) < snowline_height;
        }

        building {
            sprite: 1760;
            xoffset: 2;
            yoffset: 2;
            xextent: 13;
            yextent: 13;
            hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
        }
        building {
            sprite: 1719;
            xoffset: 8;
            yoffset: 2;
            xextent: 7;
            yextent: 13;
            hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
        }
        building {
            sprite: 1760;
            yoffset: 7;
            yextent: 8;
            hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
        }
        building {
            sprite: 1719;
            xoffset: 8;
            yoffset: 7;
            xextent: 7;
            yextent: 8;
            hide_sprite: climate != CLIMATE_ARCTIC || nearby_tile_height(0, 0) >= snowline_height;
        }

        building {
            sprite: 1915;
            xoffset: 2;
            yoffset: 2;
            xextent: 13;
            yextent: 13;
            hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
        }
        building {
            sprite: 1923;
            xoffset: 8;
            yoffset: 2;
            xextent: 7;
            yextent: 13;
            hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
        }
        building {
            sprite: 1923;
            yoffset: 7;
            yextent: 8;
            hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
        }
        building {
            sprite: 1915;
            xoffset: 8;
            yoffset: 7;
            xextent: 7;
            yextent: 8;
            hide_sprite: climate != CLIMATE_TROPICAL || nearby_tile_terrain_type(0, 0) != TILETYPE_DESERT;
        }

        building {
            sprite: 1845;
            xoffset: 2;
            yoffset: 2;
            xextent: 13;
            yextent: 13;
            hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
        }
        building {
            sprite: 1866;
            xoffset: 8;
            yoffset: 2;
            xextent: 7;
            yextent: 13;
            hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
        }
        building {
            sprite: 1845;
            yoffset: 7;
            yextent: 8;
            hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
        }
        building {
            sprite: 1866;
            xoffset: 8;
            yoffset: 7;
            xextent: 7;
            yextent: 8;
            hide_sprite: climate != CLIMATE_TROPICAL || (climate == CLIMATE_TROPICAL && nearby_tile_terrain_type(0, 0) == TILETYPE_DESERT);
        }
    }

    /* **************
     * _tile_2
     * *************/

    spriteset(spriteset_crane, "src/graphics/industries/forest_1.png") { tmpl_building_sprite(10, 10, 78, -45) }
    spriteset(spriteset_bulldozer, "src/graphics/industries/forest_1.png") { tmpl_building_sprite(80, 10, 78, -45) }
    spriteset(spriteset_tracks_snowtile, "src/graphics/industries/forest_1.png") { tmpl_building_sprite(220, 10, 78, -45) }

    spritelayout ${industry.id}_equipment_spritelayout {
        ground {
            sprite: 2022;
        }
        building {
            sprite: spriteset_crane;
            recolour_mode: RECOLOUR_REMAP;
            palette: 0;
            xextent: 7;
            yextent: 7;
            always_draw: 1;
        }
        building {
            sprite: spriteset_bulldozer;
            recolour_mode: RECOLOUR_REMAP;
            palette: 0;
            xextent: 7;
            yextent: 7;
            always_draw: 1;
        }
    }
    <!--! now unused - needs migration
    spritelayout ${industry.id}_tile_equipment_snow_spritelayout {
        ground {
            sprite: spriteset_tracks_snowtile;
            recolour_mode: RECOLOUR_REMAP;
            palette: 0;
        }
        building {
            sprite: spriteset_crane;
            recolour_mode: RECOLOUR_REMAP;
            palette: 0;
            xextent: 7;
            yextent: 7;
            always_draw: 1;
        }
        building {
            sprite: spriteset_bulldozer;
            recolour_mode: RECOLOUR_REMAP;
            palette: 0;
            xextent: 7;
            yextent: 7;
            always_draw: 1;
        }
    } -->
</tal:spritelayout>

<!--! !! this was a hax migration when removing CPP from tile location checks, as the spritelayouts chain was repurposing a
      tile location check switch with parameters.
      Not sure it's actually useful, snow sprite switching is handled in standardised spritelayout (or will be moved to a graphics chain switch)
      Think it's just a legacy artefact of CPP templating -->
<!--!  Check that the tile is within a certain height range (repurposeable for multiple checks, e.g. above or below snowline etc)
       uses more efficient code for (nearby_tile_height(0,0) <= maxh) && (nearby_tile_height(0,0) >= minh) -->
<!--!
switch(FEAT_INDUSTRYTILES, SELF, ${industry.id}_tile_equipment_height_check, UCMP(nearby_tile_height(0, 0) - 0, snowline_height - 0)) {
    0..1: ${industry.id}_tile_equipment_nonsnow_spritelayout;
    ${industry.id}_tile_equipment_snow_spritelayout;
}

switch(FEAT_INDUSTRYTILES, SELF, ${industry.id}_equipment_spritelayout, climate) {
	CLIMATE_ARCTIC: ${industry.id}_tile_equipment_height_check;
	${industry.id}_tile_equipment_nonsnow_spritelayout;
}-->

<tal:include metal:use-macro="load: graphics_switches.pynml" />

<tal:include define="location_checks_tile load: location_check_macros_tile.pynml"
             metal:use-macro="location_checks_tile.macros['render_tree']" />

<tal:include metal:use-macro="load: properties_tile.pynml" />

<tal:include metal:use-macro="load: layouts.pynml" />

<tal:include metal:use-macro="load: common_temp_2.pynml" />
