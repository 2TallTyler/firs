/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

<!--!
    Oil Refinery uses base set sprites currently.
    When new sprites are ready, convert to standard template and bin this.
-->

#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(tile_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (tile_player_check, ${industry.id}_tile_nearby_industry)
TILE_DISALLOW_SLOPES      (tile_location_check, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_tile_player_check)

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_1, 18) {
	property {
		substitute: 18;
		override: 18;
		accepted_cargos: [[OIL_, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_2, 19) {
	property {
		substitute: 19;
		override: 19;
		accepted_cargos: [[OIL_, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_3, 20) {
	property {
		substitute: 20;
		override: 20;
		accepted_cargos: [[OIL_, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_4, 21) {
	property {
		substitute: 21;
		override: 21;
		accepted_cargos: [[OIL_, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_5, 22) {
	property {
		substitute: 22;
		override: 22;
		accepted_cargos: [[OIL_, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_6, 23) {
	property {
		substitute: 23;
		override: 23;
		accepted_cargos: [[OIL_, 8]];
	}
	graphics {
		tile_check: ${industry.id}_tile_location_check;
	}
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    2
#define THIS_PROD_RATIO_CARGO1    6
#define THIS_PROD_RATIO_CARGO2    0
#define THIS_PROD_RATIO_CARGO3    0
#define THIS_BOOST_12             0
#define THIS_BOOST_13             0
#define THIS_BOOST_21             0
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0

#include "../../src/templates/produce_secondary.pnml"

<tal:include metal:use-macro="load: extra_text_secondary.pynml" />

<tal:include metal:use-macro="load: industry_location_checks.pynml" />

<tal:include metal:use-macro="load: check_availability.pynml" />

<tal:include metal:use-macro="load: industry_properties.pynml" />

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:    ${industry.id}_produce;
		construction_probability: ${industry.id}_check_availability;
		location_check:           ${industry.id}_check_location;
		monthly_prod_change:      check_secondary_production_level;
		random_prod_change:       check_secondary_closure;
		extra_text_industry:      ${industry.id}_extra_text;
		extra_text_fund:          return string(STR_FUND_AVAILABLE_FROM, ${industry.intro_year});
		colour:                   switch_colour;
	}
}

#include "../../src/templates/undefs.pnml"

