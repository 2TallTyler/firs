/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) rubber_plantation_ ## __VA_ARGS__

${industry.get_spritelayouts()}

switch(FEAT_INDUSTRYTILES, SELF, ${industry.id}_616, nearby_tile_slope(0,0)) {
	0: ${industry.id}_597;
	1: ${industry.id}_598;
	2: ${industry.id}_599;
	3: ${industry.id}_600;
	4: ${industry.id}_601;
	5: ${industry.id}_602;
	6: ${industry.id}_603;
	7: ${industry.id}_604;
	8: ${industry.id}_605;
	9: ${industry.id}_606;
	10: ${industry.id}_607;
	11: ${industry.id}_608;
	12: ${industry.id}_609;
	13: ${industry.id}_610;
	14: ${industry.id}_611;
	29: ${industry.id}_612;
	23: ${industry.id}_613;
	27: ${industry.id}_614;
	30: ${industry.id}_615;
	${industry.id}_597;
}


switch(FEAT_INDUSTRYTILES, SELF, ${industry.id}_639, nearby_tile_slope(0,0)) {
	0: ${industry.id}_620;
	1: ${industry.id}_621;
	2: ${industry.id}_622;
	3: ${industry.id}_623;
	4: ${industry.id}_624;
	5: ${industry.id}_625;
	6: ${industry.id}_626;
	7: ${industry.id}_627;
	8: ${industry.id}_628;
	9: ${industry.id}_629;
	10: ${industry.id}_630;
	11: ${industry.id}_631;
	12: ${industry.id}_632;
	13: ${industry.id}_633;
	14: ${industry.id}_634;
	29: ${industry.id}_635;
	23: ${industry.id}_636;
	27: ${industry.id}_637;
	30: ${industry.id}_638;
	${industry.id}_620;
}

switch(FEAT_INDUSTRYTILES, SELF, ${industry.id}_661, nearby_tile_slope(0,0)) {
	0: ${industry.id}_642;
	1: ${industry.id}_643;
	2: ${industry.id}_644;
	3: ${industry.id}_645;
	4: ${industry.id}_646;
	5: ${industry.id}_647;
	6: ${industry.id}_648;
	7: ${industry.id}_649;
	8: ${industry.id}_650;
	9: ${industry.id}_651;
	10: ${industry.id}_652;
	11: ${industry.id}_653;
	12: ${industry.id}_654;
	13: ${industry.id}_655;
	14: ${industry.id}_656;
	29: ${industry.id}_657;
	23: ${industry.id}_658;
	27: ${industry.id}_659;
	30: ${industry.id}_660;
	${industry.id}_642;
}

switch(FEAT_INDUSTRYTILES, SELF, ${industry.id}_683, nearby_tile_slope(0,0)) {
	0: ${industry.id}_664;
	1: ${industry.id}_665;
	2: ${industry.id}_666;
	3: ${industry.id}_667;
	4: ${industry.id}_668;
	5: ${industry.id}_669;
	6: ${industry.id}_670;
	7: ${industry.id}_671;
	8: ${industry.id}_672;
	9: ${industry.id}_673;
	10: ${industry.id}_674;
	11: ${industry.id}_675;
	12: ${industry.id}_676;
	13: ${industry.id}_677;
	14: ${industry.id}_678;
	29: ${industry.id}_679;
	23: ${industry.id}_680;
	27: ${industry.id}_681;
	30: ${industry.id}_682;
	${industry.id}_664;
}

switch(FEAT_INDUSTRYTILES, SELF, ${industry.id}_705, nearby_tile_slope(0,0)) {
	0: ${industry.id}_686;
	1: ${industry.id}_687;
	2: ${industry.id}_688;
	3: ${industry.id}_689;
	4: ${industry.id}_690;
	5: ${industry.id}_691;
	6: ${industry.id}_692;
	7: ${industry.id}_693;
	8: ${industry.id}_694;
	9: ${industry.id}_695;
	10: ${industry.id}_696;
	11: ${industry.id}_697;
	12: ${industry.id}_698;
	13: ${industry.id}_699;
	14: ${industry.id}_700;
	29: ${industry.id}_701;
	23: ${industry.id}_702;
	27: ${industry.id}_703;
	30: ${industry.id}_704;
	${industry.id}_686;
}

switch(FEAT_INDUSTRYTILES, SELF, ${industry.id}_727, nearby_tile_slope(0,0)) {
	0: ${industry.id}_708;
	1: ${industry.id}_709;
	2: ${industry.id}_710;
	3: ${industry.id}_711;
	4: ${industry.id}_712;
	5: ${industry.id}_713;
	6: ${industry.id}_714;
	7: ${industry.id}_715;
	8: ${industry.id}_716;
	9: ${industry.id}_717;
	10: ${industry.id}_718;
	11: ${industry.id}_719;
	12: ${industry.id}_720;
	13: ${industry.id}_721;
	14: ${industry.id}_722;
	29: ${industry.id}_723;
	23: ${industry.id}_724;
	27: ${industry.id}_725;
	30: ${industry.id}_726;
	${industry.id}_708;
}

switch(FEAT_INDUSTRYTILES, SELF, ${industry.id}_730, ((nearby_tile_height(0,0) - snowline_height) + 1)) {
	0..7: ${industry.id}_661;
	8..15: ${industry.id}_683;
	16..23: ${industry.id}_705;
	24..127: ${industry.id}_727;
	${industry.id}_639;
}

switch(FEAT_INDUSTRYTILES, SELF, ${industry.id}_750, nearby_tile_slope(0,0)) {
	0: ${industry.id}_731;
	1: ${industry.id}_732;
	2: ${industry.id}_733;
	3: ${industry.id}_734;
	4: ${industry.id}_735;
	5: ${industry.id}_736;
	6: ${industry.id}_737;
	7: ${industry.id}_738;
	8: ${industry.id}_739;
	9: ${industry.id}_740;
	10: ${industry.id}_741;
	11: ${industry.id}_742;
	12: ${industry.id}_743;
	13: ${industry.id}_744;
	14: ${industry.id}_745;
	29: ${industry.id}_746;
	23: ${industry.id}_747;
	27: ${industry.id}_748;
	30: ${industry.id}_749;
	${industry.id}_731;
}

switch(FEAT_INDUSTRYTILES, SELF, ${industry.id}_772, nearby_tile_slope(0,0)) {
	0: ${industry.id}_753;
	1: ${industry.id}_754;
	2: ${industry.id}_755;
	3: ${industry.id}_756;
	4: ${industry.id}_757;
	5: ${industry.id}_758;
	6: ${industry.id}_759;
	7: ${industry.id}_760;
	8: ${industry.id}_761;
	9: ${industry.id}_762;
	10: ${industry.id}_763;
	11: ${industry.id}_764;
	12: ${industry.id}_765;
	13: ${industry.id}_766;
	14: ${industry.id}_767;
	29: ${industry.id}_768;
	23: ${industry.id}_769;
	27: ${industry.id}_770;
	30: ${industry.id}_771;
	${industry.id}_753;
}

switch(FEAT_INDUSTRYTILES, SELF, ${industry.id}_775, terrain_type) {
	TILETYPE_DESERT: ${industry.id}_772;
	${industry.id}_750;
}

switch(FEAT_INDUSTRYTILES, SELF, rubber_plantation_tile_plantation_spritelayout, climate) {
	CLIMATE_TEMPERATE: ${industry.id}_616;
	CLIMATE_ARCTIC: ${industry.id}_730;
	CLIMATE_TROPIC: ${industry.id}_775;
	${industry.id}_616;
}

/* ***************
 * tile with house
 * ***************/

spriteset(${industry.id}_792, "src/graphics/industries/${industry.id}_1.png") { tmpl_building_sprite(10, 10, 59, -28) }
spritelayout ${industry.id}_tile_house_spritelayout {
	ground {
		sprite: 2022;
	}
	building {
		sprite: ${industry.id}_792;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		xextent: 7;
		yextent: 7;
		zextent: 7;
	}
}


/* ****************************************************
 * Definition of the industry tiles and their callbacks
 * ***************************************************/

TILE_DISALLOW_NEARBY_CLASS(tile_plantation_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW,      return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (tile_plantation_player_check,                                                                 ${industry.id}_tile_plantation_nearby_industry)
TILE_CHECK_WATER          (tile_plantation_water_check,                          string(STR_ERR_LOCATION_NOT_ON_WATER),  ${industry.id}_tile_plantation_player_check)
TILE_CHECK_HEIGHT         (tile_plantation_location_check,  0, snowline_height,  ${industry.id}_tile_plantation_water_check,   return string(STR_ERR_LOCATION_NOT_ABOVE_SNOWLINE))

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_plantation, TILE_RUBBER_PLANTATION_1) {
	property {
		substitute:       0;
		accepted_cargos:  [[FMSP, 8]];
		land_shape_flags: 0;
	}
	graphics {
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		autoslope:   return CB_RESULT_NO_AUTOSLOPE;
		tile_check:  ${industry.id}_tile_plantation_location_check;
		${industry.id}_tile_plantation_spritelayout;
	}
}



TILE_DISALLOW_NEARBY_CLASS(tile_house_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW,      return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (tile_house_player_check,                                                                 ${industry.id}_tile_house_nearby_industry)
TILE_CHECK_WATER          (tile_house_water_check,                          string(STR_ERR_LOCATION_NOT_ON_WATER),  ${industry.id}_tile_house_player_check)
TILE_CHECK_HEIGHT         (tile_house_location_check,  0, snowline_height,  ${industry.id}_tile_house_water_check,   return string(STR_ERR_LOCATION_NOT_ABOVE_SNOWLINE))

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_house, TILE_RUBBER_PLANTATION_2) {
	property {
		substitute:       0;
		accepted_cargos:  [[FMSP, 8]];
		land_shape_flags: 0;
	}
	graphics {
		autoslope:  return CB_RESULT_AUTOSLOPE;
		tile_check: ${industry.id}_tile_house_location_check;
		${industry.id}_tile_house_spritelayout;
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

<!--! could use templated layouts here using ${industry.get_industry_layouts_as_tilelayouts()}
      but there's no gain as the graphics chain doesn't use a layout check (so no repeating of data) -->

tilelayout ${industry.id}_tilelayout_1 {
	0, 0: ${industry.id}_tile_plantation;
	0, 1: ${industry.id}_tile_plantation;
	0, 2: ${industry.id}_tile_plantation;
	1, 0: ${industry.id}_tile_plantation;
	1, 1: ${industry.id}_tile_plantation;
	1, 2: ${industry.id}_tile_plantation;
	2, 1: ${industry.id}_tile_plantation;
	2, 2: ${industry.id}_tile_house;
}

tilelayout ${industry.id}_tilelayout_2 {
	0, 0: ${industry.id}_tile_plantation;
	0, 1: ${industry.id}_tile_plantation;
	0, 2: ${industry.id}_tile_plantation;
	0, 3: ${industry.id}_tile_plantation;
	1, 1: ${industry.id}_tile_plantation;
	1, 2: ${industry.id}_tile_plantation;
	1, 3: ${industry.id}_tile_plantation;
	1, 4: ${industry.id}_tile_house;
}

tilelayout ${industry.id}_tilelayout_3 {
	0, 0: ${industry.id}_tile_plantation;
	0, 1: ${industry.id}_tile_plantation;
	1, 0: ${industry.id}_tile_plantation;
	1, 1: ${industry.id}_tile_plantation;
	2, 0: ${industry.id}_tile_plantation;
	2, 1: ${industry.id}_tile_plantation;
	3, 0: ${industry.id}_tile_plantation;
	3, 1: ${industry.id}_tile_house;
}

tilelayout ${industry.id}_tilelayout_4 {
	0, 0: ${industry.id}_tile_plantation;
	0, 1: ${industry.id}_tile_plantation;
	0, 3: ${industry.id}_tile_plantation;
	0, 4: ${industry.id}_tile_plantation;
	1, 0: ${industry.id}_tile_plantation;
	1, 1: ${industry.id}_tile_plantation;
	1, 3: ${industry.id}_tile_plantation;
	1, 4: ${industry.id}_tile_plantation;
	3, 0: ${industry.id}_tile_plantation;
	3, 1: ${industry.id}_tile_plantation;
	3, 3: ${industry.id}_tile_plantation;
	3, 4: ${industry.id}_tile_plantation;
	4, 0: ${industry.id}_tile_plantation;
	4, 1: ${industry.id}_tile_house;
	4, 3: ${industry.id}_tile_plantation;
	4, 4: ${industry.id}_tile_plantation;
}

tilelayout ${industry.id}_tilelayout_5 {
	0, 0: ${industry.id}_tile_plantation;
	0, 1: ${industry.id}_tile_plantation;
	0, 2: ${industry.id}_tile_plantation;
	0, 3: ${industry.id}_tile_plantation;
	1, 0: ${industry.id}_tile_plantation;
	1, 1: ${industry.id}_tile_plantation;
	1, 2: ${industry.id}_tile_plantation;
	1, 3: ${industry.id}_tile_plantation;
	2, 0: ${industry.id}_tile_plantation;
	2, 1: ${industry.id}_tile_plantation;
	2, 2: ${industry.id}_tile_plantation;
	2, 3: ${industry.id}_tile_plantation;
	4, 0: ${industry.id}_tile_plantation;
	4, 1: ${industry.id}_tile_plantation;
	4, 2: ${industry.id}_tile_plantation;
	4, 3: ${industry.id}_tile_plantation;
	5, 0: ${industry.id}_tile_plantation;
	5, 1: ${industry.id}_tile_plantation;
	5, 2: ${industry.id}_tile_plantation;
	5, 3: ${industry.id}_tile_plantation;
	6, 0: ${industry.id}_tile_plantation;
	6, 1: ${industry.id}_tile_plantation;
	6, 2: ${industry.id}_tile_plantation;
	6, 3: ${industry.id}_tile_plantation;
	1, 5: ${industry.id}_tile_plantation;
	1, 6: ${industry.id}_tile_plantation;
	1, 7: ${industry.id}_tile_plantation;
	1, 8: ${industry.id}_tile_plantation;
	2, 5: ${industry.id}_tile_plantation;
	2, 6: ${industry.id}_tile_plantation;
	2, 7: ${industry.id}_tile_plantation;
	2, 8: ${industry.id}_tile_plantation;
	3, 5: ${industry.id}_tile_plantation;
	3, 6: ${industry.id}_tile_plantation;
	3, 7: ${industry.id}_tile_plantation;
	3, 8: ${industry.id}_tile_plantation;
	4, 5: ${industry.id}_tile_plantation;
	4, 6: ${industry.id}_tile_plantation;
	4, 7: ${industry.id}_tile_plantation;
	4, 8: ${industry.id}_tile_plantation;
	5, 5: ${industry.id}_tile_plantation;
	5, 6: ${industry.id}_tile_plantation;
	5, 7: ${industry.id}_tile_plantation;
	5, 8: ${industry.id}_tile_house;
}


/* *************************************************
 * Definition of the industry
 * *************************************************/

CHECK_NEARBY_CLUSTER(rubber_plantation, 10, 36, 3, 4, return CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_FOUNDER       (${industry.id}_rubber_plantation)

<tal:include metal:use-macro="load: primary_supplies_stuff.pynml" />

<tal:include metal:use-macro="load: check_availability.pynml" />

${industry.get_industry_properties()}

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:   ${industry.id}_produce;
		construction_probability:${industry.id}_check_availability;
		location_check:          ${industry.id}_check_location;
		produce_256_ticks:       ${industry.id}_produce_256_ticks;
		monthly_prod_change:     ${industry.id}_monthly_update;
        random_prod_change:      return CB_RESULT_IND_PROD_NO_CHANGE;
		build_prod_change:       randomise_primary_production_on_build;
		extra_text_fund:         return string(STR_FUND_RUBBER_PLANTATION);
		extra_text_industry:     ${industry.id}_extra_text;
		colour:                  switch_colour;
	}
}

#include "../../src/templates/undefs.pnml"
