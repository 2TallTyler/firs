/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

<tal:include metal:use-macro="load: waterpit_sprites.pynml" />

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

/* tile_check is disabled; if it's enabled OpenTTD won't terraform for this industry, which makes it unlikely to be built on steep maps.
// This means that this industry will locate adjacent to others, blocking routes.  It's the lesser of two evils.
TILE_DISALLOW_NEARBY_CLASS(tile1_nearby_industry,  TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (tile1_player_check,                                                             ${industry.id}_tile1_nearby_industry)
TILE_DISALLOW_TERRAIN     (tile1_disallow_terrain, TILETYPE_DESERT,     CB_RESULT_LOCATION_DISALLOW, ${industry.id}_tile1_player_check)
TILE_DISALLOW_SLOPES      (tile1_location_check,                        CB_RESULT_LOCATION_DISALLOW, ${industry.id}_tile1_disallow_terrain)
*/

item(FEAT_INDUSTRYTILES, ${industry.id}_tile, ${global_constants.tile_numeric_ids[industry.id + '_tile_1']}) {
	property {
		substitute:       0;
		accepted_cargos:  [[ENSP, 8]];
		land_shape_flags: bitmask(LSF_ONLY_ON_FLAT_LAND);
	}

	graphics {
		foundations:  return CB_RESULT_NO_FOUNDATIONS;
		autoslope:    return CB_RESULT_NO_AUTOSLOPE;
		/*tile_check:   ${industry.id}_tile1_location_check; // disabled to permit terraforming, see note above*/
		${industry.id}_layout;
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

tilelayout tilelayout_${industry.id}_1 {
	0, 0: ${industry.id}_tile;
	1, 0: ${industry.id}_tile;
	2, 0: ${industry.id}_tile;
	3, 0: ${industry.id}_tile;
	4, 0: ${industry.id}_tile;
	5, 0: ${industry.id}_tile;
	6, 0: ${industry.id}_tile;
	7, 0: ${industry.id}_tile;
	8, 0: ${industry.id}_tile;
	0, 1: ${industry.id}_tile;
	1, 1: ${industry.id}_tile;
	2, 1: ${industry.id}_tile;
	3, 1: ${industry.id}_tile;
	4, 1: ${industry.id}_tile;
	5, 1: ${industry.id}_tile;
	6, 1: ${industry.id}_tile;
	7, 1: ${industry.id}_tile;
	8, 1: ${industry.id}_tile;
	0, 2: ${industry.id}_tile;
	1, 2: ${industry.id}_tile;
	2, 2: ${industry.id}_tile;
	3, 2: ${industry.id}_tile;
	4, 2: ${industry.id}_tile;
	5, 2: ${industry.id}_tile;
	6, 2: ${industry.id}_tile;
	7, 2: ${industry.id}_tile;
	8, 2: ${industry.id}_tile;
	0, 3: ${industry.id}_tile;
	1, 3: ${industry.id}_tile;
	2, 3: ${industry.id}_tile;
	3, 3: ${industry.id}_tile;
	4, 3: ${industry.id}_tile;
	5, 3: ${industry.id}_tile;
	6, 3: ${industry.id}_tile;
}

tilelayout tilelayout_${industry.id}_2 {
	6, 0: ${industry.id}_tile;
	0, 1: ${industry.id}_tile;
	1, 1: ${industry.id}_tile;
	2, 1: ${industry.id}_tile;
	3, 1: ${industry.id}_tile;
	4, 1: ${industry.id}_tile;
	5, 1: ${industry.id}_tile;
	6, 1: ${industry.id}_tile;
	0, 2: ${industry.id}_tile;
	1, 2: ${industry.id}_tile;
	2, 2: ${industry.id}_tile;
	3, 2: ${industry.id}_tile;
	4, 2: ${industry.id}_tile;
	5, 2: ${industry.id}_tile;
	6, 2: ${industry.id}_tile;
	0, 3: ${industry.id}_tile;
	1, 3: ${industry.id}_tile;
	2, 3: ${industry.id}_tile;
	3, 3: ${industry.id}_tile;
	4, 3: ${industry.id}_tile;
	5, 3: ${industry.id}_tile;
	6, 3: ${industry.id}_tile;
	0, 4: ${industry.id}_tile;
	1, 4: ${industry.id}_tile;
	2, 4: ${industry.id}_tile;
	3, 4: ${industry.id}_tile;
	4, 4: ${industry.id}_tile;
	5, 4: ${industry.id}_tile;
	6, 4: ${industry.id}_tile;
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

<tal:include metal:use-macro="load: industry_location_checks.pynml" />

<tal:include metal:use-macro="load: extra_text_primary.pynml" />

<tal:include metal:use-macro="load: produce_primary.pypnml" />
<tal:include metal:use-macro="load: check_primary_supplies_delivered.pypnml" />

<tal:include metal:use-macro="load: check_availability.pynml" />

<tal:include metal:use-macro="load: industry_properties.pynml" />

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:   ${industry.id}_produce;
		construction_probability:${industry.id}_check_availability;
		location_check:          ${industry.id}_check_location;
		produce_256_ticks:       ${industry.id}_produce_256_ticks;
		monthly_prod_change:     ${industry.id}_monthly_update;
        random_prod_change:      return CB_RESULT_IND_PROD_NO_CHANGE;
		build_prod_change:       randomise_primary_production_on_build;
		extra_text_industry:     ${industry.id}_extra_text;
		colour:                  switch_colour;
	}
}

#include "../../src/templates/undefs.pnml"
