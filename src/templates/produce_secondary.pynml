<tal:economies repeat="economy economies">
    produce (${industry.id}_produce_${economy.numeric_id},
        [
            <tal:subtract repeat="cargo industry.get_property('accept_cargos_with_input_ratios', economy)">
                <!--! !!! assume just subtracting all for now, don't faff around with remaindered amounts -->
                ${cargo[0]}: incoming_cargo_waiting("${cargo[0]}");
            </tal:subtract>
        ],
        [
            <tal:produce repeat="cargo industry.get_property('prod_cargo_types_with_output_ratios', economy)">
                ${cargo[0]}: (LOAD_PERM(${industry.perm_storage.total_cargo_produced_this_cycle}) * ${cargo[1]}) / 8;
            </tal:produce>
        ],
    0)

    switch (FEAT_INDUSTRIES, SELF, ${industry.id}_produce_calculation_${economy.numeric_id},
            [
                <!--! zero the current production ratio, which we will recalculate during this production cycle -->
                STORE_PERM(0, ${industry.perm_storage.current_production_ratio}),
                <!--! zero the total production from this cycle, as a starting value-->
                STORE_PERM(0, ${industry.perm_storage.total_cargo_produced_this_cycle}),
                <tal:input_cargos repeat="input_cargo industry.get_property('accept_cargos_with_input_ratios', economy)">
                    <!--! check if this cargo is deliver, and if so, update the last delivery date for it -->
                    <tal:date_received define="date_received_storage_number getattr(industry.perm_storage, 'date_received_cargo_' + str(repeat.input_cargo.number))">
                    STORE_PERM(
                        max(LOAD_PERM(${date_received_storage_number}), (incoming_cargo_waiting("${input_cargo[0]}") > 0) * current_date),
                        ${date_received_storage_number}
                    ),
                    <!--! if this cargo was delivered, increase the total production ratio appropriately -->
                    STORE_PERM(
                        LOAD_PERM(${industry.perm_storage.current_production_ratio})
                        + (
                            (current_date - LOAD_PERM(${date_received_storage_number})) <= ${global_constants.secondary_production_span}
                            ? ${input_cargo[1]} : 0
                        ),
                        ${industry.perm_storage.current_production_ratio}
                    ),
                    </tal:date_received>
                </tal:input_cargos>
                <!--! add to total amount produced;
                      note that production_ratio is a value 0..8, and is divided by 8 in the calculation here - this is to account for integer maths
                      note also that this has to be in a separate loop to the ratio calculation, have sum ratio over all input cargos before calculating production from each input cargo
                -->
                <tal:total_production repeat="input_cargo industry.get_property('accept_cargos_with_input_ratios', economy)">
                    STORE_PERM(
                        LOAD_PERM(${industry.perm_storage.total_cargo_produced_this_cycle})
                        + ((incoming_cargo_waiting("${input_cargo[0]}") * LOAD_PERM(${industry.perm_storage.current_production_ratio})) / 8),
                        ${industry.perm_storage.total_cargo_produced_this_cycle}
                    ),
                </tal:total_production>
                <!--! if any cargo was produced, reset the closure countdown  -->
                <!--! !! unclear if this is working, separate closure template needs updated for n cargos, currently depends on 3 -->
                STORE_PERM(
                    (LOAD_PERM(${industry.perm_storage.total_cargo_produced_this_cycle}) == 0)
                    ? LOAD_PERM(${industry.perm_storage.closure_counter}) : 0,
                    ${industry.perm_storage.closure_counter}
                ),
            ]) {
        ${industry.id}_produce_${economy.numeric_id};
    }
</tal:economies>

switch (FEAT_INDUSTRIES, SELF, ${industry.id}_produce_cargo_arrival, economy) {
    <tal:economies repeat="economy economies">
        ${economy.numeric_id}: ${industry.id}_produce_calculation_${economy.numeric_id};
    </tal:economies>
}

