/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

/* ******************************************************************
 * Definition of the industry tile, its callbacks, and graphics chain
 * ******************************************************************/

<tal:include metal:use-macro="load: spritesets.pynml" />

<tal:include metal:use-macro="load: spritelayouts.pynml" />

<tal:include metal:use-macro="load: layout_graphics_switches.pynml" />

<tal:include metal:use-macro="load: fence_switches.pynml" />

<tal:include metal:use-macro="load: tile_location_checks.pynml" />

<tal:include metal:use-macro="load: tile_properties.pynml" />


/* *************************************************
 * Definition of the industry
 * *************************************************/

<tal:include metal:use-macro="load: industry_layouts.pynml" />


/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    2
#define THIS_PROD_RATIO_CARGO1    6
#define THIS_PROD_RATIO_CARGO2    6
#define THIS_PROD_RATIO_CARGO3    0
#define THIS_BOOST_12             0
#define THIS_BOOST_13             0
#define THIS_BOOST_21             0
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0

#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY

SWITCH_COLOUR_SCHEME2(${industry.id}_colour)

#include "../../src/templates/produce_secondary.pnml"
#include "../../src/templates/check_secondary_production_level.pnml"
#include "../../src/templates/check_secondary_closure.pnml"

${industry.get_extra_text_secondary()}

<!--! snakebite migration support, the CPP template that needs this define *could* be rewritten to python -->
<tal:intro_year condition="industry.intro_year is not None">
    #define THIS_MIN_YEAR ${industry.intro_year}
</tal:intro_year>
#include "../../src/templates/check_availability.pnml"

<tal:include metal:use-macro="load: industry_location_checks.pynml" />

<tal:include metal:use-macro="load: industry_properties.pynml" />

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:   ${industry.id}_produce;
		monthly_prod_change:     ${industry.id}_check_production_level;
		random_prod_change:      ${industry.id}_check_closure;
		extra_text_industry:     ${industry.id}_extra_text;
		colour:                  ${industry.id}_colour;
	}
}

#include "../../src/templates/undefs.pnml"
