/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

/* Production template for secondary industries with equal output to all output cargos
 *
 * Delivery period to consider a cargo for production ratios is the the last var_production_span days
 *
 * It accepts up to three input cargos and produces up to two output cargos
 * It uses the following permanent storages:
 *
 * var_date_received_1, var_date_received_2, var_date_received_3
 * var_input_cargo_1, var_input_cargo_2, var_input_cargo_3
 * var_ratio_cargo_1, var_ratio_cargo_2, var_ratio_cargo_3
 * var_production_span
 *
 * Needed defines in the industry's pnml which uses this template.
 *
 * PRODUCTION_SPAN           time span which is considered for production ratios
 *
 */

/* granularity of production. That amount of input (per cargo) is needed in order to be processed */
#define MAX_SUM_PROD_RATIO 8

/* Temporary variables used within this template (these are the temp register numbers) */
#define var_received_timely_1       0
#define var_received_timely_2       1
#define var_received_timely_3       2
#define var_num_output_cargos       3

produce (${industry.id}_simple_produce, waiting_cargo_1, waiting_cargo_2, waiting_cargo_3,
			LOAD_PERM(var_leftover_cargo_1) / MAX_SUM_PROD_RATIO / LOAD_TEMP(var_num_output_cargos) * LOAD_PERM(var_ratio_cargo_1) +
			LOAD_PERM(var_leftover_cargo_2) / MAX_SUM_PROD_RATIO / LOAD_TEMP(var_num_output_cargos) * LOAD_PERM(var_ratio_cargo_2) +
			LOAD_PERM(var_leftover_cargo_3) / MAX_SUM_PROD_RATIO / LOAD_TEMP(var_num_output_cargos) * LOAD_PERM(var_ratio_cargo_3),

			LOAD_PERM(var_leftover_cargo_1) / MAX_SUM_PROD_RATIO / LOAD_TEMP(var_num_output_cargos) * LOAD_PERM(var_ratio_cargo_1) +
			LOAD_PERM(var_leftover_cargo_2) / MAX_SUM_PROD_RATIO / LOAD_TEMP(var_num_output_cargos) * LOAD_PERM(var_ratio_cargo_2) +
			LOAD_PERM(var_leftover_cargo_3) / MAX_SUM_PROD_RATIO / LOAD_TEMP(var_num_output_cargos) * LOAD_PERM(var_ratio_cargo_3),
			[
			/* Remove any remainder */
			STORE_PERM( LOAD_PERM(var_leftover_cargo_1) % (MAX_SUM_PROD_RATIO * LOAD_TEMP(var_num_output_cargos)), var_leftover_cargo_1),
			STORE_PERM( LOAD_PERM(var_leftover_cargo_2) % (MAX_SUM_PROD_RATIO * LOAD_TEMP(var_num_output_cargos)), var_leftover_cargo_2),
			STORE_PERM( LOAD_PERM(var_leftover_cargo_3) % (MAX_SUM_PROD_RATIO * LOAD_TEMP(var_num_output_cargos)), var_leftover_cargo_3),
			0
			]
);

switch(FEAT_INDUSTRIES, SELF, ${industry.id}_num_output_cargos, [STORE_TEMP(${industry.get_expression_for_num_output_cargos_per_economy()}, var_num_output_cargos)]) {
    ${industry.id}_simple_produce;
}

<tal:economies repeat="economy economies">
    switch (FEAT_INDUSTRIES, SELF, ${industry.id}_produce_economy_${economy.numeric_id},
            [
            /* Update the 'last delivery date' for the three input cargos */
            STORE_PERM( max(LOAD_PERM(var_date_received_1),(waiting_cargo_1 > 0) * current_date), var_date_received_1),
            STORE_PERM( max(LOAD_PERM(var_date_received_2),(waiting_cargo_2 > 0) * current_date), var_date_received_2),
            STORE_PERM( max(LOAD_PERM(var_date_received_3),(waiting_cargo_3 > 0) * current_date), var_date_received_3),
            /* Reset the closure countdown */
            STORE_PERM( (waiting_cargo_1 == 0 && waiting_cargo_2 == 0 && waiting_cargo_3 == 0) * LOAD_PERM(var_closure_counter), var_closure_counter),

            /* Store the delivered cargo permanently (for debugging purposes only, reset at beginning of month) */
            STORE_PERM( LOAD_PERM(var_input_cargo_1) + waiting_cargo_1, var_input_cargo_1),
            STORE_PERM( LOAD_PERM(var_input_cargo_2) + waiting_cargo_2, var_input_cargo_2),
            STORE_PERM( LOAD_PERM(var_input_cargo_3) + waiting_cargo_3, var_input_cargo_3),

            /* Check whether the cargos were delivered within the time frame to be considered delivered concurrently */
            STORE_TEMP( (current_date - LOAD_PERM(var_date_received_1)) <= PRODUCTION_SPAN, var_received_timely_1),
            STORE_TEMP( (current_date - LOAD_PERM(var_date_received_2)) <= PRODUCTION_SPAN, var_received_timely_2),
            STORE_TEMP( (current_date - LOAD_PERM(var_date_received_3)) <= PRODUCTION_SPAN, var_received_timely_3),

            /* Calculate current production ratios for the individual cargos */
            STORE_PERM( ${industry.get_prod_ratio(1,economy)} +
                        LOAD_TEMP(var_received_timely_2) * ${industry.get_boost(2,1,economy)} +
                        LOAD_TEMP(var_received_timely_3) * ${industry.get_boost(3,1,economy)},
                var_ratio_cargo_1
            ),
            STORE_PERM( ${industry.get_prod_ratio(2,economy)} +
                        LOAD_TEMP(var_received_timely_1) * ${industry.get_boost(1,2,economy)} +
                        LOAD_TEMP(var_received_timely_3) * ${industry.get_boost(3,2,economy)},
                var_ratio_cargo_2
            ),
            STORE_PERM( ${industry.get_prod_ratio(3,economy)} +
                        LOAD_TEMP(var_received_timely_1) * ${industry.get_boost(1,3,economy)} +
                        LOAD_TEMP(var_received_timely_2) * ${industry.get_boost(2,3,economy)},
                var_ratio_cargo_3
            ),

            /* Add the remainder to the current leftover cargos */
            STORE_PERM( LOAD_PERM(var_leftover_cargo_1) + waiting_cargo_1, var_leftover_cargo_1),
            STORE_PERM( LOAD_PERM(var_leftover_cargo_2) + waiting_cargo_2, var_leftover_cargo_2),
            STORE_PERM( LOAD_PERM(var_leftover_cargo_3) + waiting_cargo_3, var_leftover_cargo_3),

            1
            ]) {
        ${industry.id}_num_output_cargos;
    }
</tal:economies>

switch (FEAT_INDUSTRIES, SELF, ${industry.id}_produce, economy) {
    <tal:economies repeat="economy economies">
        ${economy.numeric_id}: ${industry.id}_produce_economy_${economy.numeric_id};
    </tal:economies>
}

#undef MAX_SUM_PROD_RATIO
#undef var_received_timely_1
#undef var_received_timely_2
#undef var_received_timely_3
