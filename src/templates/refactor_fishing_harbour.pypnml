/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

<tal:include metal:use-macro="load: spritesets.pynml" />

<tal:include metal:use-macro="load: spritelayouts.pynml" />

switch(FEAT_INDUSTRYTILES, SELF, fishing_harbour_slope_switch_1, nearby_tile_slope(0,0)) {
	0: ${industry.id}_spritelayout_10;
	1: ${industry.id}_spritelayout_4;
	2: ${industry.id}_spritelayout_8;
	3: ${industry.id}_spritelayout_9;
	4: ${industry.id}_spritelayout_6;
	5: ${industry.id}_spritelayout_5;
	6: ${industry.id}_spritelayout_7;
	7: ${industry.id}_spritelayout_10;
	8: ${industry.id}_spritelayout_3;
	9: ${industry.id}_spritelayout_4;
	10: ${industry.id}_spritelayout_8;
	11: ${industry.id}_spritelayout_9;
	12: ${industry.id}_spritelayout_6;
	13: ${industry.id}_spritelayout_5;
	14: ${industry.id}_spritelayout_7;
	${industry.id}_spritelayout_10;
}

switch(FEAT_INDUSTRYTILES, SELF, fishing_harbour_slope_switch_2, nearby_tile_slope(0,0)) {
	0: ${industry.id}_spritelayout_20;
	1: ${industry.id}_spritelayout_14;
	2: ${industry.id}_spritelayout_18;
	3: ${industry.id}_spritelayout_19;
	4: ${industry.id}_spritelayout_16;
	5: ${industry.id}_spritelayout_15;
	6: ${industry.id}_spritelayout_17;
	7: ${industry.id}_spritelayout_20;
	8: ${industry.id}_spritelayout_13;
	9: ${industry.id}_spritelayout_14;
	10: ${industry.id}_spritelayout_18;
	11: ${industry.id}_spritelayout_19;
	12: ${industry.id}_spritelayout_16;
	13: ${industry.id}_spritelayout_15;
	14: ${industry.id}_spritelayout_17;
	${industry.id}_spritelayout_20;
}

<tal:include metal:use-macro="load: layout_graphics_switches.pynml" />

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_1, TILE_FISHINGHARBOUR_1) {
	property {
		substitute:       0;
		accepted_cargos:  [[MNSP, 8], [FISH, 8]];
		land_shape_flags: bitmask(LSF_ONLY_ON_FLAT_LAND);
	}

	graphics {
		${industry.id}_industry_master_graphics_switch;
	}
}

/* It must not be a flat tile */
TILE_CHECK_FLAT      (tile2_flat_check, return CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)

/* We allow on sea shores and on normal slopes - but not rivers and canals */
TILE_CHECK_WATERCLASS(tile2_land_check,     WATER_CLASS_NONE, ${industry.id}_tile2_flat_check, return CB_RESULT_LOCATION_DISALLOW)
TILE_CHECK_WATERCLASS(tile2_location_check, WATER_CLASS_SEA,  ${industry.id}_tile2_flat_check, ${industry.id}_tile2_land_check)

item(FEAT_INDUSTRYTILES, ${industry.id}_tile_2, TILE_FISHINGHARBOUR_2) {
	property {
		substitute:       0;
		accepted_cargos:  [[MNSP, 8], [FISH, 8]];
		land_shape_flags: bitmask(LSF_ALLOW_ON_WATER);
	}

	graphics {
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		tile_check:  ${industry.id}_tile2_location_check;
		${industry.id}_industry_master_graphics_switch;
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

<tal:include metal:use-macro="load: industry_layouts.pynml" />

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    1
#define THIS_PROD_RATIO_CARGO1    3
#define THIS_PROD_RATIO_CARGO2    5
#define THIS_PROD_RATIO_CARGO3    0
#define THIS_BOOST_12             3
#define THIS_BOOST_13             0
#define THIS_BOOST_21             5
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0



CHECK_NEARBY_CLUSTER(fishing_grounds, 16, 60, 5, 4, return CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_FOUNDER       (${industry.id}_fishing_grounds)

#include "../../src/templates/produce_secondary.pnml"

<tal:include metal:use-macro="load: extra_text_secondary.pynml" />

<tal:include metal:use-macro="load: check_availability.pynml" />

<tal:include metal:use-macro="load: industry_properties.pynml" />

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:   ${industry.id}_produce;
		construction_probability:${industry.id}_check_availability;
		location_check:          ${industry.id}_check_location;
		monthly_prod_change:     check_secondary_production_level;
		random_prod_change:      check_secondary_closure;
		extra_text_industry:     ${industry.id}_extra_text;
		colour:                  switch_colour;
	}
}

#include "../../src/templates/undefs.pnml"
