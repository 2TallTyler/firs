/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) fruit_plantation ## __VA_ARGS__

item(FEAT_INDUSTRYTILES, THIS_ID(tile_plantation), 207) {
	property {
		substitute: 0;
		accepted_cargos: [[FMSP, 8]];
		land_shape_flags: 0;
	}
}

${industry.get_spritelayouts()}

switch(FEAT_INDUSTRYTILES, SELF, action2_4616, nearby_tile_slope(0,0)) {
	0: action2_4597;
	1: action2_4598;
	2: action2_4599;
	3: action2_4600;
	4: action2_4601;
	5: action2_4602;
	6: action2_4603;
	7: action2_4604;
	8: action2_4605;
	9: action2_4606;
	10: action2_4607;
	11: action2_4608;
	12: action2_4609;
	13: action2_4610;
	14: action2_4611;
	29: action2_4612;
	23: action2_4613;
	27: action2_4614;
	30: action2_4615;
	action2_4597;
}


switch(FEAT_INDUSTRYTILES, SELF, action2_4639, nearby_tile_slope(0,0)) {
	0: action2_4620;
	1: action2_4621;
	2: action2_4622;
	3: action2_4623;
	4: action2_4624;
	5: action2_4625;
	6: action2_4626;
	7: action2_4627;
	8: action2_4628;
	9: action2_4629;
	10: action2_4630;
	11: action2_4631;
	12: action2_4632;
	13: action2_4633;
	14: action2_4634;
	29: action2_4635;
	23: action2_4636;
	27: action2_4637;
	30: action2_4638;
	action2_4620;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_4661, nearby_tile_slope(0,0)) {
	0: action2_4642;
	1: action2_4643;
	2: action2_4644;
	3: action2_4645;
	4: action2_4646;
	5: action2_4647;
	6: action2_4648;
	7: action2_4649;
	8: action2_4650;
	9: action2_4651;
	10: action2_4652;
	11: action2_4653;
	12: action2_4654;
	13: action2_4655;
	14: action2_4656;
	29: action2_4657;
	23: action2_4658;
	27: action2_4659;
	30: action2_4660;
	action2_4642;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_4683, nearby_tile_slope(0,0)) {
	0: action2_4664;
	1: action2_4665;
	2: action2_4666;
	3: action2_4667;
	4: action2_4668;
	5: action2_4669;
	6: action2_4670;
	7: action2_4671;
	8: action2_4672;
	9: action2_4673;
	10: action2_4674;
	11: action2_4675;
	12: action2_4676;
	13: action2_4677;
	14: action2_4678;
	29: action2_4679;
	23: action2_4680;
	27: action2_4681;
	30: action2_4682;
	action2_4664;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_4705, nearby_tile_slope(0,0)) {
	0: action2_4686;
	1: action2_4687;
	2: action2_4688;
	3: action2_4689;
	4: action2_4690;
	5: action2_4691;
	6: action2_4692;
	7: action2_4693;
	8: action2_4694;
	9: action2_4695;
	10: action2_4696;
	11: action2_4697;
	12: action2_4698;
	13: action2_4699;
	14: action2_4700;
	29: action2_4701;
	23: action2_4702;
	27: action2_4703;
	30: action2_4704;
	action2_4686;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_4727, nearby_tile_slope(0,0)) {
	0: action2_4708;
	1: action2_4709;
	2: action2_4710;
	3: action2_4711;
	4: action2_4712;
	5: action2_4713;
	6: action2_4714;
	7: action2_4715;
	8: action2_4716;
	9: action2_4717;
	10: action2_4718;
	11: action2_4719;
	12: action2_4720;
	13: action2_4721;
	14: action2_4722;
	29: action2_4723;
	23: action2_4724;
	27: action2_4725;
	30: action2_4726;
	action2_4708;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_4730, ((nearby_tile_height(0,0) - snowline_height) + 1)) {
	0..7: action2_4661;
	8..15: action2_4683;
	16..23: action2_4705;
	24..127: action2_4727;
	action2_4639;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_4750, nearby_tile_slope(0,0)) {
	0: action2_4731;
	1: action2_4732;
	2: action2_4733;
	3: action2_4734;
	4: action2_4735;
	5: action2_4736;
	6: action2_4737;
	7: action2_4738;
	8: action2_4739;
	9: action2_4740;
	10: action2_4741;
	11: action2_4742;
	12: action2_4743;
	13: action2_4744;
	14: action2_4745;
	29: action2_4746;
	23: action2_4747;
	27: action2_4748;
	30: action2_4749;
	action2_4731;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_4772, nearby_tile_slope(0,0)) {
	0: action2_4753;
	1: action2_4754;
	2: action2_4755;
	3: action2_4756;
	4: action2_4757;
	5: action2_4758;
	6: action2_4759;
	7: action2_4760;
	8: action2_4761;
	9: action2_4762;
	10: action2_4763;
	11: action2_4764;
	12: action2_4765;
	13: action2_4766;
	14: action2_4767;
	29: action2_4768;
	23: action2_4769;
	27: action2_4770;
	30: action2_4771;
	action2_4753;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_4775, terrain_type) {
	TILETYPE_DESERT: action2_4772;
	action2_4750;
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(tile_plantation_spritelayout), climate) {
	CLIMATE_TEMPERATE: action2_4616;
	CLIMATE_ARCTIC: action2_4730;
	CLIMATE_TROPIC: action2_4775;
	action2_4616;
}

/* ***************
 * tile with house
 * ***************/

spriteset(spriteset_4792, "src/graphics/industries/fruit_plantation_1.png") { tmpl_building_sprite(10, 10, 59, -28) }
spritelayout THIS_ID(tile_house_spritelayout) {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_4792;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		xextent: 7;
		yextent: 7;
		zextent: 7;
	}
}


/* ****************************************************
 * Definition of the industry tiles and their callbacks
 * ***************************************************/

TILE_DISALLOW_NEARBY_CLASS(tile_plantation_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW,      return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (tile_plantation_player_check,                                                                 THIS_ID(tile_plantation_nearby_industry))
TILE_CHECK_WATER          (tile_plantation_water_check,                          string(STR_ERR_LOCATION_NOT_ON_WATER),  THIS_ID(tile_plantation_player_check))
TILE_CHECK_HEIGHT         (tile_plantation_location_check,  0, snowline_height,  THIS_ID(tile_plantation_water_check),   return string(STR_ERR_LOCATION_NOT_ABOVE_SNOWLINE))

item(FEAT_INDUSTRYTILES, THIS_ID(tile_plantation), TILE_FRUITPLANTATION_1) {
	property {
		substitute:       0;
		accepted_cargos:  [[FMSP, 8]];
		land_shape_flags: 0;
	}
	graphics {
		foundations: return CB_RESULT_NO_FOUNDATIONS;
		autoslope:   return CB_RESULT_NO_AUTOSLOPE;
		tile_check:  THIS_ID(tile_plantation_location_check);
		THIS_ID(tile_plantation_spritelayout);
	}
}



TILE_DISALLOW_NEARBY_CLASS(tile_house_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW,      return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (tile_house_player_check,                                                                 THIS_ID(tile_house_nearby_industry))
TILE_CHECK_WATER          (tile_house_water_check,                          string(STR_ERR_LOCATION_NOT_ON_WATER),  THIS_ID(tile_house_player_check))
TILE_CHECK_HEIGHT         (tile_house_location_check,  0, snowline_height,  THIS_ID(tile_house_water_check),   return string(STR_ERR_LOCATION_NOT_ABOVE_SNOWLINE))

item(FEAT_INDUSTRYTILES, THIS_ID(tile_house), TILE_FRUITPLANTATION_2) {
	property {
		substitute:       0;
		accepted_cargos:  [[FMSP, 8]];
		land_shape_flags: 0;
	}
	graphics {
		autoslope:  return CB_RESULT_AUTOSLOPE;
		tile_check: THIS_ID(tile_house_location_check);
		THIS_ID(tile_house_spritelayout);
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

tilelayout tilelayout_5807_1 {
	0, 0: THIS_ID(tile_plantation);
	0, 1: THIS_ID(tile_plantation);
	0, 2: THIS_ID(tile_plantation);
	1, 0: THIS_ID(tile_plantation);
	1, 1: THIS_ID(tile_plantation);
	1, 2: THIS_ID(tile_plantation);
	2, 1: THIS_ID(tile_plantation);
	2, 2: THIS_ID(tile_house);
}

tilelayout tilelayout_5807_2 {
	0, 0: THIS_ID(tile_plantation);
	0, 1: THIS_ID(tile_plantation);
	0, 2: THIS_ID(tile_plantation);
	0, 3: THIS_ID(tile_plantation);
	1, 1: THIS_ID(tile_plantation);
	1, 2: THIS_ID(tile_plantation);
	1, 3: THIS_ID(tile_plantation);
	1, 4: THIS_ID(tile_house);
}

tilelayout tilelayout_5807_3 {
	0, 0: THIS_ID(tile_plantation);
	0, 1: THIS_ID(tile_plantation);
	1, 0: THIS_ID(tile_plantation);
	1, 1: THIS_ID(tile_plantation);
	2, 0: THIS_ID(tile_plantation);
	2, 1: THIS_ID(tile_plantation);
	3, 0: THIS_ID(tile_plantation);
	3, 1: THIS_ID(tile_house);
}

tilelayout tilelayout_5807_4 {
	0, 0: THIS_ID(tile_plantation);
	0, 1: THIS_ID(tile_plantation);
	0, 3: THIS_ID(tile_plantation);
	0, 4: THIS_ID(tile_plantation);
	1, 0: THIS_ID(tile_plantation);
	1, 1: THIS_ID(tile_plantation);
	1, 3: THIS_ID(tile_plantation);
	1, 4: THIS_ID(tile_plantation);
	3, 0: THIS_ID(tile_plantation);
	3, 1: THIS_ID(tile_plantation);
	3, 3: THIS_ID(tile_plantation);
	3, 4: THIS_ID(tile_plantation);
	4, 0: THIS_ID(tile_plantation);
	4, 1: THIS_ID(tile_house);
	4, 3: THIS_ID(tile_plantation);
	4, 4: THIS_ID(tile_plantation);
}


/* *************************************************
 * Definition of the industry
 * *************************************************/

#define THIS_STR_EXTRA_SUPPLIES        STR_EXTRA_FARM_SUPPLIES

CHECK_NEARBY_CLUSTER(fruit_plantation, 10, 36, 3, 4, return CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_INCOMPATIBLE  (brewery,          16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(fruit_plantation))
CHECK_FOUNDER       (THIS_ID(brewery))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../src/templates/produce_primary.pnml"
#include "../src/templates/check_primary_production_level.pnml"

#include "../src/templates/extra_text_primary.pnml"

#include "../src/templates/check_availability.pnml"

${industry.get_industry_properties()}

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		construction_probability:THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		produce_256_ticks:       THIS_ID(produce_256_ticks);
		monthly_prod_change:     THIS_ID(monthly_update);
        random_prod_change:      return CB_RESULT_IND_PROD_NO_CHANGE;
		build_prod_change:       randomise_primary_production_on_build;
		extra_text_fund:         return string(STR_FUND_FRUIT_PLANTATION);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}

#include "../src/templates/undefs.pnml"
