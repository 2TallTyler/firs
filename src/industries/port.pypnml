/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */


#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

${industry.get_spritesets()}

${industry.get_spritelayouts()}

${industry.get_industry_layouts_as_graphic_switches()}

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

CHECK_ROAD_ADJACENT     (tile_road_adjacent_4, -1, 0, return CB_RESULT_LOCATION_DISALLOW)
CHECK_ROAD_ADJACENT     (tile_road_adjacent_3, 0, -1, ${industry.id}_tile_road_adjacent_4)
CHECK_ROAD_ADJACENT     (tile_road_adjacent_2, 1, 0,  ${industry.id}_tile_road_adjacent_3)
CHECK_ROAD_ADJACENT     (tile_road_adjacent_1, 0, 1, ${industry.id}_tile_road_adjacent_2)
TILE_ALLOW_PLAYER       (terrain_check, ${industry.id}_tile_road_adjacent_1)


<tal:build_economies repeat="economy global_constants.economies">
    if (economy==${repeat.economy.index}) {
        <tal:industry_on_or_off condition="industry.get_property('disabled', economy) != True">
        item(FEAT_INDUSTRYTILES, ${industry.id}_tile, TILE_PORT_1) {
            property {
                substitute:       0;
                land_shape_flags: bitmask(LSF_ONLY_ON_FLAT_LAND);
                <!--! don't use declaration magic for these props that use lists -->
                accepted_cargos: [${','.join(['['+ i +', 8]' for i in industry.get_property('accept_cargo_types', economy)])}];
            }
        }
        </tal:industry_on_or_off>
    }
</tal:build_economies>


item(FEAT_INDUSTRYTILES, ${industry.id}_tile, TILE_PORT_1) {
	graphics {
		tile_check:  ${industry.id}_terrain_check;
		${industry.id}_industry_master_graphics_switch;
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

${industry.get_industry_layouts_as_tilelayouts()}

/* *************************************************
 * Definition of the industry
 * *************************************************/

#include "../src/templates/check_availability.pnml"

CHECK_INCOMPATIBLE  (port, 16, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_FOUNDER       (${industry.id}_port)

${industry.get_industry_properties()}

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		construction_probability:${industry.id}_check_availability;
		location_check:          ${industry.id}_check_location;
	}
}

#include "../src/templates/undefs.pnml"
