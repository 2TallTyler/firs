/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

${industry.get_spritesets()}

${industry.get_spritelayouts()}

${industry.get_industry_layouts_as_graphic_switches()}

${industry.get_fence_switches()}

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(tile1_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (tile1_player_check,                                                            ${industry.id}_tile1_nearby_industry)
TILE_DISALLOW_SLOPES      (tile1_location_check,                       CB_RESULT_LOCATION_DISALLOW, ${industry.id}_tile1_player_check)

item(FEAT_INDUSTRYTILES, ${industry.id}_tile, TILE_METALWORKSHOP_1) {
	property {
		substitute:       0;
		accepted_cargos:  [[STEL, 8],[RFPR, 8]];
		land_shape_flags: bitmask(LSF_ONLY_ON_FLAT_LAND);
		animation_info:   [ANIMATION_LOOPING, 47];
		animation_speed:  2;
	}

	graphics {
		tile_check:  ${industry.id}_tile1_location_check;
		${industry.id}_tile_fences;
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

${industry.get_industry_layouts_as_tilelayouts()}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    2
#define THIS_PROD_RATIO_CARGO1    6
#define THIS_PROD_RATIO_CARGO2    2
#define THIS_PROD_RATIO_CARGO3    0
#define THIS_BOOST_12             6
#define THIS_BOOST_13             2
#define THIS_BOOST_21             0
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0
/* extra text template */
#define THIS_STR_EXTRA_TEXT       ${industry.default_industry_properties.extra_text_industry}
#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY
/* availability years - also update available from strings if changing these */
#define THIS_MIN_YEAR 1762


CHECK_INCOMPATIBLE(metal_workshop, 56, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_FOUNDER     (${industry.id}_metal_workshop)

SWITCH_COLOUR_SCHEME1(${industry.id}_colour)

#include "../src/templates/produce_secondary.pnml"
#include "../src/templates/check_secondary_production_level.pnml"
#include "../src/templates/check_secondary_closure.pnml"

#include "../src/templates/extra_text_secondary.pnml"

#include "../src/templates/check_availability.pnml"

${industry.get_industry_properties()}

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:   ${industry.id}_produce;
		construction_probability:${industry.id}_check_availability;
		location_check:          ${industry.id}_check_location;
		monthly_prod_change:     ${industry.id}_check_production_level;
		random_prod_change:      ${industry.id}_check_closure;
		extra_text_industry:     ${industry.id}_extra_text;
		extra_text_fund:         return string(STR_FUND_AVAILABLE_FROM, THIS_MIN_YEAR);
		colour:                  ${industry.id}_colour;
	}
}

#include "../src/templates/undefs.pnml"
