/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#include "../src/templates/spritelayout_templates.pnml"

#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

spriteset(THIS_ID(spriteset_1), "src/graphics/industries/mixed_farm.png") { tmpl_building_sprite(10, 10, 52, -21) }
spriteset(THIS_ID(spriteset_2), "src/graphics/industries/mixed_farm.png") { tmpl_building_sprite(80, 10, 52, -21) }
spriteset(THIS_ID(spriteset_3), "src/graphics/industries/mixed_farm.png") { tmpl_building_sprite(150, 10, 52, -21) }
spriteset(THIS_ID(spriteset_4), "src/graphics/industries/mixed_farm.png") { tmpl_building_sprite(220, 10, 52, -21) }
spriteset(THIS_ID(spriteset_5), "src/graphics/industries/mixed_farm.png") { tmpl_building_sprite(290, 10, 52, -21) }
spriteset(THIS_ID(spriteset_6), "src/graphics/industries/mixed_farm.png") { tmpl_building_sprite(360, 10, 52, -21) }
spriteset(THIS_ID(spriteset_7), "src/graphics/industries/mixed_farm.png") { tmpl_building_sprite(430, 10, 52, -21) }
spriteset(THIS_ID(spriteset_8), "src/graphics/industries/mixed_farm.png") { tmpl_building_sprite(500, 10, 52, -21) }

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_1), GROUNDSPRITE_CLEARED, THIS_ID(spriteset_1), 64)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_2), GROUNDSPRITE_CLEARED, THIS_ID(spriteset_2), 32)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_3), GROUNDSPRITE_CLEARED, THIS_ID(spriteset_3), 32)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_4), GROUNDSPRITE_NORMAL, THIS_ID(spriteset_4), 32)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_5), GROUNDSPRITE_NORMAL, THIS_ID(spriteset_5), 32)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_6), GROUNDSPRITE_NORMAL, THIS_ID(spriteset_6), 32)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_7), GROUNDSPRITE_NORMAL, THIS_ID(spriteset_7), 32)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_8), GROUNDSPRITE_NORMAL, THIS_ID(spriteset_8), 32)

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_1), relative_pos) {
	relative_coord(2, 0): THIS_ID(spritelayout_1);
	relative_coord(1, 0): THIS_ID(spritelayout_2);
	relative_coord(0, 3): THIS_ID(spritelayout_3);
	relative_coord(3, 3): THIS_ID(spritelayout_4);
	relative_coord(2, 2): THIS_ID(spritelayout_5);
	relative_coord(3, 2): THIS_ID(spritelayout_6);
	relative_coord(2, 3): THIS_ID(spritelayout_7);
	THIS_ID(spritelayout_8);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_2), relative_pos) {
	relative_coord(1, 3): THIS_ID(spritelayout_1);
	relative_coord(2, 2): THIS_ID(spritelayout_2);
	relative_coord(2, 1): THIS_ID(spritelayout_3);
	relative_coord(0, 0): THIS_ID(spritelayout_4);
	relative_coord(1, 0): THIS_ID(spritelayout_5);
	relative_coord(0, 3): THIS_ID(spritelayout_6);
	relative_coord(0, 2): THIS_ID(spritelayout_7);
	THIS_ID(spritelayout_8);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_3), relative_pos) {
	relative_coord(0, 1): THIS_ID(spritelayout_1);
	relative_coord(1, 2): THIS_ID(spritelayout_2);
	relative_coord(1, 0): THIS_ID(spritelayout_3);
	relative_coord(3, 0): THIS_ID(spritelayout_4);
	relative_coord(0, 2): THIS_ID(spritelayout_5);
	relative_coord(3, 2): THIS_ID(spritelayout_6);
	relative_coord(2, 0): THIS_ID(spritelayout_7);
	THIS_ID(spritelayout_8);
}

switch(FEAT_INDUSTRYTILES, PARENT, THIS_ID(tile_spritelayout), layout_num) {
	1: THIS_ID(layout_1);
	2: THIS_ID(layout_2);
	3: THIS_ID(layout_3);
	THIS_ID(spritelayout_1);
}

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

/* Allow players to build it also on snow and in the desert */
TILE_DISALLOW_NEARBY_CLASS(tile_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_DISALLOW_STEEP_SLOPE (tile_slope_check, string(STR_ERR_LOCATION_NOT_ON_STEEP_SLOPE), THIS_ID(tile_nearby_industry))
TILE_ALLOW_PLAYER         (tile_player_check, THIS_ID(tile_slope_check))
TILE_CHECK_HEIGHT         (tile_height_check, 0, snowline_height, THIS_ID(tile_player_check), return string(STR_ERR_LOCATION_NOT_ABOVE_SNOWLINE))
TILE_DISALLOW_TERRAIN     (tile_desert_check, TILETYPE_DESERT, string(STR_ERR_LOCATION_NOT_IN_DESERT), THIS_ID(tile_height_check))
TILE_CHECK_WATER          (tile_location_check, string(STR_ERR_LOCATION_NOT_ON_WATER), THIS_ID(tile_desert_check))

item(FEAT_INDUSTRYTILES, THIS_ID(tile), TILE_MIXEDFARM_1) {
	property {
		substitute:       0;
		accepted_cargos:  [[FMSP, 8]];
		land_shape_flags: 0;
	}

	graphics {
		tile_check:   THIS_ID(tile_location_check);
		THIS_ID(tile_spritelayout);
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

tilelayout tilelayout_mixed_farm_1 {
	0, 2: THIS_ID(tile);
	0, 3: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 2: THIS_ID(tile);
	2, 3: THIS_ID(tile);
	3, 2: THIS_ID(tile);
	3, 3: THIS_ID(tile);
}

tilelayout tilelayout_mixed_farm_2 {
	0, 0: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	0, 3: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 3: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	2, 2: THIS_ID(tile);
}

tilelayout tilelayout_mixed_farm_3 {
	0, 0: THIS_ID(tile);
	0, 1: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 2: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	3, 2: THIS_ID(tile);
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

#define THIS_STR_EXTRA_SUPPLIES        STR_EXTRA_FARM_SUPPLIES

CHECK_NEARBY_CLUSTER(mixed_farm,     10, 36, 1, 2, return CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_INCOMPATIBLE  (stockyard,      16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(mixed_farm))
CHECK_INCOMPATIBLE  (textile_mill,   16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(stockyard))
CHECK_INCOMPATIBLE  (plastics_plant, 16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(textile_mill))
CHECK_FOUNDER       (THIS_ID(plastics_plant))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../src/templates/produce_primary.pnml"
#include "../src/templates/check_primary_production_level.pnml"

#include "../src/templates/extra_text_primary.pnml"

#include "../src/templates/check_availability.pnml"

${industry.get_industry_properties()}

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		construction_probability:THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		produce_256_ticks:       THIS_ID(produce_256_ticks);
		monthly_prod_change:     THIS_ID(monthly_update);
		random_prod_change:      THIS_ID(check_closure);
		build_prod_change:       randomise_primary_production_on_build;
		extra_text_fund:         return string(STR_FUND_MIXED_FARM);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}

#include "../src/templates/undefs.pnml"
