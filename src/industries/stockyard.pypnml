/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */


#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

${industry.get_spritesets()}

${industry.get_spritelayouts()}

${industry.get_industry_layouts_as_graphic_switches()}

${industry.get_fence_switches()}

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (player_check,                                                            THIS_ID(nearby_industry))
TILE_DISALLOW_SLOPES      (location_check,                       CB_RESULT_LOCATION_DISALLOW, THIS_ID(player_check))

item(FEAT_INDUSTRYTILES, THIS_ID(tile), TILE_STOCKYARD_1) {
	property {
		substitute: 0;
		accepted_cargos: [[LVST, 8], [MNSP, 8]];
		land_shape_flags: bitmask(LSF_ONLY_ON_FLAT_LAND);
		special_flags:      bitmask(INDTILE_FLAG_RANDOM_ANIMATION);
		animation_info:     [ANIMATION_LOOPING, 7];
		animation_speed:    3;
		animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_CONSTRUCTION_STATE);
	}

	graphics {
		tile_check:   THIS_ID(location_check);
		THIS_ID(tile_fences);
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

${industry.get_industry_layouts_as_tilelayouts()}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    1
#define THIS_PROD_RATIO_CARGO1    3
#define THIS_PROD_RATIO_CARGO2    5
#define THIS_PROD_RATIO_CARGO3    0
#define THIS_BOOST_12             3
#define THIS_BOOST_13             0
#define THIS_BOOST_21             5
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0
/* extra text template */
#define THIS_STR_EXTRA_TEXT       ${industry.default_industry_properties.extra_text_industry}
#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY


CHECK_INCOMPATIBLE  (stockyard,     56, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_INCOMPATIBLE  (dairy_farm,    16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(stockyard))
CHECK_INCOMPATIBLE  (sheep_farm,    16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(dairy_farm))
CHECK_INCOMPATIBLE  (mixed_farm,    16, CB_RESULT_LOCATION_DISALLOW, THIS_ID(sheep_farm))
CHECK_FOUNDER       (THIS_ID(mixed_farm))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../src/templates/produce_secondary.pnml"
#include "../src/templates/check_secondary_production_level.pnml"
#include "../src/templates/check_secondary_closure.pnml"

#include "../src/templates/extra_text_secondary.pnml"

#include "../src/templates/check_availability.pnml"

${industry.get_industry_properties()}

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		construction_probability:THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}

#include "../src/templates/undefs.pnml"
