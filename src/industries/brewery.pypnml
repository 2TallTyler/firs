/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

${industry.get_spritesets()}

${industry.get_spritelayouts()}

${industry.get_industry_layouts_as_graphic_switches()}

${industry.get_fence_switches()}

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(tile_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (tile_player_check,                                                            ${industry.id}_tile_nearby_industry)
TILE_DISALLOW_SLOPES      (tile_location_check,                       CB_RESULT_LOCATION_DISALLOW, ${industry.id}_tile_player_check)

/* Return a random animation frame from the extra_callback_info1 */
switch(FEAT_INDUSTRYTILES, SELF, ${industry.id}_tile_anim_control, (extra_callback_info1 & 14)) {
	0: return 0;
	1: return 2;
	2: return 4;
	3: return 6;
	4: return 8;
	5: return 10;
	6: return 12;
	7: return 14;
	8: return 16;
	9: return 18;
	10: return 20;
	11: return 22;
	12: return 24;
	return CB_RESULT_NEXT_FRAME;
}

item(FEAT_INDUSTRYTILES, ${industry.id}_tile, TILE_BREWERY_1) {
	property {
		substitute:         0;
		accepted_cargos:    [[FRUT, 8], [GRAI, 8], [MNSP, 8]];
		land_shape_flags:   bitmask(LSF_ONLY_ON_FLAT_LAND);
		special_flags:      bitmask(INDTILE_FLAG_RANDOM_ANIMATION);
		animation_info:     [ANIMATION_LOOPING, 71];
		animation_speed:    2;
		animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_CONSTRUCTION_STATE);
	}
	graphics {
		anim_control: ${industry.id}_tile_anim_control;
		tile_check:   ${industry.id}_tile_location_check;
		${industry.id}_tile_fences;
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

${industry.get_industry_layouts_as_tilelayouts()}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    1
#define THIS_PROD_RATIO_CARGO1    3
#define THIS_PROD_RATIO_CARGO2    5
#define THIS_PROD_RATIO_CARGO3    5
#define THIS_BOOST_12             3
#define THIS_BOOST_13             3
#define THIS_BOOST_21             2
#define THIS_BOOST_23             0
#define THIS_BOOST_31             2
#define THIS_BOOST_32             0
#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY




CHECK_INCOMPATIBLE  (brewery,       56, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_INCOMPATIBLE  (arable_farm,   16, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_brewery)
CHECK_INCOMPATIBLE  (grain_mill,    16, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_arable_farm)
CHECK_TOWN_DISTANCE (town_distance,  0, 64, ${industry.id}_grain_mill)
CHECK_FOUNDER       (${industry.id}_town_distance)

SWITCH_COLOUR_SCHEME1(${industry.id}_colour)

#include "../../src/templates/produce_secondary.pnml"
#include "../../src/templates/check_secondary_production_level.pnml"
#include "../../src/templates/check_secondary_closure.pnml"
${industry.get_extra_text_switch()}

${industry.get_extra_text_switch()}

#include "../../src/templates/check_availability.pnml"

${industry.get_industry_properties()}

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:   ${industry.id}_produce;
		construction_probability:${industry.id}_check_availability;
		location_check:          ${industry.id}_check_location;
		monthly_prod_change:     ${industry.id}_check_production_level;
		random_prod_change:      ${industry.id}_check_closure;
        extra_text_industry:     ${industry.id}_extra_text;
		colour:                  ${industry.id}_colour;
	}
}

#include "../../src/templates/undefs.pnml"
