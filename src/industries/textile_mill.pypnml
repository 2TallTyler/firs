/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */


#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

${industry.get_spritesets()}

${industry.get_spritelayouts()}

${industry.get_industry_layouts_as_graphic_switches()}

${industry.get_fence_switches()}

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (player_check, ${industry.id}_nearby_industry)
TILE_DISALLOW_SLOPES      (location_check, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_player_check)

item(FEAT_INDUSTRYTILES, ${industry.id}_tile, TILE_TEXTILEMILL_1) {
	property {
		substitute:         0;
		accepted_cargos:    [[MNSP, 8], [WOOL, 8], [FICR, 8]];
		land_shape_flags:   bitmask(LSF_ONLY_ON_FLAT_LAND);
		animation_info:     [ANIMATION_LOOPING, 7];
		animation_speed:    3;
		animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_CONSTRUCTION_STATE);
	}

	graphics {
		tile_check:   ${industry.id}_location_check;
		${industry.id}_tile_fences;
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

${industry.get_industry_layouts_as_tilelayouts()}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    1
#define THIS_PROD_RATIO_CARGO1    3
#define THIS_PROD_RATIO_CARGO2    5
#define THIS_PROD_RATIO_CARGO3    5
#define THIS_BOOST_12             3
#define THIS_BOOST_13             3
#define THIS_BOOST_21             2
#define THIS_BOOST_23             0
#define THIS_BOOST_31             2
#define THIS_BOOST_32             0
#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY


CHECK_INCOMPATIBLE  (textile_mill, 56, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_INCOMPATIBLE  (mixed_farm,   16, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_textile_mill)
CHECK_INCOMPATIBLE  (sheep_farm,   16, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_mixed_farm)
CHECK_FOUNDER       (${industry.id}_sheep_farm)

SWITCH_COLOUR_SCHEME1(${industry.id}_colour)

#include "../src/templates/produce_secondary.pnml"
#include "../src/templates/check_secondary_production_level.pnml"
#include "../src/templates/check_secondary_closure.pnml"

${industry.get_extra_text_secondary()}

#include "../src/templates/check_availability.pnml"

${industry.get_industry_properties()}

item(FEAT_INDUSTRIES, ${industry.id}, ${industry.get_numeric_id()}) {
	graphics {
		produce_cargo_arrival:   ${industry.id}_produce;
		construction_probability:${industry.id}_check_availability;
		location_check:          ${industry.id}_check_location;
		monthly_prod_change:     ${industry.id}_check_production_level;
		random_prod_change:      ${industry.id}_check_closure;
		extra_text_industry:     ${industry.id}_extra_text;
		colour:                  ${industry.id}_colour;
	}
}

#include "../src/templates/undefs.pnml"
