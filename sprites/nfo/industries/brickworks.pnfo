// Defines for use in industry template
#define THIS_INDUSTRY                 IND_BRICKWORKS
#define THIS_NUM_INPUT_CARGOS         \d03
#define THIS_NUM_OUTPUT_CARGOS        \d01
#define THIS_PROD_RATIO_CARGO_IN_1    \d02
#define THIS_PROD_RATIO_CARGO_IN_2    \d04
#define THIS_PROD_RATIO_CARGO_IN_3    \d02
#define THIS_STR_INFO_CB3A            STR_INFO_BRICKWORKS
#define THIS_STR_INFO_CB38            STR_INFO_AVAILABILITY
#define THIS_INTRO_DATE               \d00
#define THIS_HANDLE_CB28              10 00

//Industry tiles definition

//Tile action 0
-1 * 0 00 09 \b6 01 TILE_BRICKWORKS_1 // -1 * 0 00 09 <num-props> 01 <id>
	08 TILE_NULL //subsitute type
	0A CARGO_COAL 08 //tile acceptance 1
	0B CARGO_CLAY 08 //tile acceptance 2
	0C CARGO_SAND 08 //tile acceptance 3
	0D 10 //land shape flags: 10 = only on flat land
	0E 10 //callback flags


//Industry tile sprites; one sprite for each tile; eventually more for each tile to include  construction stages

//Tile action 1
-1 * 0 01 09 \b5 \b1 //-1 * 0 01 09 <num-sets> <num-ent>
// Format: spritenum pcxfile xpos ypos compression ysize xsize xrel yrel
-1 sprites/pcx/industries/brickworks.pcx   10 10 09  101 64  -31 -64
-1 sprites/pcx/industries/brickworks.pcx   80 10 09  101 64  -31 -59
-1 sprites/pcx/industries/brickworks.pcx  150 10 09  101 64  -31 -71
-1 sprites/pcx/industries/brickworks.pcx  220 10 09  101 64  -31 -69
// ground tile
-1 sprites/pcx/industries/groundtiles.pcx 150 10 09   31 64  -31   0


//Tile action 2 
-1 * 0 02 09 00 00 //-1 * 0 02 09 <set-id> 00
	\dx80008004 //groundsprite
	\dx80008000 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b64 //xextent yextent zextent
-1 * 0 02 09 01 00 //-1 * 0 02 09 <set-id> 00
	\dx80008004 //groundsprite
	\dx80008001 //building sprite
	00 00 //xofs yofs
	\b16 \b16 \b32 //xextent yextent zextent
-1 * 0 02 09 02 00 //-1 * 0 02 09 <set-id> 00
	\dx80008004 //groundsprite
	\dx80008002 //building sprite
	00 00 //xofs yofs
	\b16 \b16 \b32 //xextent yextent zextent
-1 * 0 02 09 03 00 //-1 * 0 02 09 <set-id> 00
	\dx80008004 //groundsprite
	\dx80008003 //building sprite
	00 00 //xofs yofs
	\b16 \b16 \b32 //xextent yextent zextent
-1 * 0 02 09 04 00 //-1 * 0 02 09 <set-id> 00
	\dx80008004 //groundsprite
	\d0 //building sprite (empty tile)
	\b0 \b0 //xofs yofs
	\b16 \b16 \b12 //xextent yextent zextent


//-1 * 0 02 09 <set-id> <type> <variable> <varadjust> <nvar> (<set-id> <low-range> <high-range>){n} <default>

-1 * 0 02 09 B1 //layout 1
	85 43 //check relative position (00yx[YYXX])
	00 FF FF //don't shift, don't mask
	\b6 //number of ranges to check (number of tiles) [range: XX YY  XX YY]
    \wx03   00 00  00 00
    \wx03   00 01  00 01
    \wx02   01 00  01 00
    \wx02   01 01  01 01
    \wx01   02 00  02 00
    \wx00   02 01  02 01
	\wx04 //00 01  00 01 <default>


-1 * 0 02 09 A0 
	82 44 //check layout number (lowest byte of related industry)
	00 FF //don't shift, don't mask
	\b1 //number of ranges to check (number of layouts)
    \wxB1 \b1 \b1 //<set-id \w> <low-range> <high-range>
	\wx00 //<default> (first tile layout available)

//handle cb2f (tile shape check)
#include "../../../templates/cb2f_generic.pnfo"     

//Action3 attach sprites to industry tile

//Tile action 3
-1 * 0 03 09 01 TILE_BRICKWORKS_1 00 \wxC0 //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>




//Industry definition

//Action 0
-1 * 0 00 0A \b26 01 IND_BRICKWORKS //-1 * 0 00 0A <num-props> 01 <id>
	08 IND_NULL //reuse original industry with this here ID
	0A 01 //number of industry layouts
		\d52 //size of layout definition +2 for termination
		//layout:
			00 00 FE TILE_BRICKWORKS_1 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_BRICKWORKS_1 00
			01 00 FE TILE_BRICKWORKS_1 00
			01 01 FE TILE_BRICKWORKS_1 00
			02 00 FE TILE_BRICKWORKS_1 00
			02 01 FE TILE_BRICKWORKS_1 00
			03 00 FE TILE_GENERIC_CLAYSTAITHES_2 00
			03 01 FE TILE_BRICKWORKS_1 00
			04 00 FE TILE_GENERIC_SANDSTAITHES_2 00
			04 01 FE TILE_BRICKWORKS_1 00
		00 80 //terminate layout definition
	0B 04 //production flags 1h=extractive, 2h=organic, 4h=processing
	0C STR_IND_CLOSE_GENERIC //industry closure message
	0D STR_IND_PRODINCR_GENERIC //production increase message
	0E STR_IND_PRODDECR_GENERIC //production decrease message
	1B STR_IND_NEW_GENERIC //new industry message
	1F STR_IND_BRICKWORKS //industry name
	10 CARGO_BUILDINGMATERIALS FF //production cargo types (word; fill unused with FFh)
	11 CARGO_COAL CARGO_SAND CARGO_CLAY FF //acceptance cargo types (dword; fill unused with FFh)
	12 00 //production multiplier cargo 1
	13 00 //production multiplier cargo 2
	1C \w0 \w0 //input cargo 1 multiplier (dword M1 M2; output_typen = X*Mn/256)
	1D \w0 \w0 //input cargo 2 multiplier
	1E \w0 \w0 //input cargo 3 multiplier
	14 \b05 //minimal cargo distribution amount
	16 FF FF FF //conflicting industry types (3*byte; ID+80h; FF to disable)
	17 \b5 //probability in random game
	18 \b3 //probability during gameplay
	20 FF FF FF BF //prospecting success chance (dword; FFFFFFFFh=100%)
	0F \b120 //fund cost multiplier (byte)
	19 CLR_BRICKWORKS //map colour (byte; using indexes from dos palette)
	23 \d0  //destruction cost multiplier (dword; default: 0)
	1A \dx1000 //special industry flag (dword;)
	21 3C //callback flags 
	22 09  //callback flags
//To show cargo waiting to be processed at industry, ensure prop 21 is set to use production callback

//No action 1 for industries, as graphics are defined by the industry-tile feature.

// handle cb 28 industry location - included on a per-industry basis to allow industries to use various different schemes 
#include "../../../templates/cb28_secondary_generic.pnfo"     

#include "../../../templates/cb28_allow_player_build.pnfo"     


#include "../../../templates/template_secondary_action23_B.pnfo"


