// Defines for use in industry template
#define THIS_INDUSTRY         IND_FISHINGHARBOUR
#define THIS_STR_INFO_CB38    STR_INFO_GENERIC
#define THIS_STR_BOOST        STR_INFO_ES_PRIMARY_BOOST
#define THIS_STR_ACCEPT       \wxD4D0
#define THIS_STR_NOT_ACCEPT   \wxD4D1

//Industry tiles definition

//Tile action 0  This tile is built on water
-1 * 0 00 09 \b5 01 TILE_FISHINGHARBOUR_1 // -1 * 0 00 09 <num-props> 01 <id>
	08 TILE_NULL //subsitute type
	0A CARGO_ENGINEERINGSUPPLIES 08 //tile acceptance 1
	0B 00 00 //tile acceptance 2
	0C 00 00 //tile acceptance 3
	0D 10 //land shape flags: 10 = only on flat land
//Tile action 0  This tile is built on land
-1 * 0 00 09 \b6 01 TILE_FISHINGHARBOUR_2 // -1 * 0 00 09 <num-props> 01 <id>
	08 TILE_NULL //subsitute type
	0A CARGO_ENGINEERINGSUPPLIES 08 //tile acceptance 1
	0B 00 00 //tile acceptance 2
	0C 00 00 //tile acceptance 3
	0D 20 //land shape flags: 10 = only on flat land
	0E 30 // callback flacks // use custom shape check cb25, decide drawing default foundations cb30


//Industry tile sprites; one sprite for each tile; eventually more for each tile to include  construction stages

//Tile action 1
-1 * 0 01 09 \b21 \b1 //-1 * 0 01 09 <num-sets> <num-ent>
// Format: spritenum pcxfile xpos ypos compression ysize xsize xrel yrel
// extension tile NE->SW  | also  SW -> NE
-1 sprites/pcx/industries/fishingharbour.pcx  10 10  09  39 64 -31 -8
// extension tile SE->NW  | also  NW -> SE 
-1 sprites/pcx/industries/fishingharbour.pcx  80 10  09  39 64 -31 -8
// end tiles
-1 sprites/pcx/industries/fishingharbour.pcx   10 60  09  39 64 -31 -8
-1 sprites/pcx/industries/fishingharbour.pcx   80 60  09  39 64 -31 -8
-1 sprites/pcx/industries/fishingharbour.pcx  150 60  09  39 64 -31 -8
-1 sprites/pcx/industries/fishingharbour.pcx  220 60  09  39 64 -31 -8
// corner tiles
-1 sprites/pcx/industries/fishingharbour.pcx  10 110  09  39 64 -31 -8
-1 sprites/pcx/industries/fishingharbour.pcx  80 110  09  39 64 -31 -8
-1 sprites/pcx/industries/fishingharbour.pcx  10 110  09  39 64 -31 -8
-1 sprites/pcx/industries/fishingharbour.pcx  80 110  09  39 64 -31 -8
// wharf-meets-coast tiles NW->SE  
-1 sprites/pcx/industries/fishingharbour.pcx  580 10  09  74 64 -31 -19
-1 sprites/pcx/industries/fishingharbour.pcx  650 10  09  74 64   1 -43
// wharf-meets-coast tiles NE->SW
-1 sprites/pcx/industries/fishingharbour.pcx  10 10  09  39 64 -31 -8
-1 sprites/pcx/industries/fishingharbour.pcx  80 10  09  39 64 -31 -8
// building tiles
-1 sprites/pcx/industries/fishingharbour.pcx  440 10  09  74 64 -31 -28
-1 sprites/pcx/industries/fishingharbour.pcx  510 10  09  74 64   1 -52
// boat lift tiles
-1 sprites/pcx/industries/fishingharbour.pcx  440 110  09  74 64 -31 -19
-1 sprites/pcx/industries/fishingharbour.pcx  510 110  09  74 64   1 -43
// fishing boat tiles
-1 sprites/pcx/industries/fishingharbour.pcx  290 10  09  39 64 -31 -8
-1 sprites/pcx/industries/fishingharbour.pcx  360 10  09  39 64 -31 -8
// empty ground tile (for use on water)
-1 sprites/pcx/industries/fishingharbour.pcx  10 10  09  1 1 0 0


//wharf extension tiles action 2 apply graphics
-1 * 0 02 09 00 00 //-1 * 0 02 09 <set-id> 00
	\dx80008000 //groundsprite
	\dx80008000 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 01 00 //-1 * 0 02 09 <set-id> 00
	\dx80008001 //groundsprite
	\dx80008001 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
	
//wharf end tiles action 2 apply graphics
-1 * 0 02 09 02 00 //-1 * 0 02 09 <set-id> 00
	\dx80008002 //groundsprite
	\dx0 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 03 00 //-1 * 0 02 09 <set-id> 00
	\dx80008003 //groundsprite
	\dx0 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 04 00 //-1 * 0 02 09 <set-id> 00
	\dx80008004 //groundsprite
	\dx0 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 05 00 //-1 * 0 02 09 <set-id> 00
	\d1420 //groundsprite
	\dx0 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent

//wharf corner tiles action 2 apply graphics
-1 * 0 02 09 06 00 //-1 * 0 02 09 <set-id> 00
	\dx80008006 //groundsprite
	\dx0 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 07 00 //-1 * 0 02 09 <set-id> 00
	\dx80008007 //groundsprite
	\dx0 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 08 00 //-1 * 0 02 09 <set-id> 00
	\dx80008008 //groundsprite
	\dx0 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 09 00 //-1 * 0 02 09 <set-id> 00
	\dx80008009 //groundsprite
	\dx0 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent

//wharf-meets-coast NW->SE tiles action 2 apply graphics
-1 * 0 02 09 0A 00 //-1 * 0 02 09 <set-id> 00
	\dx8000800A //groundsprite
	\dx8000800E //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 0B 00 //-1 * 0 02 09 <set-id> 00
	\dx8000800B //groundsprite
	\dx8000800F //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
//wharf-meets-coast NE->SW tiles action 2 apply graphics
-1 * 0 02 09 0C 00 //-1 * 0 02 09 <set-id> 00
	\dx8000800C //groundsprite
	\dx8000800C //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 0D 00 //-1 * 0 02 09 <set-id> 00
	\dx8000800D //groundsprite
	\dx8000800D //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent

//boat lift tiles action 2 apply graphics
-1 * 0 02 09 0E 00 //-1 * 0 02 09 <set-id> 00
	\dx4061 //groundsprite
	\dx80008010 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 0F 00 //-1 * 0 02 09 <set-id> 00
	\dx4061 //groundsprite
	\dx80008011 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
//fishing boat tiles action 2 apply graphics
-1 * 0 02 09 10 00 //-1 * 0 02 09 <set-id> 00
	\d4061 //groundsprite
	\dx80008012 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent
-1 * 0 02 09 11 00 //-1 * 0 02 09 <set-id> 00
	\dx4061 //groundsprite
	\dx80008013 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b16 //xextent yextent zextent


-1 * 0 02 09 B1 //Layout 1 
	85 43 //check relative position (00yx[YYXX])
	00 FF FF //don't shift, don't mask
	\b2 //number of ranges to check (number of tiles)
	//pit
	\wx01   00 00  00 00
	\wx01   01 00  01 00
	\wx01 // <default>
  
-1 * 0 02 09 B4 //Layout 1 
	85 43 //check relative position (00yx[YYXX])
	00 FF FF //don't shift, don't mask
	\b7 //number of ranges to check (number of tiles)
	//pit
	\wx0A   00 00  00 00
	\wx0B   00 01  00 01
	\wx01   00 02  00 02
	\wx01   00 03  00 03
	\wx0E   01 00  01 00
	\wx0F   01 01  01 01
	\wx10   01 03  01 03
	\wx00 // <default>  
  
-1 * 0 02 09 A0 
	82 44 //check layout number (lowest byte of related industry)
	00 FF //don't shift, don't mask
	\b4 //number of ranges to check (number of layouts)
	\wxB1 \b1 \b1 //<set-id \w> <low-range> <high-range>
	\wx00 \b2 \b2 //<set-id \w> <low-range> <high-range>
	\wx00 \b3 \b3 //<set-id \w> <low-range> <high-range>
	\wxB4 \b4 \b4 //<set-id \w> <low-range> <high-range>
	\wx00 //<default> (first tile layout available)

//Tiles varaction 2 chain
-1 * 0	 02 09 F0 //handle cb 2F (custom shape check for tiles)
  89 60 00 00 1F 02 FF 00 // check tile contents
  \b1
    01 84 \dx0000 \dx0200
  00 84 //default

-1 * 0 02 09 C1 //industry tile cargo acceptance depending on waiting cargo
    86 40 00 FF FF
    \b1 //range
     00 80 \w200 FF FF //lookup cb 2B in wiki for what the returned value means 
   08 80
   
-1 * 0 02 09 C0 //Handle callbacks
	81 0C 00 FF //no shift, no mask
	\b3 //range
    C1 00 2B 2B //cargo acceptance cb 2B
	  F0 00 2F 2F //custom shape check cb 2F
	  01 80 30 30 //disable drawing default foundations cb30
  A0 00 //default

//Action3 attach sprites to industry tile

//Tile action 3
-1 * 0 03 09 01 TILE_FISHINGHARBOUR_1 00 \wxC0 //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>
//Tile action 3
-1 * 0 03 09 01 TILE_FISHINGHARBOUR_2 00 \wxC0 //-1 * 0 03 09 <n-ids> <id> 01 <def-cid>



//Industry definition

//Action 0
-1 * 0 00 0A \b26 01 IND_FISHINGHARBOUR //-1 * 0 00 0A <num-props> 01 <id>
	08 IND_NULL //reuse original industry with this here ID
	0A 04 //number of industry layouts
		\d94 //size of layout definition +2 for termination
		//layout 1:  Coast runs SW -> NE, Harbour Faces NW
			00 00 FE TILE_FISHINGHARBOUR_1 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_FISHINGHARBOUR_1 00 //xoffs yoffs FE newtile(W)
			00 02 FE TILE_FISHINGHARBOUR_1 00 //xoffs yoffs FE newtile(W)
			00 03 FE TILE_FISHINGHARBOUR_2 00 //xoffs yoffs FE newtile(W)
		00 80 //terminate layout definition
		//layout 2:  Coast runs NW -> SE, Harbour Faces NE
			00 00 FE TILE_FISHINGHARBOUR_1 00 //xoffs yoffs FE newtile(W)
			01 00 FE TILE_FISHINGHARBOUR_2 00 //xoffs yoffs FE newtile(W)
		00 80 //terminate layout definition
		//layout 3:  Coast runs NW -> SE, Harbour faces SW
			00 00 FE TILE_FISHINGHARBOUR_2 00 //xoffs yoffs FE newtile(W)
			01 00 FE TILE_FISHINGHARBOUR_1 00 //xoffs yoffs FE newtile(W)
			02 00 FE TILE_FISHINGHARBOUR_1 00 //xoffs yoffs FE newtile(W)
		00 80 //terminate layout definition
		//layout 4:  Coast runs SW -> NE, Harbour faces SE
			00 00 FE TILE_FISHINGHARBOUR_2 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_FISHINGHARBOUR_1 00 //xoffs yoffs FE newtile(W)
			00 02 FE TILE_FISHINGHARBOUR_1 00 //xoffs yoffs FE newtile(W)
			00 03 FE TILE_FISHINGHARBOUR_1 00 //xoffs yoffs FE newtile(W)
			00 04 FF
			01 00 FE TILE_FISHINGHARBOUR_2 00 //xoffs yoffs FE newtile(W)
			01 01 FE TILE_FISHINGHARBOUR_1 00 //xoffs yoffs FE newtile(W)
			01 03 FE TILE_FISHINGHARBOUR_1 00 //xoffs yoffs FE newtile(W)
			01 04 FF
		00 80 //terminate layout definition
	0B 02 //production flags 1h=extractive, 2h=organic, 4h=processing
	0C STR_IND_CLOSE_GENERIC //industry closure message
	0D STR_IND_PRODINCR_GENERIC //production increase message
	0E STR_IND_PRODDECR_GENERIC //production decrease message
	1B STR_IND_NEW_GENERIC //new industry message
	1F STR_IND_FISHINGHARBOUR //industry name
	10 CARGO_FISH FF //production cargo types (word; fill unused with FFh)
	11 CARGO_ENGINEERINGSUPPLIES FF FF FF //acceptance cargo types (dword; fill unused with FFh)
	12 \b6 //production multiplier cargo 1
	13 00 //production multiplier cargo 2
	1C \w0 \w0 //input cargo 1 multiplier (dword M1 M2; output_typen = X*Mn/256)
	1D \w0 \w0  //input cargo 2 multiplier
	1E \w0 \w0  //input cargo 3 multiplier
	14 \b2 //minimal cargo distribution amount
	16 FF FF FF //conflicting industry types (3*byte; ID+80h; FF to disable)
	17 \b10 //probability in random game
	18 \b20 //probability during gameplay
	20 FF FF FF BF //prospecting success chance (dword; FFFFFFFFh=100%)
	0F \b255 //fund cost multiplier (byte)
	19 CLR_FISHINGHARBOUR //map colour (byte; using indexes from dos palette)
	23 \d0  //destruction cost multiplier (dword; default: 0)
	1A \dx04 //special industry flag
	21 F4 //callback flags 
	22 05  //callback flags
//To show cargo waiting to be processed at industry, ensure prop 21 is set to use production callback

//No action 1 for industries, as graphics are defined by the industry-tile feature.

#include "../../templates/template_primary_action23.pnfo"

//End of only have this in this and that climate
-1 * 0 10 FF