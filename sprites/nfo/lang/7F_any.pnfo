//List of text IDs to be used for cargo definition
//From a quick test it appears that we can reuse default TTD text IDs (http://wiki.ttdpatch.net/tiki-index.php?page=TextIDs), so I think we should.
//If we need more strings for the cargos already defined, it's easier to append them to the end than adding them inbetween and renumbering the whole darn code.

//Last ID used: \b72 DC
//IDs skipped: none


//Sugar cane
//We only need this in tropic:
-1 * 0 07 83 01 \7! 02 01
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b01 DC
"Sugar Cane" 00 		//both types of type
"\7C ton of sugar cane" 00
"\7C tons of sugar cane" 00
"\0ESC" 00


//Waste
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b05 DC
"Waste" 00 		//both types of type
"\7C ton of waste" 00
"\7C tons of waste" 00
"\0EWS" 00


//Fruit and Vegetables
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b09 DC
"Fruit and Vegetables" 00
"Fruit and Vegetable" 00
"\7C ton of fruit and vegetables" 00
"\7C tons of fruit and vegetables" 00
			//FD already exists as 009C


//Fish
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b13 DC
"Fish" 00 		//both types of type
"\7C ton of fish" 00
"\7C tons of fish" 00
"\0EFI" 00


//Wool
//We only need this in temperate and arctic:
-1 * 0 07 83 01 \7> 01 01
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b17 DC
"Wool" 00 		//both types of type
"\7C ton of wool" 00
"\7C tons of wool" 00
"\0EWL" 00


//Cotton
//We only need this in tropic:
-1 * 0 07 83 01 \7! 02 01
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b17 DC
"Cotton" 00 		//both types of type
"\7C ton of cotton" 00
"\7C tons of cotton" 00
"\0ECT" 00


//Sand
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b21 DC
"Sand" 00 		//both types of type
"\7C ton of sand" 00
"\7C tons of sand" 00
"\0ESA" 00


//Gravel
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b25 DC
"Gravel" 00 		//both types of type
"\7C ton of gravel" 00
"\7C tons of gravel" 00
"\0EGV" 00


//Lumber
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b29 DC
"Lumber" 00 		//both types of type
"\7C ton of lumber" 00
"\7C tons of lumber" 00
"\0ELU" 00


//Packaging
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b33 DC
"Packaging" 00 		//both types of type
"\7C crate of packaging" 00
"\7C crates of packaging" 00
"\0EPK" 00


//Farm supplies
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b37 DC
"Farm Supplies" 00 		//both types of type
"\7C crate of farm supplies" 00
"\7C crates of farm supplies" 00
"\0EFS" 00


//Chemicals
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b3 \b41 DC
"Chemicals" 00 		//both types of type
"\87 of chemicals" 00 	//same for all quantities
"\0ECH" 00


//Engineering supplies
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b44 DC
"Engineering Supplies" 00 		//both types of type
"\7C crate of engineering supplies" 00
"\7C crates of engineering supplies" 00
"\0EES" 00


//Fuel oil
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b3 \b48 DC
"Fuel Oil" 00 		//both types of type
"\87 of fuel oil" 00 	//same for all quantities
"\0EFO" 00


//Bauxite
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b3 \b51 DC
"Bauxite" 00 		//both types of type
"\7C ton of bauxite" 00
"\7C tons of bauxite" 00
			//BA available as 00AB


//Parts
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b54 DC
"Parts" 00 		//both types of type
"\7C crate of parts" 00
"\7C crates of parts" 00
"\0EPA" 00


//Aluminium
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b58 DC
"Aluminium" 00 		//both types of type
"\7C ton of aluminium" 00
"\7C tons of aluminium" 00
"\0EAL" 00


//Milk
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b3 \b62 DC
"Milk" 00 		//both types of type
"\87 of milk" 00 	//same for all quantities
"\0EMK" 00


//Scrap Metal
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b65 DC
"Scrap Metal" 00 		//both types of type
"\7C ton of scrap metal" 00
"\7C tons of scrap metal" 00
"\0ESM" 00


//Survey supplies
//Names: cargo type; 1 unit of type; 1 unit of cargo; multiple units of cargo; type abbreviation
//Format: Action 04; Feature 0B; LangID 7F with bit 7 set; \bx strings to change; starting with string DC \bxx
-1 * 0 04 0B FF \b4 \b69 DC
"Survey Supplies" 00 		//both types of type
"\7C crate of survey supplies" 00
"\7C crates of survey supplies" 00
"\0ESS" 00



//Industry texts
//Format: Action 04; Feature 0B; LangID with bit 7 set; 01; starting with string STR_IND_*; quoted string; 00
-1 * 0 04 0B FF 01 STR_IND_ARABLE_FARM "Arable Farm" 00


//Station texts for station name prefixes/suffixes. \80 where town name goes
//Format: Action 04; Feature 0B; LangID with bit 7 set; 01; starting with string STR_STA_*; quoted string; 00
-1 * 0 04 0B FF 01 STR_STA_FARM "Arable Farm" 00
