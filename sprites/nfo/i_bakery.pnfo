//Industry tiles definition

//Only have this in climates 0 and 1
-1 * 0 07 83 01 \7> 01 FF

//Tile action 0
-1 * 0 00 09 \b5 01 TILE_BAKERY_1 // -1 * 0 00 09 <num-props> 01 <id>
	08 TILE_NULL //subsitute type
	0A CARGO_GRAIN 08 //tile acceptance 1
	0B CARGO_PACKAGING 08 //tile acceptance 2
	0C 00 00 //tile acceptance 3
	0D 10 //land shape flags: 10 = only on flat land


//Industry tile sprites; one sprite for each tile; eventually more for each tile to include  construction stages

//Tile action 1
-1 * 0 01 09 \b4 \b1 //-1 * 0 01 09 <num-sets> <num-ent>
// Format: spritenum pcxfile xpos ypos compression ysize xsize xrel yrel
-1 sprites/pcx/industries/bakery.pcx  10 10 09  59 64 -31 -28
-1 sprites/pcx/industries/bakery.pcx  80 10 09  59 64 -31 -28
-1 sprites/pcx/industries/bakery.pcx 150 10 09  82 64 -31 -51
-1 sprites/pcx/industries/bakery.pcx 220 10 09  82 64 -31 -51


//Tile action 2 
-1 * 0 02 09 00 00 //-1 * 0 02 09 <set-id> 00
	\d1420 //groundsprite
	\dx80008000 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b24 //xextent yextent zextent
-1 * 0 02 09 01 00 //-1 * 0 02 09 <set-id> 00
	\d1420 //groundsprite
	\dx80008001 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b24 //xextent yextent zextent
-1 * 0 02 09 02 00 //-1 * 0 02 09 <set-id> 00
	\d1420 //groundsprite
	\dx80008002 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b48 //xextent yextent zextent
-1 * 0 02 09 03 00 //-1 * 0 02 09 <set-id> 00
	\d1420 //groundsprite
	\dx80008003 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b48 //xextent yextent zextent



//-1 * 0 02 09 <set-id> <type> <variable> <varadjust> <nvar> (<set-id> <low-range> <high-range>){n} <default>

-1 * 0 02 09 B1 //layout 1
	85 43 //check relative position (00yx[YYXX])
	00 FF FF //don't shift, don't mask
	\b3 //number of ranges to check (number of tiles)
	\wx00   01 01  01 01
	\wx01   01 00  01 00
	\wx02   00 01  00 01
	\wx03 //00 00  00 00 <default>

	-1 * 0 02 09 B2 //layout 2
	85 43 //check relative position (00yx[YYXX])
	00 FF FF //don't shift, don't mask
	\b1 //number of ranges to check (number of tiles)
	\wx02   00 01  00 01
	\wx03 //00 00  00 00 <default>

-1 * 0 02 09 A0 
	82 44 //check layout number (lowest byte of related industry)
	00 FF //don't shift, don't mask
	\b2 //number of ranges to check (number of layouts)
	\wxB1 \b1 \b1 //<set-id \w> <low-range> <high-range>
	\wxB2 \b2 \b2 //<set-id \w> <low-range> <high-range>
	\wx00 //<default> (first layout available)


//Action3 attach sprites to industry tile

//Tile action 3
-1 * 0 03 09 01 TILE_BAKERY_1 00 \wxA0 //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>



//Industry definition

//Action 0
-1 * 0 00 0A \b26 01 IND_BAKERY //-1 * 0 00 0A <num-props> 01 <id>
	08 IND_NULL //reuse original industry with this here ID
	0A 02 //number of industry layouts
		\d34 //sum(size of layout definition +2 for termination)
		//layout:
			00 00 FE TILE_BAKERY_1 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_BAKERY_1 00
			01 00 FE TILE_BAKERY_1 00
			01 01 FE TILE_BAKERY_1 00
		00 80 //terminate layout definition
		//layout:
			00 00 FE TILE_BAKERY_1 00 //xoffs yoffs FE newtile(W)
			00 01 FE TILE_BAKERY_1 00
		00 80 //terminate layout definition
	0B 04 //production flags 1h=extractive, 2h=organic, 4h=processing
	0C STR_IND_CLOSE_GENERIC //industry closure message
	0D STR_IND_PRODINCR_GENERIC //production increase message
	0E STR_IND_PRODDECR_GENERIC //production decrease message
	1B STR_IND_NEW_GENERIC //new industry message
	1F STR_IND_BAKERY //industry name
	10 CARGO_FOOD FF //production cargo types (word; fill unused with FFh)
	11 CARGO_GRAIN CARGO_PACKAGING FF FF //acceptance cargo types (dword; fill unused with FFh)
	12 \b0 //production multiplier cargo 1
	13 \b0 //production multiplier cargo 2
	1C \w192 \w0  //input cargo 1 multiplier (dword M1 M2; output_typen = X*Mn/256)
	1D \w205 \w0  //input cargo 2 multiplier
	1E \w0  \w0  //input cargo 3 multiplier
	14 \b05 //minimal cargo distribution amount
	16 FF FF FF //conflicting industry types (3*byte; ID+40h; FF to disable)
	17 \b10 //probability in random game
	18 \b10 //probability during gameplay
	20 FF FF FF BF //prospecting success chance (dword; FFFFFFFFh=100%)
	0F \b255 //fund cost multiplier (byte)
	19 30 //map colour (byte; using indexes from dos palette)
	23 \d0  //descruction cost multiplier (dword; default: 0)
	1A \dx10 //special industry flag (dword)
	21 84 //callback flags 
	22 01  //callback flags
//To show cargo waiting to be processed at industry, ensure prop 21 is set to use production callback

//No action 1 for industries, as graphics are defined by the industry-tile feature.

//Dummy production callback to keep default-id happy
-1 * 0 02 0A 00 //-1 * 0 0A <set-id>
	00 //version
	FF FF  FF FF  FF FF //<subtract-in-1..3>
	FF FF  FF FF //<add-out-1..2>
	00 //don't repeat
	
//Callback 38 display additional text in fund window
-1 * 0 02 0A C0 //-1 * 0 0A <set-id>
	85 0C //<type> <variable> word-access callback
	00 FF FF //no shift, no mask
	\b2 //number of ranges to check
	STR_INFO_GENERIC 80   38 00   38 00 //return text-ID D0xx if cb 38 (fund window)
	STR_INFO_GENERIC 80   3A 00   3A 00 //return text-ID D0xx if cb 3A (industry window)
	\w0 //default


//Industry action 3 attach varaction2 chain to industry
-1 * 0 03 0A 01 IND_BAKERY 00 \wxC0 //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>	


//End of only have this in this and that climate
-1 * 0 10 FF
