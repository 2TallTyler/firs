//Only have this in climates 0 and 1
-1 * 0 07 83 01 \7> 01 FF

//Industry tiles definition

//Tile action 0
-1 * 0 00 09 \b6 01 TILE_SHEEPFARM_1 // -1 * 0 00 09 <num-props> 01 <id>
	08 TILE_NULL //subsitute type
	0A CARGO_FARMSUPPLIES 08 //tile acceptance 1
	0B 00 00 //tile acceptance 2
	0C 00 00 //tile acceptance 3
	0D 10 //land shape flags: 10 = only on flat land
	0E 04 //callback flags


//Industry tile sprites; one sprite for each tile; eventually more for each tile to include  construction stages

//Tile action 1
-1 * 0 01 09 \b5 \b1 //-1 * 0 01 09 <num-sets> <num-ent>
// Format: spritenum pcxfile xpos ypos compression ysize xsize xrel yrel
-1 sprites/pcx/industries/sheepfarm.pcx  10 10 09  52 64 -31 -21
-1 sprites/pcx/industries/sheepfarm.pcx  80 10 09  52 64 -31 -21
-1 sprites/pcx/industries/sheepfarm.pcx 150 10 09  52 64 -31 -21
-1 sprites/pcx/industries/sheepfarm.pcx 220 10 09  52 64 -31 -21
-1 sprites/pcx/industries/sheepfarm.pcx 290 10 09  52 64 -31 -21


//Tile action 2 
-1 * 0 02 09 00 00 //-1 * 0 02 09 <set-id> 00
	\d3981 //groundsprite
	\dx80008000 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b24 //xextent yextent zextent
-1 * 0 02 09 01 00 //-1 * 0 02 09 <set-id> 00
	\d3981 //groundsprite
	\dx80008001 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b24 //xextent yextent zextent
-1 * 0 02 09 02 00 //-1 * 0 02 09 <set-id> 00
	\d3981 //groundsprite
	\dx80008002 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b24 //xextent yextent zextent
-1 * 0 02 09 03 00 //-1 * 0 02 09 <set-id> 00
	\d3981 //groundsprite
	\dx80008003 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b8 //xextent yextent zextent
-1 * 0 02 09 04 00 //-1 * 0 02 09 <set-id> 00
	\d3981 //groundsprite
	\dx80008004 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b8 //xextent yextent zextent



//-1 * 0 02 09 <set-id> <type> <variable> <varadjust> <nvar> (<set-id> <low-range> <high-range>){n} <default>

-1 * 0 02 09 B1 //layout 1
	85 43 //check relative position (00yx[YYXX])
	00 FF FF //don't shift, don't mask
	\b4 //number of ranges to check (number of tiles)
	\wx00   03 00  03 00
	\wx01   01 00  01 00
	\wx02   00 00  00 00
	\wx03   01 02  01 02
	\wx04 //03 01  03 01 <default>

//don't need this with one layout
//-1 * 0 02 09 A0 
//	82 44 //check layout number (lowest byte of related industry)
//	00 FF //don't shift, don't mask
//	\b3 //number of ranges to check (number of layouts)
//	\wxB1 \b1 \b1 //<set-id \w> <low-range> <high-range>
//	\wxB2 \b2 \b2 //<set-id \w> <low-range> <high-range>
//	\wxB3 \b3 \b3 //<set-id \w> <low-range> <high-range>
//	\wx00 //<default> (first layout available)

-1 * 0 02 09 C1 //industry tile cargo acceptance depending on waiting cargo
    86 40 00 FF FF
    \b1 //range
     00 80 \w200 FF FF //lookup cb 2B in wiki for what the returned value means 
   08 80
   
-1 * 0 02 09 C0 //Handle callbacks
	81 0C 00 FF //no shift, no mask
	\b1 //range
    C1 00 2B 2B //cargo acceptance cb 2B
  B1 00 //default

//Action3 attach sprites to industry tile

//Tile action 3
-1 * 0 03 09 01 TILE_SHEEPFARM_1 00 \wxC0 //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>



//Industry definition

//Action 0
-1 * 0 00 0A \b27 01 IND_SHEEPFARM //-1 * 0 00 0A <num-props> 01 <id>
	08 IND_NULL //reuse original industry with this here ID
	0A 01 //number of industry layouts
		\d27 //sum(size of layout definition +2 for termination)
		//layout:
			00 00 FE TILE_SHEEPFARM_1 00 //xoffs yoffs FE newtile(W)
			01 00 FE TILE_SHEEPFARM_1 00
			03 00 FE TILE_SHEEPFARM_1 00
			03 01 FE TILE_SHEEPFARM_1 00
			01 02 FE TILE_SHEEPFARM_1 00
		00 80 //terminate layout definition
	0B 04 //production flags 1h=extractive, 2h=organic, 4h=processing
	0C STR_IND_CLOSE_GENERIC //industry closure message
	0D STR_IND_PRODINCR_FARM //production increase message
	0E STR_IND_PRODDECR_GENERIC //production decrease message
	1B STR_IND_NEW_GENERIC //new industry message
	1F STR_IND_SHEEPFARM //industry name
	24 STR_STA_FARM //default text for nearby station
	10 CARGO_LIVESTOCK CARGO_WOOL //production cargo types (word; fill unused with FFh)
	11 CARGO_FARMSUPPLIES FF FF FF //acceptance cargo types (dword; fill unused with FFh)
	12 \b8 //production multiplier cargo 1
	13 \b8 //production multiplier cargo 2
	1C \w38 \w38 //input cargo 1 multiplier (dword M1 M2; output_typen = X*Mn/256)
	1D \w0  \w0  //input cargo 2 multiplier
	1E \w0  \w0  //input cargo 3 multiplier
	14 \b05 //minimal cargo distribution amount
	16 FF FF FF //conflicting industry types (3*byte; ID+80h; FF to disable)
	17 \b5 //probability in random game
	18 \b3 //probability during gameplay
	20 FF FF FF BF //prospecting success chance (dword; FFFFFFFFh=100%)
	0F \b255 //fund cost multiplier (byte)
	19 B8 //map colour (byte; using indexes from dos palette)
	23 \d0  //descruction cost multiplier (dword; default: 0)
	1A \d0 //special industry flag (dword)
		21 F4 //callback flags 
	22 05  //callback flags
//To show cargo waiting to be processed at industry, ensure prop 21 is set to use production callback

//No action 1 for industries, as graphics are defined by the industry-tile feature.

-1 * 0 02 0A 00 //Production callback high production
	00 //version
	\w16 \w0 \w0 //<subtract-in-1..3>
	\w0 \w0 //<add-out-1..2>
	00 //don't repeat

-1 * 0 02 0A 01 //Production callback med production
	00 //version
	\w8 \w0 \w0 //<subtract-in-1..3>
	\w0 \w0 //<add-out-1..2>
	00 //don't repeat

-1 * 0 02 0A 02 //Production callback low production
	00 //version
	\w1 \w0 \w0 //<subtract-in-1..3>
	\w0 \w0 //<add-out-1..2>
	00 //don't repeat
	
-1 * 0 02 0A C1 //branch production depending on cargo waiting 
  85 40 00 FF FF //check cargo waiting
  \b2 // range
    00 00  \w24  FF FF    
    01 00  \w8  \w23    
  02 00 // default

-1 * 0 02 0A D2 //Random production increase if engineering supplies stockpiled...  
  81 18 00 03
  \b1 //range
    0E 80 00 00 //lookat cb 35 or 29 in wiki to see what the returned value means
  00 80 //else no change	
  
-1 * 0 02 0A D1 //Handle cb 35 monthly production change 
  85 40 00 FF FF //check cargo waiting
  \b1 //range
    D2 00  01 00  FF FF    
  00 80 //else no change
	
-1 * 0 02 0A A1//Return cargo acceptance (0 or 1) depending on amount of first cargo waiting
  85 40 00 FF FF
  \b1 //range 
    00 80 \w220 FF FF //I've set the industry limit slightly higher than the tile limit...otherwise the limit won't be reached for 'cargo waiting' 
  01 80
	
-1 * 0 02 0A B1//Handle cb 37 cargo subtexts (used here to provide max cargo limit information)
  81 18 00 FF 
  \b1
    STR_INFO_LIMIT_200 80 00 00
  FF FF	 //default
	
-1 * 0 02 0A C0 //Handle callbacks
	85 0C //<type> <variable> word-access callback
	00 FF FF //no shift, no mask
	\b6 //number of ranges to check
	  04 80   29 00   29 00 //monthly production change cb 29
	  D1 00   35 00   35 00 //monthly production change cb 35
	  B1 00   37 00   37 00 //cargo subtext industry window cb 37
	  A1 00   3D 00   3D 00 //industry cargo acceptance
    STR_INFO_GENERIC 80   38 00   38 00 //return text-ID D0xx if cb 38 (fund window)
    STR_INFO_FS_PRIMARY_BOOST 80   3A 00   3A 00 //return text-ID D0xx if cb 3A (industry window)
	C1 00 //default

//Industry action 3 attach varaction2 chain to industry
-1 * 0 03 0A 01 IND_SHEEPFARM 00 \wxC0 //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>	


//End of only have this in this and that climate
-1 * 0 10 FF
