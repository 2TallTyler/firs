// Defines for use in industry template
#define THIS_INDUSTRY         IND_ARABLEFARM
#define THIS_STR_INFO_CB38    STR_INFO_GENERIC
#define THIS_STR_BOOST        STR_INFO_FS_PRIMARY_BOOST
#define THIS_STR_ACCEPT       \wxD4D2
#define THIS_STR_NOT_ACCEPT   \wxD4D3

//Industry tiles definition


//Tile action 0
-1 * 0 00 09 \b6 01 TILE_ARABLEFARM_1 // -1 * 0 00 09 <num-props> 01 <id>
	08 TILE_NULL //subsitute type
	0A CARGO_FARMSUPPLIES 08 //tile acceptance 1
	0B 00 00 //tile acceptance 2
	0C 00 00 //tile acceptance 3
	0D 10 //land shape flags: 10 = only on flat land
	0E 04 //callback flags


//Industry tile sprites; one sprite for each tile; eventually more for each tile to include  construction stages

//Tile action 1
-1 * 0 01 09 \b5 \b1 //-1 * 0 01 09 <num-sets> <num-ent>
// Format: spritenum pcxfile xpos ypos compression ysize xsize xrel yrel
-1 sprites/pcx/industries/arablefarm.pcx 10 10 09 59 64 -31 -28
-1 sprites/pcx/industries/arablefarm.pcx 80 10 09 59 64 -31 -28
-1 sprites/pcx/industries/arablefarm.pcx 150 10 09 59 64 -31 -28
-1 sprites/pcx/industries/arablefarm.pcx 220 10 09 59 64 -31 -28
-1 sprites/pcx/industries/arablefarm.pcx 290 10 09 59 64 -31 -28


//Tile action 2 
-1 * 0 02 09 00 00 //-1 * 0 02 09 <set-id> 00
	\d3981 //groundsprite
	\dx80008000 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b32 //xextent yextent zextent
-1 * 0 02 09 01 00 //-1 * 0 02 09 <set-id> 00
	\d3981 //groundsprite
	\dx80008001 //building sprite
	00 00 //xofs yofs
	\b16 \b16 \b32 //xextent yextent zextent
-1 * 0 02 09 02 00 //-1 * 0 02 09 <set-id> 00
	\d3981 //groundsprite
	\dx80008002 //building sprite
	00 00 //xofs yofs
	\b16 \b16 \b32 //xextent yextent zextent
-1 * 0 02 09 03 00 //-1 * 0 02 09 <set-id> 00
	\d3981 //groundsprite
	\dx80008003 //building sprite
	00 00 //xofs yofs
	\b16 \b16 \b32 //xextent yextent zextent
-1 * 0 02 09 04 00 //-1 * 0 02 09 <set-id> 00
	\d3981 //groundsprite
	\dx80008004 //building sprite
	00 00 //xofs yofs
	\b16 \b16 \b32 //xextent yextent zextent

	
//-1 * 0 02 09 <set-id> <type> <variable> <varadjust> <nvar> (<set-id> <low-range> <high-range>){n} <default>

-1 * 0 02 09 B1 //layout 1
	85 43 //check relative position (00yx[YYXX])
	00 FF FF //don't shift, don't mask
	\b4 //number of ranges to check (number of tiles) [range: XX YY  XX YY]
	\wx00   01 00  01 00
	\wx01   01 01  01 01
	\wx02   00 02  00 02
	\wx03   02 01  02 01
	\wx04 //00 01  00 01 <default>
                   

-1 * 0 02 09 A0 
	82 44 //check layout number (lowest byte of related industry)
	00 FF //don't shift, don't mask
	\b1 //number of ranges to check (number of layouts)
	\wxB1 \b1 \b1 //<set-id \w> <low-range> <high-range>
	\wx00 //<default> (first tile layout available)

-1 * 0 02 09 C1 //industry tile cargo acceptance depending on waiting cargo
    86 40 00 FF FF
    \b1 //range
     00 80 LIMIT_FARM_SUPPLIES FF FF //lookup cb 2B in wiki for what the returned value means 
   08 80
   
-1 * 0 02 09 C0 //Handle callbacks
	81 0C 00 FF //no shift, no mask
	\b1 //range
    C1 00 2B 2B //cargo acceptance cb 2B
  A0 00 //default

//Tile action 3: attach sprites to industry tile
-1 * 0 03 09 01 TILE_ARABLEFARM_1 00 \wxC0 //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>	



//Industry definition

//Action 0
-1 * 0 00 0A \b27 01 IND_ARABLEFARM //-1 * 0 00 0A <num-props> 01 <id>
	08 IND_NULL //reuse original industry with this here ID
	0A 01 //number of industry layouts
		\d27 //size of layout definition +2 for termination
		//layout:
			01 00 FE TILE_ARABLEFARM_1 00 //xoffs yoffs FE newtile(W)
			01 01 FE TILE_ARABLEFARM_1 00
			00 02 FE TILE_ARABLEFARM_1 00
			02 01 FE TILE_ARABLEFARM_1 00
			00 01 FE TILE_ARABLEFARM_1 00
		00 80 //terminate layout definition
	0B 02 //production flags 1h=extractive, 2h=organic, 4h=processing
	0C STR_IND_CLOSE_GENERIC //industry closure message
	0D STR_IND_PRODINCR_FARM //production increase message
	0E STR_IND_PRODDECR_INSECTS //production decrease message
	1B STR_IND_NEW_GENERIC //new industry message
	1F STR_IND_ARABLEFARM //industry name
	24 STR_STA_FARM //default text for nearby station
	10 CARGO_FRUITSANDVEGETABLES CARGO_GRAIN //production cargo types (word; fill unused with FFh)
	11 CARGO_FARMSUPPLIES FF FF FF //acceptance cargo types (dword; fill unused with FFh)
	12 \b10 //production multiplier cargo 1
	13 \b10 //production multiplier cargo 2
	1C \w84 \w84 //input cargo 1 multiplier (dword M1 M2; output_typen = X*Mn/256)
	1D \w0  \w0  //input cargo 2 multiplier
	1E \w0  \w0  //input cargo 3 multiplier
	14 \b05 //minimal cargo distribution amount
	16 FF FF FF //conflicting industry types (3*byte; ID+80h; FF to disable)
	17 \b9 //probability in random game
	18 \b2 //probability during gameplay
	20 FF FF FF BF //prospecting success chance (dword; FFFFFFFFh=100%)
	0F \b255 //fund cost multiplier (byte)
	19 CLR_ARABLEFARM //map colour (byte; using indexes from dos palette)
	23 \d0  //destruction cost multiplier (dword; default: 0)
	1A \dx41 //special industry flag (dword; farms: 41h)
	21 F4 //callback flags 
	22 05  //callback flags
//To show cargo waiting to be processed at industry, ensure prop 21 is set to use production callback

//No action 1 for industries, as graphics are defined by the industry-tile feature.

#include "../../templates/template_primary_action23.pnfo"