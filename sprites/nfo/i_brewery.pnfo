//Industry tiles definition; Brewery has 3 different tiles

//Tile 2B, action 0
-1 * 0 00 09 \b5 01 2B // -1 * 0 00 09 <num-props> 01 <id>
	08 2B //subsitute type
	0A CARGO_FRUITSANDVEGETABLES 08 //tile acceptance 1
	0B CARGO_GRAIN 08 //tile acceptance 2
	0C CARGO_PACKAGING 08 //tile acceptance 3
	0D 10 //land shape flags: 10 = only on flat land
	
//Tile 2C, action 0
-1 * 0 00 09 \b5 01 2C // -1 * 0 00 09 <num-props> 01 <id>
	08 2C //subsitute type
	0A CARGO_FRUITSANDVEGETABLES 08 //tile acceptance 1
	0B CARGO_GRAIN 08 //tile acceptance 2
	0C CARGO_PACKAGING 08 //tile acceptance 3
	0D 10 //land shape flags: 10 = only on flat land

//Tile 2D, action 0
-1 * 0 00 09 \b5 01 2D // -1 * 0 00 09 <num-props> 01 <id>
	08 2D //subsitute type
	0A CARGO_FRUITSANDVEGETABLES 08 //tile acceptance 1
	0B CARGO_GRAIN 08 //tile acceptance 2
	0C CARGO_PACKAGING 08 //tile acceptance 3
	0D 10 //land shape flags: 10 = only on flat land


//Industry tile sprites; one sprite for each tile; eventually more for each tile to include  construction stages

//All tiles, Action 1
-1 * 0 01 09 \b3 \b1 //-1 * 0 01 09 <num-sets> <num-ent>
// Format: spritenum pcxfile xpos ypos compression ysize xsize xrel yrel
-1 sprites/pcx/industries/brewery.pcx 80 10 09 91 64 -31 -60
-1 sprites/pcx/industries/brewery.pcx 150 10 09 91 64 -31 -60
-1 sprites/pcx/industries/brewery.pcx 220 10 09 91 64 -31 -60


//sprite 2B, Action 2 
-1 * 0 02 09 2B 00 //-1 * 0 02 09 <set-id> 00
	\d1420 //groundsprite
	\dx80008000 //building sprite
	\b0 \b0 //xofs yofs
	\b16 \b16 \b48 //xextent yextent zextent

//sprite 2C, Action 2 
-1 * 0 02 09 2C 00 //-1 * 0 02 09 <set-id> 00
	\d1420 //groundsprite
	\dx80008001 //building sprite
	00 00 //xofs yofs
	\b16 \b16 \b48 //xextent yextent zextent

//sprite 2D, Action 2 
-1 * 0 02 09 2D 00 //-1 * 0 02 09 <set-id> 00
	\d1420 //groundsprite
	\dx80008002 //building sprite
	00 00 //xofs yofs
	\b16 \b16 \b48 //xextent yextent zextent


//Action3 attach sprites to industry tiles

//Tile 2B, action 3
-1 * 0 03 09 01 2B 00 \wx2B //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>
//Tile 2C, action 3
-1 * 0 03 09 01 2C 00 \wx2C //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>
//Tile 2D, action 3
-1 * 0 03 09 01 2D 00 \wx2D //-1 * 0 03 09 <n-ids> <id> 00 <def-cid>



//Industry definition

//Action 0
-1 * 0 00 0A \b24 01 IND_BREWERY //-1 * 0 00 0A <num-props> 01 <id>
	08 IND_BREWERY //reuse original industry with this here ID
	0A 03 //number of industry layouts
		\d17 //size of layout definition +2 for termination
		//layout:
			01 00 FE 2B 00 //xoffs yoffs FE newtile(W)
			01 02 FE 2C 00
			00 02 FE 2D 00
		00 80 //terminate layout definition
		\d17 //size of layout definition +2 for termination
		//layout:
			02 00 FE 2B 00 //xoffs yoffs FE newtile(W)
			01 00 FE 2C 00
			00 00 FE 2D 00
		00 80 //terminate layout definition
		\d17 //size of layout definition +2 for termination
		//layout:
			01 00 FE 2B 00 //xoffs yoffs FE newtile(W)
			01 01 FE 2C 00
			00 01 FE 2D 00
		00 80 //terminate layout definition
	0B 04 //production flags 1h=extractive, 2h=organic, 4h=processing
	0C STR_IND_CLOSE_GENERIC //industry closure message
	0D STR_IND_PRODINCR_FARM //production increase message
	0E STR_IND_PRODDECR_INSECTS //production decrease message
	1B STR_IND_NEW_GENERIC //new industry message
	1F STR_IND_BREWERY //industry name
	10 CARGO_FOOD FF //production cargo types (word; fill unused with FFh)
	11 CARGO_FRUITSANDVEGETABLES CARGO_GRAIN CARGO_PACKAGING FF //acceptance cargo types (dword; fill unused with FFh)
	12 00 //production multiplier cargo 1
	13 00 //production multiplier cargo 2
	1C 73 00 73 00 //input cargo 1 multiplier (dword M1 M2; output_typen = X*Mn/256)
	1D 73 00 73 00 //input cargo 2 multiplier
	1E 54 00 54 00 //input cargo 3 multiplier
	14 \b05 //minimal cargo distribution amount
	16 FF FF FF //conflicting industry types (3*byte; ID+80h; FF to disable)
	17 \b5 //probability in random game
	18 \b3 //probability during gameplay
	20 FF FF FF BF //prospecting success chance (dword; FFFFFFFFh=100%)
	0F \b255 //fund cost multiplier (byte)
	19 30 //map colour (byte; using indexes from dos palette)
	23 \d0  //descruction cost multiplier (dword; default: 0)
	1A \dx20 //special industry flag (dword; brewery: 20h)
	//21  //callback flags
	//22  //callback flags
	

//No action 1 for industries, as graphics are defined by the industry-tile feature.

//Industry production callback: action 2. Skip that for now to see if this works without all fancy stuff

//Hence no action 3 yet either.
