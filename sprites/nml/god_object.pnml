
/////////////////////////////////////////////////////////////////////////////////////////////////////////



item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_25, 25) {
	property {
		substitute: 25;
		override: 25;
		accepted_cargos: [[ENSP, 8], [0, 8], [0, 0]];
		callback_flags: 0;
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_26, 26) {
	property {
		substitute: 26;
		override: 26;
		accepted_cargos: [[ENSP, 8], [0, 8], [0, 0]];
		callback_flags: 0;
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_27, 27) {
	property {
		substitute: 27;
		override: 27;
		accepted_cargos: [[ENSP, 8], [0, 8], [0, 0]];
		callback_flags: 0;
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_28, 28) {
	property {
		substitute: 28;
		override: 28;
		accepted_cargos: [[ENSP, 8], [0, 8], [0, 0]];
		callback_flags: 0;
	}
}

item(FEAT_INDUSTRIES, refinery, 17) {
	property {
		substitute: 4;
		override: 4;
		nearby_station_name: string(STR_STATIONNAME_CHEMICALS);
		prod_cargo_types: [RFPR, PETR];
		accept_cargo_types: [OIL_];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		conflicting_ind_types: [];
		prob_random: 4;
		prob_in_game: 2;
		fund_cost_multiplier: 200;
		map_colour: 191;
		callback_flags: 445;
	}
}

switch(FEAT_INDUSTRIES, SELF, action2_6510, industry_distance(refinery)) {
	0..56: return 1025;
	return 1024;
}

switch(FEAT_INDUSTRIES, SELF, action2_6511, industry_distance(oil_wells)) {
	0..16: return 4;
	action2_6510;
}

switch(FEAT_INDUSTRIES, SELF, action2_6512, industry_distance(oil_rig)) {
	0..16: return 4;
	action2_6511;
}

switch(FEAT_INDUSTRIES, SELF, action2_6513, founder) {
	16: action2_6512;
	return 1024;
}

switch(FEAT_INDUSTRIES, SELF, action2_6514, game_mode) {
	1: action2_6513;
	return 1024;
}

produce(action2_6515, LOAD_TEMP(7), LOAD_TEMP(8), LOAD_TEMP(9), LOAD_TEMP(10), LOAD_TEMP(11), LOAD_TEMP(0));

switch(FEAT_INDUSTRIES, SELF, action2_6516, [STORE_TEMP(0, 0), 1]) {
	0: action2_6515;
	action2_6515;
}

switch(FEAT_INDUSTRIES, SELF, action2_6517, [STORE_TEMP(STORE_PERM(STORE_TEMP(STORE_PERM(0, 11), 11), 10), 10), 1]) {
	0: action2_6516;
	action2_6516;
}

switch(FEAT_INDUSTRIES, SELF, action2_6518, [STORE_TEMP(STORE_PERM(0, 11), 11), STORE_TEMP(STORE_PERM(LOAD_TEMP(10), 10), 10)]) {
	0: action2_6516;
	action2_6516;
}

switch(FEAT_INDUSTRIES, SELF, action2_6519, STORE_TEMP(STORE_PERM(STORE_TEMP(STORE_PERM(max((LOAD_TEMP(10) / 2), 1), 10), 10), 11), 11)) {
	0: action2_6516;
	action2_6516;
}

switch(FEAT_INDUSTRIES, SELF, action2_6520, 2) {
	2: action2_6519;
	action2_6518;
}

switch(FEAT_INDUSTRIES, SELF, action2_6521, STORE_TEMP(((LOAD_PERM(4) + LOAD_PERM(5)) + LOAD_PERM(6)), 10)) {
	0: action2_6517;
	action2_6520;
}

switch(FEAT_INDUSTRIES, SELF, action2_6522, [STORE_TEMP(((LOAD_PERM(6) / LOAD_PERM(12)) * 8), 9), STORE_TEMP(STORE_PERM(((var[0x42, 0, -1] - LOAD_TEMP(9)) + LOAD_TEMP(9)), 9), 9)]) {
	0: action2_6521;
	action2_6521;
}

switch(FEAT_INDUSTRIES, SELF, action2_6523, [STORE_TEMP(((LOAD_PERM(5) / LOAD_PERM(12)) * 8), 8), STORE_TEMP(STORE_PERM(((var[0x41, 0, -1] - LOAD_TEMP(8)) + LOAD_TEMP(8)), 8), 8)]) {
	0: action2_6522;
	action2_6522;
}

switch(FEAT_INDUSTRIES, SELF, action2_6524, [STORE_TEMP(((LOAD_PERM(4) / LOAD_PERM(12)) * 8), 7), STORE_TEMP(STORE_PERM(((var[0x40, 0, -1] - LOAD_TEMP(7)) + LOAD_TEMP(7)), 7), 7)]) {
	0: action2_6523;
	action2_6523;
}

switch(FEAT_INDUSTRIES, SELF, action2_6525, STORE_PERM(max(min(((var[0x42, 0, -1] / 8) * LOAD_PERM(3)), LOAD_PERM(0)), 1), 6)) {
	0: action2_6524;
	action2_6524;
}

switch(FEAT_INDUSTRIES, SELF, action2_6526, [STORE_PERM(0, 6), var[0x42, 0, -1]]) {
	0: action2_6524;
	action2_6525;
}

switch(FEAT_INDUSTRIES, SELF, action2_6527, STORE_PERM(max(min(((var[0x41, 0, -1] / 8) * LOAD_PERM(2)), LOAD_PERM(0)), 1), 5)) {
	0: action2_6526;
	action2_6526;
}

switch(FEAT_INDUSTRIES, SELF, action2_6528, [STORE_PERM(0, 5), var[0x41, 0, -1]]) {
	0: action2_6526;
	action2_6527;
}

switch(FEAT_INDUSTRIES, SELF, action2_6529, STORE_PERM(max(min(((var[0x40, 0, -1] / 8) * LOAD_PERM(1)), LOAD_PERM(0)), 1), 4)) {
	0: action2_6528;
	action2_6528;
}

switch(FEAT_INDUSTRIES, SELF, action2_6530, [STORE_PERM(0, 4), var[0x40, 0, -1]]) {
	0: action2_6528;
	action2_6529;
}

switch(FEAT_INDUSTRIES, SELF, action2_6531, STORE_PERM(1, 3)) {
	0: action2_6530;
	action2_6530;
}

switch(FEAT_INDUSTRIES, SELF, action2_6532, STORE_PERM(1, 2)) {
	0: action2_6531;
	action2_6531;
}

switch(FEAT_INDUSTRIES, SELF, action2_6533, STORE_PERM(6, 1)) {
	0: action2_6532;
	action2_6532;
}

switch(FEAT_INDUSTRIES, SELF, action2_6534, STORE_TEMP(LOAD_PERM(0), 260)) {
	0: return string(STR_INFO_DEBUG_PRODUCTION_RATIO);
	return string(STR_INFO_DEBUG_PRODUCTION_RATIO);
}

switch(FEAT_INDUSTRIES, SELF, action2_6535, STORE_TEMP((rotate((LOAD_PERM(11) & 65535), 16) | (LOAD_PERM(10) & 65535)), 259)) {
	0: action2_6534;
	action2_6534;
}

switch(FEAT_INDUSTRIES, SELF, action2_6536, STORE_TEMP((rotate((LOAD_PERM(9) & 65535), 16) | (LOAD_PERM(8) & 65535)), 258)) {
	0: action2_6535;
	action2_6535;
}

switch(FEAT_INDUSTRIES, SELF, action2_6537, STORE_TEMP((rotate((LOAD_PERM(7) & 65535), 16) | (LOAD_PERM(3) & 65535)), 257)) {
	0: action2_6536;
	action2_6536;
}

switch(FEAT_INDUSTRIES, SELF, action2_6538, STORE_TEMP((rotate((LOAD_PERM(2) & 65535), 16) | (LOAD_PERM(1) & 65535)), 256)) {
	0: action2_6537;
	action2_6537;
}

switch(FEAT_INDUSTRIES, SELF, action2_6539, show_debug_texts) {
	1: action2_6538;
	return string(STR_GENERIC_D011);
}

switch(FEAT_INDUSTRIES, SELF, action2_6540, STORE_PERM((65535 / 1), 0)) {
	0: action2_6533;
	action2_6533;
}

CHECK_OPENING(action2_6543, 1885, -1)

switch(FEAT_INDUSTRIES, SELF, action2_6544, [STORE_TEMP((688117 - 701265), 256), 32933]) {
	return;
}

SWITCH_COLOUR_SCHEME1(action2_6547)

SET_PRODUCTION_COUNTER_PRODUCED(action2_6550)

CHECK_CLOSE_SECONDARY(action2_6553)

switch(FEAT_INDUSTRIES, SELF, action2_6554, current_callback) {
	0: action2_6540;
	IND_CB_LOCATION_CHECK: action2_6514;
	IND_CB_AVAILABILITY: action2_6543;
	IND_CB_COLOUR: action2_6547;
	IND_CB_EXTRA_TEXT_FUND: action2_6544;
	IND_CB_RANDOM_PROD_CHANGE: action2_6553;
	IND_CB_MONTHLY_PROD_CHANGE: action2_6550;
	IND_CB_EXTRA_TEXT_INDUSTRY: action2_6539;
	action2_6516;
}

item(FEAT_INDUSTRIES, refinery, 17) {
	graphics {
		action2_6554;
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_18, 18) {
	property {
		substitute: 18;
		override: 18;
		accepted_cargos: [[OIL_, 8], [0, 0], [0, 0]];
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_19, 19) {
	property {
		substitute: 19;
		override: 19;
		accepted_cargos: [[OIL_, 8], [0, 0], [0, 0]];
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_20, 20) {
	property {
		substitute: 20;
		override: 20;
		accepted_cargos: [[OIL_, 8], [0, 0], [0, 0]];
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_21, 21) {
	property {
		substitute: 21;
		override: 21;
		accepted_cargos: [[OIL_, 8], [0, 0], [0, 0]];
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_22, 22) {
	property {
		substitute: 22;
		override: 22;
		accepted_cargos: [[OIL_, 8], [0, 0], [0, 0]];
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_23, 23) {
	property {
		substitute: 23;
		override: 23;
		accepted_cargos: [[OIL_, 8], [0, 0], [0, 0]];
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_215, 215) {
	property {
		substitute: 0;
		accepted_cargos: [[ENSP, 8]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

spritelayout action2_6563 {
	ground {
		sprite: 2173;
	}
	building {
		sprite: 2174;
		xoffset: 1;
		yoffset: 2;
		xextent: 15;
		yextent: 14;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6564, var[0x03, 0, 255]) {
	0: action2_6563;
	1: action2_6563;
	2: action2_6563;
	action2_6563;
}

CHECK_NEARBY_TILE_CLASS(action2_6572)

switch(FEAT_INDUSTRYTILES, PARENT, action2_6573, founder) {
	16: action2_6572;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6574, var[0x60, 4, 1, 0]) {
	1: return 1025;
	action2_6573;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6575, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_6574;
	action2_6564;
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_215, 215) {
	graphics {
		action2_6575;
	}
}

//??????? Oil well vvv ??????

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_216, 216) {
	property {
		substitute: 0;
		accepted_cargos: [[ENSP, 8]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

spriteset(spriteset_6579, "sprites/graphics/industries/oilwell.png") { tmpl_building_sprite(10, 10, 38, -9) } 
spritelayout action2_6580 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_6579;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		xoffset: 1;
		yoffset: 2;
		xextent: 15;
		yextent: 14;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6581, var[0x03, 0, 255]) {
	0: action2_6580;
	1: action2_6580;
	2: action2_6580;
	action2_6580;
}

CHECK_NEARBY_TILE_CLASS(action2_6589)

switch(FEAT_INDUSTRYTILES, PARENT, action2_6590, founder) {
	16: action2_6589;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6591, var[0x60, 4, 1, 0]) {
	1: return 1025;
	action2_6590;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6592, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_6591;
	action2_6581;
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_216, 216) {
	graphics {
		action2_6592;
	}
}

tilelayout tilelayout_7594_1 {
	0, 0: item_FEAT_INDUSTRYTILES_215;
	0, 7: item_FEAT_INDUSTRYTILES_215;
	1, 4: item_FEAT_INDUSTRYTILES_215;
	2, 1: item_FEAT_INDUSTRYTILES_215;
	3, 5: item_FEAT_INDUSTRYTILES_216;
	4, 8: item_FEAT_INDUSTRYTILES_215;
	5, 1: item_FEAT_INDUSTRYTILES_215;
	5, 4: item_FEAT_INDUSTRYTILES_215;
}

tilelayout tilelayout_7594_2 {
	0, 0: item_FEAT_INDUSTRYTILES_215;
	0, 4: item_FEAT_INDUSTRYTILES_215;
	1, 4: item_FEAT_INDUSTRYTILES_215;
	2, 8: item_FEAT_INDUSTRYTILES_215;
	4, 4: item_FEAT_INDUSTRYTILES_216;
	4, 8: item_FEAT_INDUSTRYTILES_215;
	5, 2: item_FEAT_INDUSTRYTILES_215;
	6, 2: item_FEAT_INDUSTRYTILES_215;
	6, 4: item_FEAT_INDUSTRYTILES_215;
}

tilelayout tilelayout_7594_3 {
	0, 0: item_FEAT_INDUSTRYTILES_215;
	0, 2: item_FEAT_INDUSTRYTILES_215;
	1, 4: item_FEAT_INDUSTRYTILES_215;
	1, 6: item_FEAT_INDUSTRYTILES_215;
	2, 0: item_FEAT_INDUSTRYTILES_216;
	3, 2: item_FEAT_INDUSTRYTILES_215;
	3, 4: item_FEAT_INDUSTRYTILES_215;
}

tilelayout tilelayout_7594_4 {
	0, 0: item_FEAT_INDUSTRYTILES_215;
	0, 4: item_FEAT_INDUSTRYTILES_215;
	0, 6: item_FEAT_INDUSTRYTILES_215;
	1, 2: item_FEAT_INDUSTRYTILES_215;
	1, 8: item_FEAT_INDUSTRYTILES_216;
	2, 0: item_FEAT_INDUSTRYTILES_215;
	2, 2: item_FEAT_INDUSTRYTILES_215;
	3, 1: item_FEAT_INDUSTRYTILES_215;
	5, 0: item_FEAT_INDUSTRYTILES_215;
	5, 2: item_FEAT_INDUSTRYTILES_215;
	6, 0: item_FEAT_INDUSTRYTILES_215;
}

item(FEAT_INDUSTRIES, oil_wells, 15) {
	property {
		substitute: 0;
		layouts: [tilelayout_7594_1, tilelayout_7594_2, tilelayout_7594_3, tilelayout_7594_4];
		life_type: 2;
		closure_msg: 18483;
		prod_increase_msg: 18485;
		prod_decrease_msg: 18489;
		new_ind_msg: 18477;
		name: 18445;
		prod_cargo_types: [OIL_];
		accept_cargo_types: [ENSP];
		prod_multiplier: [19];
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 3;
		prospect_chance: 0.749999999942;
		fund_cost_multiplier: 230;
		map_colour: 152;
		spec_flags: 0;
		callback_flags: 1467;
		nearby_station_name: string(STR_GENERIC_DCE3);
	}
}

switch(FEAT_INDUSTRIES, SELF, action2_6595, 1) {
	1: return 1024;
	return 1024;
}

switch(FEAT_INDUSTRIES, SELF, action2_6596, industry_distance(refinery)) {
	0..16: return 4;
	action2_6595;
}

switch(FEAT_INDUSTRIES, SELF, action2_6597, founder) {
	16: action2_6596;
	return 1024;
}

switch(FEAT_INDUSTRIES, SELF, action2_6598, game_mode) {
	1: action2_6597;
	return 1024;
}

produce(action2_6599, 9999, 0, 0, 0, 0, 0);

switch(FEAT_INDUSTRIES, SELF, action2_6600, STORE_PERM((var[0x40, 0, -1] + LOAD_PERM(0)), 0)) {
	0: action2_6599;
	action2_6599;
}

switch(FEAT_INDUSTRIES, SELF, action2_6601, var[0x93, 0, -1]) {
	0..4: return 3;
	return 0;
}

switch(FEAT_INDUSTRIES, SELF, action2_6602, allow_close_primary) {
	1..255: action2_6601;
	return 0;
}

switch(FEAT_INDUSTRIES, SELF, action2_6603, (extra_callback_info2 & 31)) {
	0: return 13;
	return 0;
}

switch(FEAT_INDUSTRIES, SELF, action2_6604, (extra_callback_info2 & 3)) {
	0: return 13;
	return 0;
}

switch(FEAT_INDUSTRIES, SELF, action2_6605, STORE_PERM(var[0x93, 0, -1], 2)) {
	0..4: return 0;
	5..32: action2_6603;
	action2_6604;
}

switch(FEAT_INDUSTRIES, SELF, action2_6606, allow_primary_production_decrease) {
	1..255: action2_6605;
	return 0;
}

switch(FEAT_INDUSTRIES, SELF, action2_6607, (extra_callback_info2 & 3)) {
	0: return 14;
	return 0;
}

switch(FEAT_INDUSTRIES, SELF, action2_6608, [STORE_PERM(0, 0), LOAD_TEMP(1)]) {
	1..-1: action2_6607;
	action2_6606;
}

switch(FEAT_INDUSTRIES, SELF, action2_6609, STORE_TEMP(LOAD_PERM(0), 1)) {
	0: action2_6608;
	action2_6608;
}

switch(FEAT_INDUSTRIES, SELF, action2_6610, [STORE_TEMP(LOAD_PERM(0), 256), var[0x93, 0, -1]]) {
	128: return string(STR_GENERIC_D0B3);
	return string(STR_GENERIC_D0B0);
}

CHECK_OPENING(action2_6614, 1885, -1)

switch(FEAT_INDUSTRIES, SELF, action2_6615, [STORE_TEMP((688117 - 701265), 256), 32933]) {
	return;
}

SWITCH_COLOUR_SCHEME1(action2_6618)

switch(FEAT_INDUSTRIES, SELF, action2_6619, current_callback) {
	0: action2_6600;
	IND_CB_LOCATION_CHECK: action2_6598;
	IND_CB_AVAILABILITY: action2_6614;
	IND_CB_COLOUR: action2_6618;
	IND_CB_EXTRA_TEXT_FUND: action2_6615;
	IND_CB_RANDOM_PROD_CHANGE: action2_6602;
	IND_CB_MONTHLY_PROD_CHANGE: action2_6609;
	IND_CB_EXTRA_TEXT_INDUSTRY: action2_6610;
	action2_6599;
}

item(FEAT_INDUSTRIES, oil_wells, 15) {
	graphics {
		action2_6619;
	}
}


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



item(FEAT_INDUSTRIES, sawmill, 12) {
	property {
		substitute: 2;
		override: 2;
		nearby_station_name: string(STR_STATIONNAME_MILLS);
		prod_cargo_types: [WDPR];
		accept_cargo_types: [WOOD];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 2;
		fund_cost_multiplier: 97;
		map_colour: 194;
		callback_flags: 317;
	}
}

switch(FEAT_INDUSTRIES, SELF, action2_7242, industry_distance(forest)) {
	16..60: return 1024;
	return 4;
}

switch(FEAT_INDUSTRIES, SELF, action2_7243, (((industry_count(11) * 5) / 4) / industry_clusters)) {
	0: return 1024;
	action2_7242;
}

switch(FEAT_INDUSTRIES, SELF, action2_7244, STORE_TEMP(-1, 256)) {
	0: action2_7243;
	action2_7243;
}

switch(FEAT_INDUSTRIES, SELF, action2_7245, industry_distance(forest)) {
	0..16: return 4;
	action2_7244;
}

switch(FEAT_INDUSTRIES, SELF, action2_7246, founder) {
	16: action2_7245;
	return 1024;
}

switch(FEAT_INDUSTRIES, SELF, action2_7247, game_mode) {
	1: action2_7246;
	return 1024;
}

produce(action2_7248, LOAD_TEMP(7), LOAD_TEMP(8), LOAD_TEMP(9), LOAD_TEMP(10), LOAD_TEMP(11), LOAD_TEMP(0));

switch(FEAT_INDUSTRIES, SELF, action2_7249, [STORE_TEMP(0, 0), 1]) {
	0: action2_7248;
	action2_7248;
}

switch(FEAT_INDUSTRIES, SELF, action2_7250, [STORE_TEMP(STORE_PERM(STORE_TEMP(STORE_PERM(0, 11), 11), 10), 10), 1]) {
	0: action2_7249;
	action2_7249;
}

switch(FEAT_INDUSTRIES, SELF, action2_7251, [STORE_TEMP(STORE_PERM(0, 11), 11), STORE_TEMP(STORE_PERM(LOAD_TEMP(10), 10), 10)]) {
	0: action2_7249;
	action2_7249;
}

switch(FEAT_INDUSTRIES, SELF, action2_7252, STORE_TEMP(STORE_PERM(STORE_TEMP(STORE_PERM(max((LOAD_TEMP(10) / 1), 1), 10), 10), 11), 11)) {
	0: action2_7249;
	action2_7249;
}

switch(FEAT_INDUSTRIES, SELF, action2_7253, 1) {
	2: action2_7252;
	action2_7251;
}

switch(FEAT_INDUSTRIES, SELF, action2_7254, STORE_TEMP(((LOAD_PERM(4) + LOAD_PERM(5)) + LOAD_PERM(6)), 10)) {
	0: action2_7250;
	action2_7253;
}

switch(FEAT_INDUSTRIES, SELF, action2_7255, [STORE_TEMP(((LOAD_PERM(6) / LOAD_PERM(12)) * 8), 9), STORE_TEMP(STORE_PERM(((var[0x42, 0, -1] - LOAD_TEMP(9)) + LOAD_TEMP(9)), 9), 9)]) {
	0: action2_7254;
	action2_7254;
}

switch(FEAT_INDUSTRIES, SELF, action2_7256, [STORE_TEMP(((LOAD_PERM(5) / LOAD_PERM(12)) * 8), 8), STORE_TEMP(STORE_PERM(((var[0x41, 0, -1] - LOAD_TEMP(8)) + LOAD_TEMP(8)), 8), 8)]) {
	0: action2_7255;
	action2_7255;
}

switch(FEAT_INDUSTRIES, SELF, action2_7257, [STORE_TEMP(((LOAD_PERM(4) / LOAD_PERM(12)) * 8), 7), STORE_TEMP(STORE_PERM(((var[0x40, 0, -1] - LOAD_TEMP(7)) + LOAD_TEMP(7)), 7), 7)]) {
	0: action2_7256;
	action2_7256;
}

switch(FEAT_INDUSTRIES, SELF, action2_7258, STORE_PERM(max(min(((var[0x42, 0, -1] / 8) * LOAD_PERM(3)), LOAD_PERM(0)), 1), 6)) {
	0: action2_7257;
	action2_7257;
}

switch(FEAT_INDUSTRIES, SELF, action2_7259, [STORE_PERM(0, 6), var[0x42, 0, -1]]) {
	0: action2_7257;
	action2_7258;
}

switch(FEAT_INDUSTRIES, SELF, action2_7260, STORE_PERM(max(min(((var[0x41, 0, -1] / 8) * LOAD_PERM(2)), LOAD_PERM(0)), 1), 5)) {
	0: action2_7259;
	action2_7259;
}

switch(FEAT_INDUSTRIES, SELF, action2_7261, [STORE_PERM(0, 5), var[0x41, 0, -1]]) {
	0: action2_7259;
	action2_7260;
}

switch(FEAT_INDUSTRIES, SELF, action2_7262, STORE_PERM(max(min(((var[0x40, 0, -1] / 8) * LOAD_PERM(1)), LOAD_PERM(0)), 1), 4)) {
	0: action2_7261;
	action2_7261;
}

switch(FEAT_INDUSTRIES, SELF, action2_7263, [STORE_PERM(0, 4), var[0x40, 0, -1]]) {
	0: action2_7261;
	action2_7262;
}

switch(FEAT_INDUSTRIES, SELF, action2_7264, STORE_PERM(1, 3)) {
	0: action2_7263;
	action2_7263;
}

switch(FEAT_INDUSTRIES, SELF, action2_7265, STORE_PERM(1, 2)) {
	0: action2_7264;
	action2_7264;
}

switch(FEAT_INDUSTRIES, SELF, action2_7266, STORE_PERM(6, 1)) {
	0: action2_7265;
	action2_7265;
}

switch(FEAT_INDUSTRIES, SELF, action2_7267, STORE_TEMP(LOAD_PERM(0), 260)) {
	0: return string(STR_INFO_DEBUG_PRODUCTION_RATIO);
	return string(STR_INFO_DEBUG_PRODUCTION_RATIO);
}

switch(FEAT_INDUSTRIES, SELF, action2_7268, STORE_TEMP((rotate((LOAD_PERM(11) & 65535), 16) | (LOAD_PERM(10) & 65535)), 259)) {
	0: action2_7267;
	action2_7267;
}

switch(FEAT_INDUSTRIES, SELF, action2_7269, STORE_TEMP((rotate((LOAD_PERM(9) & 65535), 16) | (LOAD_PERM(8) & 65535)), 258)) {
	0: action2_7268;
	action2_7268;
}

switch(FEAT_INDUSTRIES, SELF, action2_7270, STORE_TEMP((rotate((LOAD_PERM(7) & 65535), 16) | (LOAD_PERM(3) & 65535)), 257)) {
	0: action2_7269;
	action2_7269;
}

switch(FEAT_INDUSTRIES, SELF, action2_7271, STORE_TEMP((rotate((LOAD_PERM(2) & 65535), 16) | (LOAD_PERM(1) & 65535)), 256)) {
	0: action2_7270;
	action2_7270;
}

switch(FEAT_INDUSTRIES, SELF, action2_7272, show_debug_texts) {
	1: action2_7271;
	return string(STR_GENERIC_D00C);
}

switch(FEAT_INDUSTRIES, SELF, action2_7273, STORE_PERM((65535 / 1), 0)) {
	0: action2_7266;
	action2_7266;
}

CHECK_OPENING(action2_7276, 0, -1)

switch(FEAT_INDUSTRIES, SELF, action2_7277, [STORE_TEMP(-701265, 256), 32928]) {
	return;
}

SWITCH_COLOUR_SCHEME1(action2_7280)

SET_PRODUCTION_COUNTER_PRODUCED(action2_7283)

CHECK_CLOSE_SECONDARY(action2_7286)

switch(FEAT_INDUSTRIES, SELF, action2_7287, current_callback) {
	0: action2_7273;
	IND_CB_LOCATION_CHECK: action2_7247;
	IND_CB_AVAILABILITY: action2_7276;
	IND_CB_COLOUR: action2_7280;
	IND_CB_CARGO_OUTPUT: action2_7199;
	IND_CB_EXTRA_TEXT_FUND: action2_7277;
	IND_CB_RANDOM_PROD_CHANGE: action2_7286;
	IND_CB_MONTHLY_PROD_CHANGE: action2_7283;
	IND_CB_EXTRA_TEXT_INDUSTRY: action2_7272;
	action2_7249;
}

item(FEAT_INDUSTRIES, sawmill, 12) {
	graphics {
		action2_7287;
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_11, 11) {
	property {
		substitute: 11;
		override: 11;
		accepted_cargos: [[WOOD, 8], [0, 0], [0, 0]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_12, 12) {
	property {
		substitute: 12;
		override: 12;
		accepted_cargos: [[WOOD, 8], [0, 0], [0, 0]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_13, 13) {
	property {
		substitute: 13;
		override: 13;
		accepted_cargos: [[WOOD, 8], [0, 0], [0, 0]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_14, 14) {
	property {
		substitute: 14;
		override: 14;
		accepted_cargos: [[WOOD, 8], [0, 0], [0, 0]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_15, 15) {
	property {
		substitute: 15;
		override: 15;
		accepted_cargos: [[WOOD, 8], [0, 0], [0, 0]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

CHECK_NEARBY_TILE_CLASS(action2_7301)

switch(FEAT_INDUSTRYTILES, PARENT, action2_7302, founder) {
	16: action2_7301;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_7303, var[0x60, 4, 1, 0]) {
	1: return 1025;
	action2_7302;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_7304, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_7303;
	CB_FAILED;
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_11, 11) {
	graphics {
		action2_7304;
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_12, 12) {
	graphics {
		action2_7304;
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_13, 13) {
	graphics {
		action2_7304;
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_14, 14) {
	graphics {
		action2_7304;
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_15, 15) {
	graphics {
		action2_7304;
	}
}



/////////////////////////////////////////////////////////////////////////////////////////////////////////



item(FEAT_INDUSTRIES, item_FEAT_INDUSTRIES_7, 7) {
	property {
		substitute: 8;
		override: 8;
		nearby_station_name: string(STR_STATIONNAME_MILLS);
		accept_cargo_types: [IORE, 1, 20];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 2;
		fund_cost_multiplier: 200;
		map_colour: 9;
		callback_flags: 445;
	}
}

switch(FEAT_INDUSTRIES, SELF, action2_7407, industry_distance(item_FEAT_INDUSTRIES_7)) {
	0..56: return 1025;
	return 1024;
}

switch(FEAT_INDUSTRIES, SELF, action2_7408, industry_distance(coal_mine)) {
	0..16: return 4;
	action2_7407;
}

switch(FEAT_INDUSTRIES, SELF, action2_7409, industry_distance(iron_ore_mine)) {
	0..16: return 4;
	action2_7408;
}

switch(FEAT_INDUSTRIES, SELF, action2_7410, industry_distance(junkyard)) {
	0..16: return 4;
	action2_7409;
}

switch(FEAT_INDUSTRIES, SELF, action2_7411, founder) {
	16: action2_7410;
	return 1024;
}

switch(FEAT_INDUSTRIES, SELF, action2_7412, game_mode) {
	1: action2_7411;
	return 1024;
}

produce(action2_7413, LOAD_TEMP(7), LOAD_TEMP(8), LOAD_TEMP(9), LOAD_TEMP(10), LOAD_TEMP(11), LOAD_TEMP(0));

switch(FEAT_INDUSTRIES, SELF, action2_7414, [STORE_TEMP(0, 0), 1]) {
	0: action2_7413;
	action2_7413;
}

switch(FEAT_INDUSTRIES, SELF, action2_7415, [STORE_TEMP(STORE_PERM(STORE_TEMP(STORE_PERM(0, 11), 11), 10), 10), 1]) {
	0: action2_7414;
	action2_7414;
}

switch(FEAT_INDUSTRIES, SELF, action2_7416, [STORE_TEMP(STORE_PERM(0, 11), 11), STORE_TEMP(STORE_PERM(LOAD_TEMP(10), 10), 10)]) {
	0: action2_7414;
	action2_7414;
}

switch(FEAT_INDUSTRIES, SELF, action2_7417, STORE_TEMP(STORE_PERM(STORE_TEMP(STORE_PERM(max((LOAD_TEMP(10) / 1), 1), 10), 10), 11), 11)) {
	0: action2_7414;
	action2_7414;
}

switch(FEAT_INDUSTRIES, SELF, action2_7418, 1) {
	2: action2_7417;
	action2_7416;
}

switch(FEAT_INDUSTRIES, SELF, action2_7419, STORE_TEMP(((LOAD_PERM(4) + LOAD_PERM(5)) + LOAD_PERM(6)), 10)) {
	0: action2_7415;
	action2_7418;
}

switch(FEAT_INDUSTRIES, SELF, action2_7420, [STORE_TEMP(((LOAD_PERM(6) / LOAD_PERM(12)) * 8), 9), STORE_TEMP(STORE_PERM(((var[0x42, 0, -1] - LOAD_TEMP(9)) + LOAD_TEMP(9)), 9), 9)]) {
	0: action2_7419;
	action2_7419;
}

switch(FEAT_INDUSTRIES, SELF, action2_7421, [STORE_TEMP(((LOAD_PERM(5) / LOAD_PERM(12)) * 8), 8), STORE_TEMP(STORE_PERM(((var[0x41, 0, -1] - LOAD_TEMP(8)) + LOAD_TEMP(8)), 8), 8)]) {
	0: action2_7420;
	action2_7420;
}

switch(FEAT_INDUSTRIES, SELF, action2_7422, [STORE_TEMP(((LOAD_PERM(4) / LOAD_PERM(12)) * 8), 7), STORE_TEMP(STORE_PERM(((var[0x40, 0, -1] - LOAD_TEMP(7)) + LOAD_TEMP(7)), 7), 7)]) {
	0: action2_7421;
	action2_7421;
}

switch(FEAT_INDUSTRIES, SELF, action2_7423, STORE_PERM(max(min(((var[0x42, 0, -1] / 8) * LOAD_PERM(12)), LOAD_PERM(0)), 1), 6)) {
	0: action2_7422;
	action2_7422;
}

switch(FEAT_INDUSTRIES, SELF, action2_7424, [STORE_PERM(0, 6), var[0x42, 0, -1]]) {
	0: action2_7422;
	action2_7423;
}

switch(FEAT_INDUSTRIES, SELF, action2_7425, STORE_PERM(max(min(((var[0x41, 0, -1] / 8) * LOAD_PERM(12)), LOAD_PERM(0)), 1), 5)) {
	0: action2_7424;
	action2_7424;
}

switch(FEAT_INDUSTRIES, SELF, action2_7426, [STORE_PERM(0, 5), var[0x41, 0, -1]]) {
	0: action2_7424;
	action2_7425;
}

switch(FEAT_INDUSTRIES, SELF, action2_7427, STORE_PERM(max(min(((var[0x40, 0, -1] / 8) * LOAD_PERM(12)), LOAD_PERM(0)), 1), 4)) {
	0: action2_7426;
	action2_7426;
}

switch(FEAT_INDUSTRIES, SELF, action2_7428, [STORE_PERM(0, 4), var[0x40, 0, -1]]) {
	0: action2_7426;
	action2_7427;
}

switch(FEAT_INDUSTRIES, SELF, action2_7429, STORE_PERM((((0 + LOAD_PERM(1)) + LOAD_PERM(2)) + LOAD_PERM(3)), 12)) {
	0: action2_7428;
	action2_7428;
}

switch(FEAT_INDUSTRIES, SELF, action2_7430, [STORE_PERM(0, 3), 1]) {
	0: action2_7429;
	action2_7429;
}

switch(FEAT_INDUSTRIES, SELF, action2_7431, [STORE_PERM(2, 3), STORE_PERM((1 + LOAD_PERM(15)), 15)]) {
	0: action2_7429;
	action2_7429;
}

switch(FEAT_INDUSTRIES, SELF, action2_7432, LOAD_PERM(15)) {
	0..7: action2_7431;
	action2_7430;
}

switch(FEAT_INDUSTRIES, SELF, action2_7433, [STORE_PERM(0, 15), 1]) {
	0: action2_7431;
	action2_7431;
}

switch(FEAT_INDUSTRIES, SELF, action2_7434, waiting_cargo_3) {
	0: action2_7432;
	action2_7433;
}

switch(FEAT_INDUSTRIES, SELF, action2_7435, [STORE_PERM(0, 2), 1]) {
	0: action2_7434;
	action2_7434;
}

switch(FEAT_INDUSTRIES, SELF, action2_7436, [STORE_PERM(4, 2), STORE_PERM((1 + LOAD_PERM(14)), 14)]) {
	0: action2_7434;
	action2_7434;
}

switch(FEAT_INDUSTRIES, SELF, action2_7437, LOAD_PERM(14)) {
	0..7: action2_7436;
	action2_7435;
}

switch(FEAT_INDUSTRIES, SELF, action2_7438, [STORE_PERM(0, 14), 1]) {
	0: action2_7436;
	action2_7436;
}

switch(FEAT_INDUSTRIES, SELF, action2_7439, waiting_cargo_2) {
	0: action2_7437;
	action2_7438;
}

switch(FEAT_INDUSTRIES, SELF, action2_7440, [STORE_PERM(0, 1), 1]) {
	0: action2_7439;
	action2_7439;
}

switch(FEAT_INDUSTRIES, SELF, action2_7441, [STORE_PERM(2, 1), STORE_PERM((1 + LOAD_PERM(13)), 13)]) {
	0: action2_7439;
	action2_7439;
}

switch(FEAT_INDUSTRIES, SELF, action2_7442, LOAD_PERM(13)) {
	0..7: action2_7441;
	action2_7440;
}

switch(FEAT_INDUSTRIES, SELF, action2_7443, [STORE_PERM(0, 13), 1]) {
	0: action2_7441;
	action2_7441;
}

switch(FEAT_INDUSTRIES, SELF, action2_7444, waiting_cargo_1) {
	0: action2_7442;
	action2_7443;
}

switch(FEAT_INDUSTRIES, SELF, action2_7445, STORE_TEMP((rotate((LOAD_PERM(15) & 65535), 16) | (LOAD_PERM(14) & 65535)), 261)) {
	0: return string(STR_INFO_DEBUG_PRODUCTION_CONTRIBUTION);
	return string(STR_INFO_DEBUG_PRODUCTION_CONTRIBUTION);
}

switch(FEAT_INDUSTRIES, SELF, action2_7446, STORE_TEMP((rotate((LOAD_PERM(13) & 65535), 16) | (LOAD_PERM(12) & 65535)), 260)) {
	0: action2_7445;
	action2_7445;
}

switch(FEAT_INDUSTRIES, SELF, action2_7447, STORE_TEMP((rotate((LOAD_PERM(11) & 65535), 16) | (LOAD_PERM(10) & 65535)), 259)) {
	0: action2_7446;
	action2_7446;
}

switch(FEAT_INDUSTRIES, SELF, action2_7448, STORE_TEMP((rotate((LOAD_PERM(9) & 65535), 16) | (LOAD_PERM(8) & 65535)), 258)) {
	0: action2_7447;
	action2_7447;
}

switch(FEAT_INDUSTRIES, SELF, action2_7449, STORE_TEMP((rotate((LOAD_PERM(7) & 65535), 16) | (LOAD_PERM(3) & 65535)), 257)) {
	0: action2_7448;
	action2_7448;
}

switch(FEAT_INDUSTRIES, SELF, action2_7450, STORE_TEMP((rotate((LOAD_PERM(2) & 65535), 16) | (LOAD_PERM(1) & 65535)), 256)) {
	0: action2_7449;
	action2_7449;
}

switch(FEAT_INDUSTRIES, SELF, action2_7451, show_debug_texts) {
	1: action2_7450;
	return string(STR_GENERIC_D007);
}

switch(FEAT_INDUSTRIES, SELF, action2_7452, STORE_PERM((65535 / 3), 0)) {
	0: action2_7444;
	action2_7444;
}

CHECK_OPENING(action2_7455, 1874, -1)

switch(FEAT_INDUSTRIES, SELF, action2_7456, [STORE_TEMP((684100 - 701265), 256), 32933]) {
	return;
}

SWITCH_COLOUR_SCHEME1(action2_7459)

SET_PRODUCTION_COUNTER_PRODUCED(action2_7462)

CHECK_CLOSE_SECONDARY(action2_7465)

switch(FEAT_INDUSTRIES, SELF, action2_7466, current_callback) {
	0: action2_7452;
	IND_CB_LOCATION_CHECK: action2_7412;
	IND_CB_AVAILABILITY: action2_7455;
	IND_CB_COLOUR: action2_7459;
	IND_CB_EXTRA_TEXT_FUND: action2_7456;
	IND_CB_RANDOM_PROD_CHANGE: action2_7465;
	IND_CB_MONTHLY_PROD_CHANGE: action2_7462;
	IND_CB_EXTRA_TEXT_INDUSTRY: action2_7451;
	action2_7414;
}

item(FEAT_INDUSTRIES, item_FEAT_INDUSTRIES_7, 7) {
	graphics {
		action2_7466;
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_52, 52) {
	property {
		substitute: 52;
		override: 52;
		accepted_cargos: [[IORE, 8], [SCRP, 8], [COAL, 8]];
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_53, 53) {
	property {
		substitute: 53;
		override: 53;
		accepted_cargos: [[IORE, 8], [SCRP, 8], [COAL, 8]];
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_54, 54) {
	property {
		substitute: 54;
		override: 54;
		accepted_cargos: [[IORE, 8], [SCRP, 8], [COAL, 8]];
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_55, 55) {
	property {
		substitute: 55;
		override: 55;
		accepted_cargos: [[IORE, 8], [SCRP, 8], [COAL, 8]];
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_56, 56) {
	property {
		substitute: 56;
		override: 56;
		accepted_cargos: [[IORE, 8], [SCRP, 8], [COAL, 8]];
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_57, 57) {
	property {
		substitute: 57;
		override: 57;
		accepted_cargos: [[IORE, 8], [SCRP, 8], [COAL, 8]];
	}
}