/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) dairy_farm ## __VA_ARGS__

#define THIS_STR_EXTRA_SUPPLIES        STR_EXTRA_FARM_SUPPLIES

spriteset(THIS_ID(spriteset_1), "sprites/graphics/industries/dairyfarm.pcx") { tmpl_building_sprite(10, 10, 52, -21) } 
spriteset(THIS_ID(spriteset_2), "sprites/graphics/industries/dairyfarm.pcx") { tmpl_building_sprite(80, 10, 52, -21) } 
spriteset(THIS_ID(spriteset_3), "sprites/graphics/industries/dairyfarm.pcx") { tmpl_building_sprite(150, 10, 52, -21) } 
spriteset(THIS_ID(spriteset_4), "sprites/graphics/industries/dairyfarm.pcx") { tmpl_building_sprite(220, 10, 52, -21) } 
spriteset(THIS_ID(spriteset_5), "sprites/graphics/industries/dairyfarm.pcx") { tmpl_building_sprite(290, 10, 52, -21) } 
spriteset(THIS_ID(spriteset_6), "sprites/graphics/industries/dairyfarm.pcx") { tmpl_building_sprite(360, 10, 52, -21) } 

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_1), 2022, THIS_ID(spriteset_1), 24)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_2), 2022, THIS_ID(spriteset_2), 48)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_3), 2022, THIS_ID(spriteset_3), 24)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_4), GROUNDSPRITE_NORMAL, THIS_ID(spriteset_4), 24)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_5), GROUNDSPRITE_NORMAL, THIS_ID(spriteset_5), 8)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_6), GROUNDSPRITE_NORMAL, THIS_ID(spriteset_6), 8)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_7), 2022, THIS_ID(spriteset_5), 8)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_8), 2022, THIS_ID(spriteset_6), 8)

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_1), relative_pos) {
	relative_coord(3, 0): THIS_ID(spritelayout_1);
	relative_coord(2, 0): THIS_ID(spritelayout_2);
	relative_coord(3, 2): THIS_ID(spritelayout_3);
	relative_coord(0, 2): THIS_ID(spritelayout_4);
	relative_coord(0, 1): THIS_ID(spritelayout_5);
	relative_coord(0, 0): THIS_ID(spritelayout_6);
	relative_coord(2, 1): THIS_ID(spritelayout_7);
	THIS_ID(spritelayout_8);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_2), relative_pos) {
	relative_coord(0, 2): THIS_ID(spritelayout_1);
	relative_coord(1, 2): THIS_ID(spritelayout_2);
	relative_coord(1, 1): THIS_ID(spritelayout_3);
	relative_coord(2, 2): THIS_ID(spritelayout_4);
	relative_coord(2, 0): THIS_ID(spritelayout_5);
	relative_coord(2, 1): THIS_ID(spritelayout_6);
	relative_coord(0, 1): THIS_ID(spritelayout_7);
	THIS_ID(spritelayout_8);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_3), relative_pos) {
	relative_coord(0, 1): THIS_ID(spritelayout_1);
	relative_coord(2, 0): THIS_ID(spritelayout_2);
	relative_coord(1, 0): THIS_ID(spritelayout_3);
	relative_coord(0, 3): THIS_ID(spritelayout_4);
	relative_coord(1, 3): THIS_ID(spritelayout_5);
	relative_coord(2, 3): THIS_ID(spritelayout_6);
	relative_coord(2, 1): THIS_ID(spritelayout_7);
	THIS_ID(spritelayout_8);
}

switch(FEAT_INDUSTRYTILES, PARENT, THIS_ID(layout), layout_num) {
	1: THIS_ID(layout_1);
	2: THIS_ID(layout_2);
	3: THIS_ID(layout_3);
	THIS_ID(spritelayout_1);
}

CHECK_NEARBY_TILE_CLASS(action2_3708)

switch(FEAT_INDUSTRYTILES, PARENT, action2_3709, founder) {
	16: action2_3708;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3710, ((var[0x60, 16, 255, 0] - snowline_height) + 8)) {
	8..127: return 1025;
	action2_3709;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3711, var[0x60, 10, 1, 17]) {
	1: return 1025;
	action2_3710;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3712, var[0x60, 10, 1, 16]) {
	1: action2_3711;
	action2_3710;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3713, var[0x60, 10, 1, 31]) {
	1: action2_3712;
	action2_3710;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3714, var[0x60, 10, 1, 1]) {
	1: action2_3713;
	action2_3710;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3715, var[0x60, 10, 1, 15]) {
	1: action2_3714;
	action2_3710;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3716, var[0x60, 10, 1, 241]) {
	1: action2_3715;
	action2_3710;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3717, var[0x60, 10, 1, 240]) {
	1: action2_3716;
	action2_3710;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3718, var[0x60, 10, 1, 255]) {
	1: action2_3717;
	action2_3710;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3719, var[0x60, 4, 1, 0]) {
	1: return 1025;
	action2_3718;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3720, var[0x60, 9, 1, 0]) {
	1: return 1025;
	action2_3719;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3721, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_3720;
	THIS_ID(layout);
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile), 180) {
	property {
		substitute:       0;
		accepted_cargos:  [[FMSP, 8]];
		land_shape_flags: 0;
		callback_flags:   bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}

	graphics {
		action2_3721;
	}
}

tilelayout tilelayout_dairy_farm_1 {
	0, 0: THIS_ID(tile);
	0, 1: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	3, 1: THIS_ID(tile);
	3, 2: THIS_ID(tile);
}

tilelayout tilelayout_dairy_farm_2 {
	0, 0: THIS_ID(tile);
	0, 1: THIS_ID(tile);
	0, 2: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	1, 2: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	2, 2: THIS_ID(tile);
}

tilelayout tilelayout_dairy_farm_3 {
	0, 1: THIS_ID(tile);
	0, 3: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	1, 3: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	2, 3: THIS_ID(tile);
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

#define THIS_STR_EXTRA_SUPPLIES        STR_EXTRA_FARM_SUPPLIES

CHECK_NEARBY_CLUSTER(dairy_farm, 10, 36, 1, 2, return CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
CHECK_INCOMPATIBLE  (dairy,      16, CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(dairy_farm))
CHECK_INCOMPATIBLE  (stockyard,  16, CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(dairy))
CHECK_FOUNDER       (THIS_ID(stockyard))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_primary.pnml"
#include "../templates/check_primary_production_level.pnml"

#include "../templates/extra_text_primary.pnml"

#include "../templates/check_availability.pnml"

item(FEAT_INDUSTRIES, dairy_farm, 28) {
	property {
		substitute: 0;
		layouts: [
				tilelayout_dairy_farm_1,
				tilelayout_dairy_farm_2,
				tilelayout_dairy_farm_3
			];
		life_type:              IND_LIFE_TYPE_ORGANIC;
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_FARM;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		name:                   string(STR_IND_DAIRYFARM);
		nearby_station_name:    string(STR_STATIONNAME_FARMS);
		prod_cargo_types:       [LVST, MILK];
		accept_cargo_types: [FMSP];
		prod_multiplier: [2, 2];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 1;
		conflicting_ind_types: [];
		prob_random: 18;
		prob_in_game: 3;
		prospect_chance: 0.75;
		fund_cost_multiplier: 60;
		map_colour: 164;
		remove_cost_multiplier: 0;
		spec_flags:             0;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		availability:            THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}
#include "../templates/undefs.pnml"

