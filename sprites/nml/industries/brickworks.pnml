/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) brickworks ## __VA_ARGS__

item(FEAT_INDUSTRYTILES, tile_brick_works, 165) {
	property {
		substitute: 0;
		accepted_cargos: [[COAL, 8], [CLAY, 8], [SAND, 8]];
		land_shape_flags: bitmask(LSF_ONLY_ON_FLAT_LAND);
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
		animation_info: [1, 7];
		animation_speed: 3;
		animation_triggers: 1;
	}
}

spriteset(spriteset_3078, "sprites/graphics/industries/brickworks.pcx") { tmpl_building_sprite(10, 10, 101, -64) } 
spriteset(spriteset_3079, "sprites/graphics/industries/brickworks.pcx") { tmpl_building_sprite(80, 10, 101, -59) } 
spriteset(spriteset_3080, "sprites/graphics/industries/brickworks.pcx") { tmpl_building_sprite(150, 10, 101, -71) } 
spriteset(spriteset_3081, "sprites/graphics/industries/brickworks.pcx") { tmpl_building_sprite(220, 10, 101, -69) } 
spriteset(spriteset_3082, "sprites/graphics/industries/groundtiles.png") { tmpl_ground_tile(150, 10) } 
spritelayout action2_3083 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3079;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_3085 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3081;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_3086 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

spritelayout action2_3087 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3078;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3707;
		xoffset: 8;
		zoffset: 70;
		xextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3088 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3078;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3708;
		xoffset: 8;
		zoffset: 70;
		xextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3089 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3078;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3701;
		xoffset: 8;
		zoffset: 70;
		xextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3090 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3078;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3702;
		xoffset: 8;
		zoffset: 70;
		xextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3091 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3078;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3703;
		xoffset: 8;
		zoffset: 70;
		xextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3092 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3078;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3704;
		xoffset: 8;
		zoffset: 70;
		xextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3093 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3078;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3705;
		xoffset: 8;
		zoffset: 70;
		xextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3094 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3078;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3706;
		xoffset: 8;
		zoffset: 70;
		xextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3095 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3080;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3701;
		yoffset: 8;
		zoffset: 58;
		yextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3096 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3080;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3702;
		yoffset: 8;
		zoffset: 58;
		yextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3097 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3080;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3703;
		yoffset: 8;
		zoffset: 58;
		yextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3098 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3080;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3704;
		yoffset: 8;
		zoffset: 58;
		yextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3099 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3080;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3705;
		yoffset: 8;
		zoffset: 58;
		yextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3100 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3080;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3706;
		yoffset: 8;
		zoffset: 58;
		yextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3101 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3080;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3707;
		yoffset: 8;
		zoffset: 58;
		yextent: 8;
		zextent: 7;
	}
}

spritelayout action2_3102 {
	ground {
		sprite: spriteset_3082;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3080;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 7;
	}
	building {
		sprite: 3708;
		yoffset: 8;
		zoffset: 58;
		yextent: 8;
		zextent: 7;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3103, animation_frame) {
	0: action2_3095;
	1: action2_3096;
	2: action2_3097;
	3: action2_3098;
	4: action2_3099;
	5: action2_3100;
	6: action2_3101;
	7: action2_3102;
	action2_3095;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3104, animation_frame) {
	0: action2_3087;
	1: action2_3088;
	2: action2_3089;
	3: action2_3090;
	4: action2_3091;
	5: action2_3092;
	6: action2_3093;
	7: action2_3094;
	action2_3087;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3105, relative_pos) {
	relative_coord(0, 0): action2_3085;
	relative_coord(0, 1): action2_3085;
	relative_coord(1, 0): action2_3103;
	relative_coord(1, 1): action2_3103;
	relative_coord(2, 0): action2_3083;
	relative_coord(2, 1): action2_3104;
	action2_3086;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3106, relative_pos) {
	relative_coord(0, 0): action2_3085;
	relative_coord(0, 1): action2_3085;
	relative_coord(1, 0): action2_3103;
	relative_coord(1, 1): action2_3103;
	relative_coord(2, 0): action2_3083;
	relative_coord(3, 0): action2_3104;
	action2_3086;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3107, relative_pos) {
	relative_coord(0, 0): action2_3085;
	relative_coord(0, 1): action2_3085;
	relative_coord(0, 2): action2_3104;
	relative_coord(1, 0): action2_3103;
	relative_coord(1, 1): action2_3103;
	relative_coord(1, 2): action2_3083;
	action2_3086;
}

switch(FEAT_INDUSTRYTILES, PARENT, action2_3108, layout_num) {
	1: action2_3105;
	2: action2_3106;
	3: action2_3107;
	action2_3105;
}

CHECK_NEARBY_TILE_CLASS(action2_3116)

switch(FEAT_INDUSTRYTILES, PARENT, action2_3117, founder) {
	16: action2_3116;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3118, var[0x60, 0, 255, 0]) {
	1..255: return 1025;
	action2_3117;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3119, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_3118;
	action2_3108;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3120, (extra_callback_info1 & 7)) {
	0: return 0;
	1: return 1;
	2: return 2;
	3: return 3;
	4: return 4;
	5: return 5;
	6: return 6;
	return 254;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3121, (current_callback & 255)) {
	37: action2_3120;
	action2_3119;
}

item(FEAT_INDUSTRYTILES, tile_brick_works, 165) {
	graphics {
		action2_3121;
	}
}

tilelayout tilelayout_brick_works_1 {
	0, 0: tile_brick_works;
	0, 1: tile_brick_works;
	1, 0: tile_brick_works;
	1, 1: tile_brick_works;
	2, 0: tile_brick_works;
	2, 1: tile_brick_works;
	3, 0: item_FEAT_INDUSTRYTILES_231;
	3, 1: tile_brick_works;
	4, 0: item_FEAT_INDUSTRYTILES_229;
	4, 1: tile_brick_works;
}

tilelayout tilelayout_brick_works_2 {
	0, 0: tile_brick_works;
	0, 1: tile_brick_works;
	1, 0: tile_brick_works;
	1, 1: tile_brick_works;
	2, 0: tile_brick_works;
	2, 1: item_FEAT_INDUSTRYTILES_231;
	3, 0: tile_brick_works;
	3, 1: item_FEAT_INDUSTRYTILES_229;
}

tilelayout tilelayout_brick_works_3 {
	0, 0: tile_brick_works;
	0, 1: tile_brick_works;
	0, 2: tile_brick_works;
	0, 3: item_FEAT_INDUSTRYTILES_231;
	1, 0: tile_brick_works;
	1, 1: tile_brick_works;
	1, 2: tile_brick_works;
	1, 3: item_FEAT_INDUSTRYTILES_229;
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    1
#define THIS_PROD_RATIO_CARGO1    2
#define THIS_PROD_RATIO_CARGO2    2
#define THIS_PROD_RATIO_CARGO3    4
#define THIS_BOOST_12             2
#define THIS_BOOST_13             2
#define THIS_BOOST_21             2
#define THIS_BOOST_23             2
#define THIS_BOOST_31             4
#define THIS_BOOST_32             4
#define THIS_PRODUCTION_SPAN      30
/* extra text template */
#define THIS_STR_EXTRA_TEXT       STR_EXTRA_BRICKWORKS

CHECK_INCOMPATIBLE  (brick_works, 56, CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
CHECK_INCOMPATIBLE  (coal_mine,   16, CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(brick_works))
CHECK_INCOMPATIBLE  (quarry,      16, CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(coal_mine))
CHECK_INCOMPATIBLE  (clay_pit,    16, CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(quarry))
CHECK_FOUNDER       (THIS_ID(clay_pit))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_secondary.pnml"
#include "../templates/check_secondary_production_level.pnml"
#include "../templates/check_secondary_closure.pnml"

#include "../templates/extra_text_secondary.pnml"

#include "../templates/check_availability.pnml"

item(FEAT_INDUSTRIES, brick_works, 45) {
	property {
		layouts: [
				tilelayout_brick_works_1,
				tilelayout_brick_works_2,
				tilelayout_brick_works_3
			];
		substitute:             0;
		life_type:              4;
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		name:                   string(STR_IND_BRICK_WORKS);
		prod_cargo_types:       [BDMT];
		accept_cargo_types:     [COAL, SAND, CLAY];
		prod_multiplier:        [0, 0];
		input_multiplier_1:     [0, 0];
		input_multiplier_2:     [0, 0];
		input_multiplier_3:     [0, 0];
		min_cargo_distr:        5;
		conflicting_ind_types:  [];
		prob_random:            5;
		prob_in_game:           3;
		prospect_chance:        0.75;
		fund_cost_multiplier:   120;
		map_colour:             184;
		remove_cost_multiplier: 0;
		spec_flags:             bitmask(IND_FLAG_MILITARY_HELICOPTER_CAN_EXPLODE);
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		availability:            THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"
