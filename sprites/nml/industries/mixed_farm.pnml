/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) mixed_farm ## __VA_ARGS__

item(FEAT_INDUSTRYTILES, tile_mixed_farm, 190) {
	property {
		substitute: 0;
		accepted_cargos: [[FMSP, 8], [0, 0], [0, 0]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

spriteset(spriteset_6404, "sprites/graphics/industries/mixedfarm.pcx") { tmpl_building_sprite(10, 10, 52, -21) } 
spriteset(spriteset_6405, "sprites/graphics/industries/mixedfarm.pcx") { tmpl_building_sprite(80, 10, 52, -21) } 
spriteset(spriteset_6406, "sprites/graphics/industries/mixedfarm.pcx") { tmpl_building_sprite(150, 10, 52, -21) } 
spriteset(spriteset_6407, "sprites/graphics/industries/mixedfarm.pcx") { tmpl_building_sprite(220, 10, 52, -21) } 
spriteset(spriteset_6408, "sprites/graphics/industries/mixedfarm.pcx") { tmpl_building_sprite(290, 10, 52, -21) } 
spriteset(spriteset_6409, "sprites/graphics/industries/mixedfarm.pcx") { tmpl_building_sprite(360, 10, 52, -21) } 
spriteset(spriteset_6410, "sprites/graphics/industries/mixedfarm.pcx") { tmpl_building_sprite(430, 10, 52, -21) } 
spriteset(spriteset_6411, "sprites/graphics/industries/mixedfarm.pcx") { tmpl_building_sprite(500, 10, 52, -21) } 
spritelayout action2_6412 {
	ground {
		sprite: GROUNDSPRITE_CLEARED;
	}
	building {
		sprite: spriteset_6404;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 64;
	}
}

spritelayout action2_6413 {
	ground {
		sprite: GROUNDSPRITE_CLEARED;
	}
	building {
		sprite: spriteset_6405;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_6414 {
	ground {
		sprite: GROUNDSPRITE_CLEARED;
	}
	building {
		sprite: spriteset_6406;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_6415 {
	ground {
		sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_6407;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_6416 {
	ground {
		sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_6408;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_6417 {
	ground {
		sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_6409;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_6418 {
	ground {
		sprite: GROUNDSPRITE_NORMAL;
	}
	building {
		sprite: spriteset_6410;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_6419 {
	ground {
		sprite: GROUNDSPRITE_CLEARED;
	}
	building {
		sprite: spriteset_6411;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6420, relative_pos) {
	relative_coord(2, 0): action2_6412;
	relative_coord(1, 0): action2_6413;
	relative_coord(0, 3): action2_6414;
	relative_coord(3, 3): action2_6415;
	relative_coord(2, 2): action2_6416;
	relative_coord(3, 2): action2_6417;
	relative_coord(2, 3): action2_6418;
	action2_6419;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6421, relative_pos) {
	relative_coord(1, 3): action2_6412;
	relative_coord(2, 2): action2_6413;
	relative_coord(2, 1): action2_6414;
	relative_coord(0, 0): action2_6415;
	relative_coord(1, 0): action2_6416;
	relative_coord(0, 3): action2_6417;
	relative_coord(0, 2): action2_6418;
	action2_6419;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6422, relative_pos) {
	relative_coord(0, 1): action2_6412;
	relative_coord(1, 2): action2_6413;
	relative_coord(1, 0): action2_6414;
	relative_coord(3, 0): action2_6415;
	relative_coord(0, 2): action2_6416;
	relative_coord(3, 2): action2_6417;
	relative_coord(2, 0): action2_6418;
	action2_6419;
}

switch(FEAT_INDUSTRYTILES, PARENT, action2_6423, layout_num) {
	1: action2_6420;
	2: action2_6421;
	3: action2_6422;
	action2_6412;
}

CHECK_NEARBY_TILE_CLASS(action2_6431)

switch(FEAT_INDUSTRYTILES, PARENT, action2_6432, founder) {
	16: action2_6431;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6433, ((var[0x60, 16, 255, 0] - snowline_height) + 8)) {
	8..127: return 1025;
	action2_6432;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6434, var[0x60, 10, 1, 17]) {
	1: return 1025;
	action2_6433;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6435, var[0x60, 10, 1, 16]) {
	1: action2_6434;
	action2_6433;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6436, var[0x60, 10, 1, 31]) {
	1: action2_6435;
	action2_6433;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6437, var[0x60, 10, 1, 1]) {
	1: action2_6436;
	action2_6433;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6438, var[0x60, 10, 1, 15]) {
	1: action2_6437;
	action2_6433;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6439, var[0x60, 10, 1, 241]) {
	1: action2_6438;
	action2_6433;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6440, var[0x60, 10, 1, 240]) {
	1: action2_6439;
	action2_6433;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6441, var[0x60, 10, 1, 255]) {
	1: action2_6440;
	action2_6433;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6442, var[0x60, 4, 1, 0]) {
	1: return 1025;
	action2_6441;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6443, var[0x60, 9, 1, 0]) {
	1: return 1025;
	action2_6442;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6444, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_6443;
	action2_6423;
}

item(FEAT_INDUSTRYTILES, tile_mixed_farm, 190) {
	graphics {
		action2_6444;
	}
}

tilelayout tilelayout_mixed_farm_1 {
	0, 2: tile_mixed_farm;
	0, 3: tile_mixed_farm;
	1, 0: tile_mixed_farm;
	2, 0: tile_mixed_farm;
	2, 2: tile_mixed_farm;
	2, 3: tile_mixed_farm;
	3, 2: tile_mixed_farm;
	3, 3: tile_mixed_farm;
}

tilelayout tilelayout_mixed_farm_2 {
	0, 0: tile_mixed_farm;
	0, 2: tile_mixed_farm;
	0, 3: tile_mixed_farm;
	1, 0: tile_mixed_farm;
	1, 3: tile_mixed_farm;
	2, 0: tile_mixed_farm;
	2, 1: tile_mixed_farm;
	2, 2: tile_mixed_farm;
}

tilelayout tilelayout_mixed_farm_3 {
	0, 0: tile_mixed_farm;
	0, 1: tile_mixed_farm;
	0, 2: tile_mixed_farm;
	1, 0: tile_mixed_farm;
	1, 2: tile_mixed_farm;
	2, 0: tile_mixed_farm;
	3, 0: tile_mixed_farm;
	3, 2: tile_mixed_farm;
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

#define THIS_STR_EXTRA_SUPPLIES        STR_EXTRA_FARM_SUPPLIES

CHECK_NEARBY_CLUSTER(mixed_farm,     10, 36, 1, 2, return CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
CHECK_INCOMPATIBLE  (stockyard,      16, CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(mixed_farm))
CHECK_INCOMPATIBLE  (textile_mill,   16, CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(stockyard))
CHECK_INCOMPATIBLE  (plastics_plant, 16, CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(textile_mill))
CHECK_FOUNDER       (THIS_ID(plastics_plant))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_primary.pnml"
#include "../templates/check_primary_production_level.pnml"

#include "../templates/extra_text_primary.pnml"

#include "../templates/check_availability.pnml"

item(FEAT_INDUSTRIES, mixed_farm, 29) {
	property {
		substitute: 0;
		layouts: [
				tilelayout_mixed_farm_1,
				tilelayout_mixed_farm_2,
				tilelayout_mixed_farm_3
			];
		life_type: 2;
		closure_msg: 18483;
		prod_increase_msg: 18488;
		prod_decrease_msg: 18489;
		new_ind_msg: 18477;
		name: string(STR_IND_MIXEDFARM);
		nearby_station_name: string(STR_STATIONNAME_FARMS);
		prod_cargo_types: [FMSP, FICR];
		accept_cargo_types: [FMSP];
		prod_multiplier: [2, 2];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 1;
		conflicting_ind_types: [];
		prob_random: 18;
		prob_in_game: 3;
		prospect_chance: 0.75;
		fund_cost_multiplier: 49;
		map_colour: 7;
		remove_cost_multiplier: 0;
		spec_flags: 65;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		availability:            THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"
