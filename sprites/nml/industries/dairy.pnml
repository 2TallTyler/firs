/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#include "../templates/spritelayout_templates.pnml"

#define THIS_ID(...) dairy ## __VA_ARGS__

spriteset(THIS_ID(spriteset_ground), "sprites/graphics/industries/groundtiles.png") {
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
}

spriteset(THIS_ID(spriteset_1)) {
	tmpl_building_sprite_filename(10, 10, 94, -63, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename(10, 10, 94, -63, "sprites/graphics/industries/dairy_snow.png")
}

spriteset(THIS_ID(spriteset_ground_spriteset_2), "sprites/graphics/industries/groundtiles.png") {
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
	/* DUPLICATED */
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
}

spriteset(THIS_ID(spriteset_2)) {
	tmpl_building_sprite_filename(80, 10, 94, -63, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename(80, 10, 94, -63, "sprites/graphics/industries/dairy_snow.png")
	/* DUPLICATED */
	tmpl_building_sprite_filename(80, 10, 94, -63, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename(80, 10, 94, -63, "sprites/graphics/industries/dairy_snow.png")
	tmpl_building_sprite_filename(80, 10, 94, -63, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename(80, 10, 94, -63, "sprites/graphics/industries/dairy_snow.png")
	tmpl_building_sprite_filename(80, 10, 94, -63, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename(80, 10, 94, -63, "sprites/graphics/industries/dairy_snow.png")
}

spriteset(THIS_ID(spriteset_flag_anim)) {
	tmpl_building_sprite_filename(220, 120, 64, -65, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename(220, 120, 64, -65, "sprites/graphics/industries/dairy_snow.png")
	tmpl_building_sprite_filename( 10, 120, 64, -65, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename( 10, 120, 64, -65, "sprites/graphics/industries/dairy_snow.png")
	tmpl_building_sprite_filename( 80, 120, 64, -65, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename( 80, 120, 64, -65, "sprites/graphics/industries/dairy_snow.png")
	tmpl_building_sprite_filename(150, 120, 64, -65, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename(150, 120, 64, -65, "sprites/graphics/industries/dairy_snow.png")
}

spriteset(THIS_ID(spriteset_3)) {
	tmpl_building_sprite_filename(150, 10, 94, -62, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename(150, 10, 94, -62, "sprites/graphics/industries/dairy_snow.png")
}

spriteset(THIS_ID(spriteset_4)) {
	tmpl_building_sprite_filename(220, 10, 94, -43, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename(220, 10, 94, -43, "sprites/graphics/industries/dairy_snow.png")
}

spriteset(THIS_ID(spriteset_5)) {
	tmpl_building_sprite_filename(290, 10, 94, -43, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename(290, 10, 94, -43, "sprites/graphics/industries/dairy_snow.png")
}

spriteset(THIS_ID(spriteset_6)) {
	tmpl_building_sprite_filename(360, 10, 94, -43, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename(360, 10, 94, -43, "sprites/graphics/industries/dairy_snow.png")
}

spriteset(THIS_ID(spriteset_7)) {
	tmpl_building_sprite_filename(430, 10, 94, -43, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename(430, 10, 94, -43, "sprites/graphics/industries/dairy_snow.png")
}

spriteset(THIS_ID(spriteset_8)) {
	tmpl_building_sprite_filename(500, 10, 94, -63, "sprites/graphics/industries/dairy.png")
	tmpl_building_sprite_filename(500, 10, 94, -63, "sprites/graphics/industries/dairy_snow.png")
}


SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_1), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_1), 32)

SPRITELAYOUT_NORMAL_SNOW_BEGIN(THIS_ID(spritelayout_2), THIS_ID(spriteset_ground_spriteset_2), THIS_ID(spriteset_ground_spriteset_2), THIS_ID(spriteset_2), 32)
	building {
		sprite: THIS_ID(spriteset_flag_anim(2 * (((animation_frame % 6) < 4) ? (animation_frame % 6) : 6 - (animation_frame % 6)) + (terrain_type == TILETYPE_SNOW)));
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
SPRITELAYOUT_END

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_3), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_3), 32)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_4), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_4), 24)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_5), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_5), 24)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_6), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_6), 24)

SPRITELAYOUT_NORMAL_SNOW_BEGIN(THIS_ID(spritelayout_7_anim), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_7), 7)
	building {
		sprite: 3701 + (animation_frame % 7);
		yoffset: 12;
		zoffset: 56;
		yextent: 3;
		zextent: 7;
	}
SPRITELAYOUT_END

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_8), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_8), 16)

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_1), relative_pos) {
	relative_coord(0, 1): THIS_ID(spritelayout_5);
	relative_coord(1, 0): THIS_ID(spritelayout_6);
	relative_coord(1, 1): THIS_ID(spritelayout_4);
	relative_coord(2, 0): THIS_ID(spritelayout_8);
	relative_coord(2, 1): THIS_ID(spritelayout_3);
	relative_coord(3, 0): THIS_ID(spritelayout_1);
	relative_coord(3, 1): THIS_ID(spritelayout_2);
	THIS_ID(spritelayout_7_anim);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_2), relative_pos) {
	relative_coord(0, 1): THIS_ID(spritelayout_7_anim);
	relative_coord(0, 2): THIS_ID(spritelayout_5);
	relative_coord(1, 1): THIS_ID(spritelayout_6);
	relative_coord(1, 2): THIS_ID(spritelayout_4);
	relative_coord(2, 0): THIS_ID(spritelayout_8);
	relative_coord(2, 1): THIS_ID(spritelayout_3);
	relative_coord(2, 2): THIS_ID(spritelayout_8);
	relative_coord(3, 0): THIS_ID(spritelayout_1);
	relative_coord(3, 1): THIS_ID(spritelayout_2);
	relative_coord(3, 2): THIS_ID(spritelayout_8);
	THIS_ID(spritelayout_7_anim);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_3), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_7_anim);
	relative_coord(0, 1): THIS_ID(spritelayout_5);
	relative_coord(0, 2): THIS_ID(spritelayout_8);
	relative_coord(1, 0): THIS_ID(spritelayout_6);
	relative_coord(1, 1): THIS_ID(spritelayout_4);
	relative_coord(1, 2): THIS_ID(spritelayout_8);
	relative_coord(2, 1): THIS_ID(spritelayout_8);
	relative_coord(2, 2): THIS_ID(spritelayout_3);
	relative_coord(3, 1): THIS_ID(spritelayout_1);
	relative_coord(3, 2): THIS_ID(spritelayout_2);
	THIS_ID(spritelayout_7_anim);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_4), relative_pos) {
	relative_coord(0, 1): THIS_ID(spritelayout_5);
	relative_coord(0, 3): THIS_ID(spritelayout_5);
	relative_coord(1, 0): THIS_ID(spritelayout_6);
	relative_coord(1, 1): THIS_ID(spritelayout_4);
	relative_coord(1, 2): THIS_ID(spritelayout_6);
	relative_coord(1, 3): THIS_ID(spritelayout_4);
	relative_coord(2, 0): THIS_ID(spritelayout_8);
	relative_coord(2, 1): THIS_ID(spritelayout_8);
	relative_coord(2, 2): THIS_ID(spritelayout_3);
	relative_coord(2, 3): THIS_ID(spritelayout_8);
	relative_coord(3, 1): THIS_ID(spritelayout_1);
	relative_coord(3, 2): THIS_ID(spritelayout_2);
	THIS_ID(spritelayout_7_anim);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_5), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_8);
	relative_coord(0, 1): THIS_ID(spritelayout_3);
	relative_coord(0, 2): THIS_ID(spritelayout_7_anim);
	relative_coord(0, 3): THIS_ID(spritelayout_5);
	relative_coord(1, 0): THIS_ID(spritelayout_1);
	relative_coord(1, 1): THIS_ID(spritelayout_2);
	relative_coord(1, 2): THIS_ID(spritelayout_6);
	relative_coord(1, 3): THIS_ID(spritelayout_4);
	THIS_ID(spritelayout_7_anim);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_6), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_7_anim);
	relative_coord(0, 1): THIS_ID(spritelayout_5);
	relative_coord(1, 0): THIS_ID(spritelayout_6);
	relative_coord(1, 1): THIS_ID(spritelayout_4);
	relative_coord(3, 0): THIS_ID(spritelayout_8);
	relative_coord(3, 1): THIS_ID(spritelayout_3);
	relative_coord(4, 0): THIS_ID(spritelayout_1);
	relative_coord(4, 1): THIS_ID(spritelayout_2);
	THIS_ID(spritelayout_7_anim);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_7), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_7_anim);
	relative_coord(0, 1): THIS_ID(spritelayout_5);
	relative_coord(0, 3): THIS_ID(spritelayout_7_anim);
	relative_coord(0, 4): THIS_ID(spritelayout_5);
	relative_coord(1, 0): THIS_ID(spritelayout_6);
	relative_coord(1, 1): THIS_ID(spritelayout_4);
	relative_coord(1, 3): THIS_ID(spritelayout_6);
	relative_coord(1, 4): THIS_ID(spritelayout_4);
	relative_coord(2, 0): THIS_ID(spritelayout_8);
	relative_coord(2, 1): THIS_ID(spritelayout_3);
	relative_coord(2, 3): THIS_ID(spritelayout_8);
	relative_coord(2, 4): THIS_ID(spritelayout_8);
	relative_coord(3, 0): THIS_ID(spritelayout_1);
	relative_coord(3, 1): THIS_ID(spritelayout_2);
	THIS_ID(spritelayout_7_anim);
}

switch(FEAT_INDUSTRYTILES, PARENT, THIS_ID(layout), layout_num) {
	1: THIS_ID(layout_1);
	2: THIS_ID(layout_2);
	3: THIS_ID(layout_3);
	4: THIS_ID(layout_4);
	5: THIS_ID(layout_5);
	6: THIS_ID(layout_6);
	7: THIS_ID(layout_7);
	THIS_ID(layout_1);
}

CHECK_NEARBY_TILE_CLASS(action2_3876)

switch(FEAT_INDUSTRYTILES, PARENT, action2_3877, founder) {
	16: action2_3876;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3878, var[0x60, 0, 255, 0]) {
	1..255: return 1025;
	action2_3877;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3879, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_3878;
	THIS_ID(layout);
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3880, (extra_callback_info1 & 7)) {
	0: return 0;
	1: return 1;
	2: return 2;
	3: return 3;
	4: return 4;
	5: return 5;
	6: return 6;
	return 254;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3881, (current_callback & 255)) {
	37: action2_3880;
	action2_3879;
}

item(FEAT_INDUSTRYTILES, THIS_ID(industrytile), 181) {
	property {
		substitute:         0;
		accepted_cargos:    [[MNSP, 8], [MILK, 8]];
		land_shape_flags:   bitmask(LSF_ONLY_ON_FLAT_LAND);
		callback_flags:     bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
		animation_info:     [1, 7 * 6];
		animation_speed:    3;
		animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_CONSTRUCTION_STATE);
	}

	graphics {
		action2_3881;
	}
}

tilelayout tilelayout_dairy_1 {
	0, 0: THIS_ID(industrytile);
	0, 1: THIS_ID(industrytile);
	1, 0: THIS_ID(industrytile);
	1, 1: THIS_ID(industrytile);
	2, 0: THIS_ID(industrytile);
	2, 1: THIS_ID(industrytile);
	3, 0: THIS_ID(industrytile);
	3, 1: THIS_ID(industrytile);
}

tilelayout tilelayout_dairy_2 {
	0, 1: THIS_ID(industrytile);
	0, 2: THIS_ID(industrytile);
	1, 1: THIS_ID(industrytile);
	1, 2: THIS_ID(industrytile);
	2, 0: THIS_ID(industrytile);
	2, 1: THIS_ID(industrytile);
	2, 2: THIS_ID(industrytile);
	3, 0: THIS_ID(industrytile);
	3, 1: THIS_ID(industrytile);
	3, 2: THIS_ID(industrytile);
}

tilelayout tilelayout_dairy_3 {
	0, 0: THIS_ID(industrytile);
	0, 1: THIS_ID(industrytile);
	0, 2: THIS_ID(industrytile);
	1, 0: THIS_ID(industrytile);
	1, 1: THIS_ID(industrytile);
	1, 2: THIS_ID(industrytile);
	2, 1: THIS_ID(industrytile);
	2, 2: THIS_ID(industrytile);
	3, 1: THIS_ID(industrytile);
	3, 2: THIS_ID(industrytile);
}

tilelayout tilelayout_dairy_4 {
	0, 0: THIS_ID(industrytile);
	0, 1: THIS_ID(industrytile);
	0, 2: THIS_ID(industrytile);
	0, 3: THIS_ID(industrytile);
	1, 0: THIS_ID(industrytile);
	1, 1: THIS_ID(industrytile);
	1, 2: THIS_ID(industrytile);
	1, 3: THIS_ID(industrytile);
	2, 0: THIS_ID(industrytile);
	2, 1: THIS_ID(industrytile);
	2, 2: THIS_ID(industrytile);
	2, 3: THIS_ID(industrytile);
	3, 1: THIS_ID(industrytile);
	3, 2: THIS_ID(industrytile);
}

tilelayout tilelayout_dairy_5 {
	0, 0: THIS_ID(industrytile);
	0, 1: THIS_ID(industrytile);
	0, 2: THIS_ID(industrytile);
	0, 3: THIS_ID(industrytile);
	1, 0: THIS_ID(industrytile);
	1, 1: THIS_ID(industrytile);
	1, 2: THIS_ID(industrytile);
	1, 3: THIS_ID(industrytile);
}

tilelayout tilelayout_dairy_6 {
	0, 0: THIS_ID(industrytile);
	0, 1: THIS_ID(industrytile);
	1, 0: THIS_ID(industrytile);
	1, 1: THIS_ID(industrytile);
	3, 0: THIS_ID(industrytile);
	3, 1: THIS_ID(industrytile);
	4, 0: THIS_ID(industrytile);
	4, 1: THIS_ID(industrytile);
}

tilelayout tilelayout_dairy_7 {
	0, 0: THIS_ID(industrytile);
	0, 1: THIS_ID(industrytile);
	0, 3: THIS_ID(industrytile);
	0, 4: THIS_ID(industrytile);
	1, 0: THIS_ID(industrytile);
	1, 1: THIS_ID(industrytile);
	1, 3: THIS_ID(industrytile);
	1, 4: THIS_ID(industrytile);
	2, 0: THIS_ID(industrytile);
	2, 1: THIS_ID(industrytile);
	2, 3: THIS_ID(industrytile);
	2, 4: THIS_ID(industrytile);
	3, 0: THIS_ID(industrytile);
	3, 1: THIS_ID(industrytile);
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    1
#define THIS_PROD_RATIO_CARGO1    3
#define THIS_PROD_RATIO_CARGO2    5
#define THIS_PROD_RATIO_CARGO3    0
#define THIS_BOOST_12             5
#define THIS_BOOST_13             0
#define THIS_BOOST_21             3
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0
#define THIS_PRODUCTION_SPAN      30
/* extra text template */
#define THIS_STR_EXTRA_TEXT       STR_EXTRA_DAIRY
#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY
/* availability years */
#define THIS_MIN_YEAR 1892


CHECK_INCOMPATIBLE  (dairy,        56, CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
CHECK_INCOMPATIBLE  (dairy_farm,   16, CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(dairy))
CHECK_TOWN_DISTANCE (town_distance, 0, 64, THIS_ID(dairy_farm))
CHECK_FOUNDER       (THIS_ID(town_distance))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_secondary.pnml"
#include "../templates/check_secondary_production_level.pnml"
#include "../templates/check_secondary_closure.pnml"

#include "../templates/extra_text_secondary.pnml"

#include "../templates/check_availability.pnml"

item(FEAT_INDUSTRIES, dairy, 36) {
	property {
		substitute: 0;
		layouts: [
				tilelayout_dairy_1,
				tilelayout_dairy_2,
				tilelayout_dairy_3,
				tilelayout_dairy_4,
				tilelayout_dairy_5,
				tilelayout_dairy_6,
				tilelayout_dairy_7
			];
		life_type:              IND_LIFE_TYPE_PROCESSING;
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		name:                   string(STR_IND_DAIRY);
		nearby_station_name:    string(STR_STATIONNAME_FACTORIES);
		prod_cargo_types: [FOOD];
		accept_cargo_types: [MNSP, MILK];
		prod_multiplier: [0, 0];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 5;
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 3;
		prospect_chance: 0.75;
		fund_cost_multiplier: 45;
		map_colour: 15;
		remove_cost_multiplier: 0;
		spec_flags:             bitmask(IND_FLAG_MILITARY_HELICOPTER_CAN_EXPLODE);
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		availability:            THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"
