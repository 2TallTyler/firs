/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) sawmill ## __VA_ARGS__

item(FEAT_INDUSTRYTILES, THIS_ID(tile_1), 11) {
	property {
		substitute: 11;
		override: 11;
		accepted_cargos: [[WOOD, 8]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_2), 12) {
	property {
		substitute: 12;
		override: 12;
		accepted_cargos: [[WOOD, 8]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_3), 13) {
	property {
		substitute: 13;
		override: 13;
		accepted_cargos: [[WOOD, 8]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_4), 14) {
	property {
		substitute: 14;
		override: 14;
		accepted_cargos: [[WOOD, 8]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile_5), 15) {
	property {
		substitute: 15;
		override: 15;
		accepted_cargos: [[WOOD, 8]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(tile_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
TILE_ALLOW_PLAYER         (tile_player_check,                                                            THIS_ID(tile_nearby_industry))
TILE_DISALLOW_SLOPES      (tile_location_check,                       CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(tile_player_check))

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_11, 11) {
	graphics {
		THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_12, 12) {
	graphics {
		THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_13, 13) {
	graphics {
		THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_14, 14) {
	graphics {
		THIS_ID(tile_location_check);
	}
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_15, 15) {
	graphics {
		THIS_ID(tile_location_check);
	}
}
/* *************************************************
 * Definition of the industry layouts:
 *    not needed, default used
 * *************************************************/

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    1
#define THIS_PROD_RATIO_CARGO1    6
#define THIS_PROD_RATIO_CARGO2    0
#define THIS_PROD_RATIO_CARGO3    0
#define THIS_BOOST_12             0
#define THIS_BOOST_13             0
#define THIS_BOOST_21             0
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0
#define THIS_PRODUCTION_SPAN      30

/* extra text template */
#define THIS_STR_EXTRA_TEXT       STR_EXTRA_SAWMILL
#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY


CHECK_NEARBY_CLUSTER(forest, 16, 60, 5, 4, return CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
CHECK_FOUNDER       (THIS_ID(forest))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_secondary.pnml"
#include "../templates/check_secondary_production_level.pnml"
#include "../templates/check_secondary_closure.pnml"

#include "../templates/extra_text_secondary.pnml"

#include "../templates/check_availability.pnml"

item(FEAT_INDUSTRIES, sawmill, 12) {
	property {
		substitute: 2;
		override: 2;
		nearby_station_name:    string(STR_STATIONNAME_MILLS);
		prod_cargo_types: [WDPR];
		accept_cargo_types: [WOOD];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 2;
		fund_cost_multiplier: 97;
		map_colour: 194;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		availability:            THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"

