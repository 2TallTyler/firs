/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) brewery ## __VA_ARGS__

spriteset(THIS_ID(spriteset_ground), "sprites/graphics/industries/groundtiles.png") {
	tmpl_ground_tile(150, 10)
	tmpl_ground_tile(150, 10)
}

spriteset(THIS_ID(spriteset_1)) {
	tmpl_building_sprite_filename( 80, 10, 91, -60, "sprites/graphics/industries/brewery.png")
	tmpl_building_sprite_filename( 80, 10, 91, -60, "sprites/graphics/industries/brewery_snow.png")
}

spriteset(THIS_ID(spriteset_2)) {
	tmpl_building_sprite_filename(150, 10, 91, -60, "sprites/graphics/industries/brewery.png")
	tmpl_building_sprite_filename(150, 10, 91, -60, "sprites/graphics/industries/brewery_snow.png")
}

spriteset(THIS_ID(spriteset_3)) {
	tmpl_building_sprite_filename(220, 10, 91, -60, "sprites/graphics/industries/brewery.png")
	tmpl_building_sprite_filename(220, 10, 91, -60, "sprites/graphics/industries/brewery_snow.png")
}

SPRITELAYOUT_NORMAL_SNOW_BEGIN(THIS_ID(spritelayout_1_anim), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_1), 7)
	building {
		sprite: 3079 + animation_frame / 4;
		xoffset: 8;
		zoffset: 55 + animation_frame;
		xextent: 8;
		zextent: 7;
		hide_sprite: animation_frame > 19;
	}
SPRITELAYOUT_END

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_2), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_2), 48)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_3), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_3), 48)

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_1), relative_pos) {
	relative_coord(1, 0): THIS_ID(spritelayout_1_anim);
	relative_coord(1, 2): THIS_ID(spritelayout_2);
	THIS_ID(spritelayout_3);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_2), relative_pos) {
	relative_coord(1, 0): THIS_ID(spritelayout_2);
	relative_coord(2, 0): THIS_ID(spritelayout_1_anim);
	THIS_ID(spritelayout_3);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_3), relative_pos) {
	relative_coord(1, 0): THIS_ID(spritelayout_1_anim);
	relative_coord(1, 1): THIS_ID(spritelayout_2);
	THIS_ID(spritelayout_3);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_4), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_1_anim);
	relative_coord(2, 0): THIS_ID(spritelayout_2);
	THIS_ID(spritelayout_3);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_5), relative_pos) {
	relative_coord(1, 0): THIS_ID(spritelayout_2);
	relative_coord(1, 1): THIS_ID(spritelayout_2);
	relative_coord(2, 0): THIS_ID(spritelayout_1_anim);
	THIS_ID(spritelayout_3);
}

switch(FEAT_INDUSTRYTILES, PARENT, THIS_ID(layout), layout_num) {
	1: THIS_ID(layout_1);
	2: THIS_ID(layout_2);
	3: THIS_ID(layout_3);
	4: THIS_ID(layout_4);
	5: THIS_ID(layout_5);
	THIS_ID(layout_1);
}

CHECK_NEARBY_TILE_CLASS(action2_3012)

switch(FEAT_INDUSTRYTILES, PARENT, action2_3013, founder) {
	16: action2_3012;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3014, var[0x60, 0, 255, 0]) {
	1..255: return 1025;
	action2_3013;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3015, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_3014;
	THIS_ID(layout);
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3016, (extra_callback_info1 & 14)) {
	0: return 0;
	1: return 2;
	2: return 4;
	3: return 6;
	4: return 8;
	5: return 10;
	6: return 12;
	7: return 14;
	8: return 16;
	9: return 18;
	10: return 20;
	11: return 22;
	12: return 24;
	return 254;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3017, (current_callback & 255)) {
	37: action2_3016;
	action2_3015;
}

item(FEAT_INDUSTRYTILES, THIS_ID(industrytile), 161) {
	property {
		substitute: 0;
		accepted_cargos: [[FRVG, 8], [GRAI, 8], [MNSP, 8]];
		land_shape_flags: bitmask(LSF_ONLY_ON_FLAT_LAND);
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
		animation_info: [1, 71];
		animation_speed: 2;
		animation_triggers: 1;
	}
	graphics {
		action2_3017;
	}
}

tilelayout tilelayout_brewery_1 {
	0, 2: THIS_ID(industrytile);
	1, 0: THIS_ID(industrytile);
	1, 2: THIS_ID(industrytile);
}

tilelayout tilelayout_brewery_2 {
	0, 0: THIS_ID(industrytile);
	1, 0: THIS_ID(industrytile);
	2, 0: THIS_ID(industrytile);
}

tilelayout tilelayout_brewery_3 {
	0, 1: THIS_ID(industrytile);
	1, 0: THIS_ID(industrytile);
	1, 1: THIS_ID(industrytile);
}

tilelayout tilelayout_brewery_4 {
	0, 0: THIS_ID(industrytile);
	1, 0: THIS_ID(industrytile);
	2, 0: THIS_ID(industrytile);
}

tilelayout tilelayout_brewery_5 {
	0, 0: THIS_ID(industrytile);
	0, 1: THIS_ID(industrytile);
	1, 0: THIS_ID(industrytile);
	1, 1: THIS_ID(industrytile);
	2, 0: THIS_ID(industrytile);
}

item(FEAT_INDUSTRIES, brewery, 35) {
	property {
		substitute: 0;
		layouts: [tilelayout_brewery_1, tilelayout_brewery_2, tilelayout_brewery_3, tilelayout_brewery_4, tilelayout_brewery_5];
		life_type: 4;
		closure_msg: 18483;
		prod_increase_msg: 18485;
		prod_decrease_msg: 18489;
		new_ind_msg: 18477;
		name: string(STR_IND_BREWERY);
		prod_cargo_types: [BEER];
		accept_cargo_types: [MNSP, FRVG, GRAI];
		prod_multiplier: [0, 0];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 5;
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 3;
		prospect_chance: 0.75;
		fund_cost_multiplier: 50;
		map_colour: 191;
		remove_cost_multiplier: 0;
		spec_flags: 0;
		callback_flags: 445;
	}
}

switch(FEAT_INDUSTRIES, SELF, action2_3020, industry_distance(brewery)) {
	0..56: return 1025;
	return 1024;
}

switch(FEAT_INDUSTRIES, SELF, action2_3021, industry_distance(26)) {
	0..16: return 4;
	action2_3020;
}

switch(FEAT_INDUSTRIES, SELF, action2_3022, industry_distance(grain_mill)) {
	0..16: return 4;
	action2_3021;
}

switch(FEAT_INDUSTRIES, SELF, action2_3023, town_euclidean_dist(0, 0)) {
	0..64: action2_3022;
	return 1025;
}

switch(FEAT_INDUSTRIES, SELF, action2_3024, founder) {
	16: action2_3023;
	return 1024;
}

switch(FEAT_INDUSTRIES, SELF, action2_3025, game_mode) {
	1: action2_3024;
	return 1024;
}

produce(action2_3026, LOAD_TEMP(7), LOAD_TEMP(8), LOAD_TEMP(9), LOAD_TEMP(10), LOAD_TEMP(11), LOAD_TEMP(0));

switch(FEAT_INDUSTRIES, SELF, action2_3027, [STORE_TEMP(0, 0), 1]) {
	0: action2_3026;
	action2_3026;
}

switch(FEAT_INDUSTRIES, SELF, action2_3028, [STORE_TEMP(STORE_PERM(STORE_TEMP(STORE_PERM(0, 11), 11), 10), 10), 1]) {
	0: action2_3027;
	action2_3027;
}

switch(FEAT_INDUSTRIES, SELF, action2_3029, [STORE_TEMP(STORE_PERM(0, 11), 11), STORE_TEMP(STORE_PERM(LOAD_TEMP(10), 10), 10)]) {
	0: action2_3027;
	action2_3027;
}

switch(FEAT_INDUSTRIES, SELF, action2_3030, STORE_TEMP(STORE_PERM(STORE_TEMP(STORE_PERM(max((LOAD_TEMP(10) / 1), 1), 10), 10), 11), 11)) {
	0: action2_3027;
	action2_3027;
}

switch(FEAT_INDUSTRIES, SELF, action2_3031, 1) {
	2: action2_3030;
	action2_3029;
}

switch(FEAT_INDUSTRIES, SELF, action2_3032, STORE_TEMP(((LOAD_PERM(4) + LOAD_PERM(5)) + LOAD_PERM(6)), 10)) {
	0: action2_3028;
	action2_3031;
}

switch(FEAT_INDUSTRIES, SELF, action2_3033, [STORE_TEMP(((LOAD_PERM(6) / LOAD_PERM(12)) * 8), 9), STORE_TEMP(STORE_PERM(((var[0x42, 0, -1] - LOAD_TEMP(9)) + LOAD_TEMP(9)), 9), 9)]) {
	0: action2_3032;
	action2_3032;
}

switch(FEAT_INDUSTRIES, SELF, action2_3034, [STORE_TEMP(((LOAD_PERM(5) / LOAD_PERM(12)) * 8), 8), STORE_TEMP(STORE_PERM(((var[0x41, 0, -1] - LOAD_TEMP(8)) + LOAD_TEMP(8)), 8), 8)]) {
	0: action2_3033;
	action2_3033;
}

switch(FEAT_INDUSTRIES, SELF, action2_3035, [STORE_TEMP(((LOAD_PERM(4) / LOAD_PERM(12)) * 8), 7), STORE_TEMP(STORE_PERM(((var[0x40, 0, -1] - LOAD_TEMP(7)) + LOAD_TEMP(7)), 7), 7)]) {
	0: action2_3034;
	action2_3034;
}

switch(FEAT_INDUSTRIES, SELF, action2_3036, STORE_PERM(max(min(((var[0x42, 0, -1] / 8) * LOAD_PERM(12)), LOAD_PERM(0)), 1), 6)) {
	0: action2_3035;
	action2_3035;
}

switch(FEAT_INDUSTRIES, SELF, action2_3037, [STORE_PERM(0, 6), var[0x42, 0, -1]]) {
	0: action2_3035;
	action2_3036;
}

switch(FEAT_INDUSTRIES, SELF, action2_3038, STORE_PERM(max(min(((var[0x41, 0, -1] / 8) * LOAD_PERM(12)), LOAD_PERM(0)), 1), 5)) {
	0: action2_3037;
	action2_3037;
}

switch(FEAT_INDUSTRIES, SELF, action2_3039, [STORE_PERM(0, 5), var[0x41, 0, -1]]) {
	0: action2_3037;
	action2_3038;
}

switch(FEAT_INDUSTRIES, SELF, action2_3040, STORE_PERM(max(min(((var[0x40, 0, -1] / 8) * LOAD_PERM(12)), LOAD_PERM(0)), 1), 4)) {
	0: action2_3039;
	action2_3039;
}

switch(FEAT_INDUSTRIES, SELF, action2_3041, [STORE_PERM(0, 4), var[0x40, 0, -1]]) {
	0: action2_3039;
	action2_3040;
}

switch(FEAT_INDUSTRIES, SELF, action2_3042, STORE_PERM(((0 + LOAD_PERM(1)) + LOAD_PERM(2)), 12)) {
	0: action2_3041;
	action2_3041;
}

switch(FEAT_INDUSTRIES, SELF, action2_3043, [STORE_PERM(0, 2), 1]) {
	0: action2_3042;
	action2_3042;
}

switch(FEAT_INDUSTRIES, SELF, action2_3044, [STORE_PERM(5, 2), STORE_PERM((1 + LOAD_PERM(14)), 14)]) {
	0: action2_3042;
	action2_3042;
}

switch(FEAT_INDUSTRIES, SELF, action2_3045, LOAD_PERM(14)) {
	0..7: action2_3044;
	action2_3043;
}

switch(FEAT_INDUSTRIES, SELF, action2_3046, [STORE_PERM(0, 14), 1]) {
	0: action2_3044;
	action2_3044;
}

switch(FEAT_INDUSTRIES, SELF, action2_3047, (waiting_cargo_2 + waiting_cargo_3)) {
	0: action2_3045;
	action2_3046;
}

switch(FEAT_INDUSTRIES, SELF, action2_3048, [STORE_PERM(0, 1), 1]) {
	0: action2_3047;
	action2_3047;
}

switch(FEAT_INDUSTRIES, SELF, action2_3049, [STORE_PERM(3, 1), STORE_PERM((1 + LOAD_PERM(13)), 13)]) {
	0: action2_3047;
	action2_3047;
}

switch(FEAT_INDUSTRIES, SELF, action2_3050, LOAD_PERM(13)) {
	0..7: action2_3049;
	action2_3048;
}

switch(FEAT_INDUSTRIES, SELF, action2_3051, [STORE_PERM(0, 13), 1]) {
	0: action2_3049;
	action2_3049;
}

switch(FEAT_INDUSTRIES, SELF, action2_3052, waiting_cargo_1) {
	0: action2_3050;
	action2_3051;
}

switch(FEAT_INDUSTRIES, SELF, action2_3053, STORE_TEMP((rotate((LOAD_PERM(15) & 65535), 16) | (LOAD_PERM(14) & 65535)), 261)) {
	0: return string(STR_INFO_DEBUG_PRODUCTION_CONTRIBUTION);
	return string(STR_INFO_DEBUG_PRODUCTION_CONTRIBUTION);
}

switch(FEAT_INDUSTRIES, SELF, action2_3054, STORE_TEMP((rotate((LOAD_PERM(13) & 65535), 16) | (LOAD_PERM(12) & 65535)), 260)) {
	0: action2_3053;
	action2_3053;
}

switch(FEAT_INDUSTRIES, SELF, action2_3055, STORE_TEMP((rotate((LOAD_PERM(11) & 65535), 16) | (LOAD_PERM(10) & 65535)), 259)) {
	0: action2_3054;
	action2_3054;
}

switch(FEAT_INDUSTRIES, SELF, action2_3056, STORE_TEMP((rotate((LOAD_PERM(9) & 65535), 16) | (LOAD_PERM(8) & 65535)), 258)) {
	0: action2_3055;
	action2_3055;
}

switch(FEAT_INDUSTRIES, SELF, action2_3057, STORE_TEMP((rotate((LOAD_PERM(7) & 65535), 16) | (LOAD_PERM(3) & 65535)), 257)) {
	0: action2_3056;
	action2_3056;
}

switch(FEAT_INDUSTRIES, SELF, action2_3058, STORE_TEMP((rotate((LOAD_PERM(2) & 65535), 16) | (LOAD_PERM(1) & 65535)), 256)) {
	0: action2_3057;
	action2_3057;
}

switch(FEAT_INDUSTRIES, SELF, action2_3059, show_debug_texts) {
	1: action2_3058;
	return string(STR_EXTRA_BREWERY);
}

switch(FEAT_INDUSTRIES, SELF, action2_3060, STORE_PERM((65535 / 3), 0)) {
	0: action2_3052;
	action2_3052;
}

CHECK_OPENING(action2_3063, 0, -1)

switch(FEAT_INDUSTRIES, SELF, action2_3064, [STORE_TEMP(-701265, 256), 32928]) {
	return;
}

SWITCH_COLOUR_SCHEME1(action2_3067)

SET_PRODUCTION_COUNTER_PRODUCED(action2_3070)

CHECK_CLOSE_SECONDARY(action2_3073)

switch(FEAT_INDUSTRIES, SELF, switch_main_brewery, current_callback) {
	0: action2_3060;
	IND_CB_LOCATION_CHECK: action2_3025;
	IND_CB_AVAILABILITY: action2_3063;
	IND_CB_COLOUR: action2_3067;
	IND_CB_EXTRA_TEXT_FUND: action2_3064;
	IND_CB_RANDOM_PROD_CHANGE: action2_3073;
	IND_CB_MONTHLY_PROD_CHANGE: action2_3070;
	IND_CB_EXTRA_TEXT_INDUSTRY: action2_3059;
	action2_3027;
}

item(FEAT_INDUSTRIES, brewery, 35) {
	graphics {
		switch_main_brewery;
	}
}

#include "../templates/undefs.pnml"
