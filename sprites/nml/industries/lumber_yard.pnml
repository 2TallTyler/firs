/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) lumber_yard ## __VA_ARGS__

item(FEAT_INDUSTRYTILES, tile_lumber_yard, 187) {
	property {
		substitute: 0;
		accepted_cargos: [[WDPR, 8], [RFPR, 8], [0, 0]];
		land_shape_flags: bitmask(LSF_ONLY_ON_FLAT_LAND);
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

spriteset(spriteset_5697, "sprites/graphics/industries/groundtiles.png") { tmpl_ground_tile(10, 10) } 
spriteset(spriteset_5698, "sprites/graphics/industries/lumberyard.pcx") { tmpl_building_sprite(80, 10, 64, -40) } 
spriteset(spriteset_5699, "sprites/graphics/industries/lumberyard.pcx") { tmpl_building_sprite(150, 10, 64, -34) } 
spriteset(spriteset_5700, "sprites/graphics/industries/lumberyard.pcx") { tmpl_building_sprite(220, 10, 64, -19) } 
spriteset(spriteset_5701, "sprites/graphics/industries/lumberyard.pcx") { tmpl_building_sprite(290, 10, 64, -35) } 
spriteset(spriteset_5702, "sprites/graphics/industries/lumberyard.pcx") { tmpl_building_sprite(10, 10, 64, -26) } 
spriteset(spriteset_5703, "sprites/graphics/industries/lumberyard.pcx") { tmpl_building_sprite(150, 90, 31, -4) } 
spriteset(spriteset_5704, "sprites/graphics/industries/lumberyard.pcx") { tmpl_building_sprite(220, 90, 31, -4) } 
spriteset(spriteset_5705, "sprites/graphics/industries/lumberyard.pcx") { tmpl_building_sprite(290, 90, 31, -4) } 
spriteset(spriteset_5706, "sprites/graphics/industries/lumberyard.pcx") { tmpl_building_sprite(360, 10, 64, -24) } 
spritelayout action2_5707 {
	ground {
		sprite: 2022;
	}
}

spritelayout action2_5708 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5698;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

spritelayout action2_5709 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5699;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

spritelayout action2_5710 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5700;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

spritelayout action2_5711 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5701;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

spritelayout action2_5712 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5702;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

spritelayout action2_5713 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5703;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

spritelayout action2_5714 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5706;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_5704;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

spritelayout action2_5715 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5705;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, action2_5716, relative_pos) {
	relative_coord(0, 0): action2_5709;
	relative_coord(0, 1): action2_5708;
	relative_coord(0, 2): action2_5712;
	relative_coord(1, 0): action2_5713;
	relative_coord(1, 1): action2_5710;
	relative_coord(2, 0): action2_5715;
	relative_coord(2, 1): action2_5711;
	relative_coord(1, 2): action2_5715;
	relative_coord(2, 2): action2_5714;
	relative_coord(3, 0): action2_5713;
	relative_coord(3, 1): action2_5712;
	relative_coord(3, 2): action2_5713;
	action2_5707;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_5717, relative_pos) {
	relative_coord(0, 0): action2_5709;
	relative_coord(0, 1): action2_5708;
	relative_coord(0, 2): action2_5712;
	relative_coord(0, 3): action2_5713;
	relative_coord(1, 0): action2_5715;
	relative_coord(1, 1): action2_5715;
	relative_coord(1, 2): action2_5710;
	relative_coord(1, 3): action2_5713;
	relative_coord(2, 0): action2_5712;
	relative_coord(2, 1): action2_5713;
	relative_coord(2, 2): action2_5711;
	relative_coord(2, 3): action2_5714;
	action2_5707;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_5718, relative_pos) {
	relative_coord(0, 0): action2_5713;
	relative_coord(0, 1): action2_5710;
	relative_coord(0, 2): action2_5709;
	relative_coord(0, 3): action2_5708;
	relative_coord(0, 4): action2_5715;
	relative_coord(1, 0): action2_5715;
	relative_coord(1, 1): action2_5711;
	relative_coord(1, 2): action2_5713;
	relative_coord(1, 3): action2_5712;
	relative_coord(1, 4): action2_5714;
	action2_5707;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_5719, relative_pos) {
	relative_coord(0, 0): action2_5710;
	relative_coord(0, 1): action2_5714;
	relative_coord(1, 0): action2_5711;
	relative_coord(1, 1): action2_5713;
	relative_coord(2, 0): action2_5709;
	relative_coord(2, 1): action2_5708;
	relative_coord(3, 0): action2_5715;
	relative_coord(3, 1): action2_5713;
	relative_coord(4, 0): action2_5712;
	relative_coord(4, 1): action2_5713;
	action2_5707;
}

switch(FEAT_INDUSTRYTILES, PARENT, action2_5720, layout_num) {
	1: action2_5716;
	2: action2_5717;
	3: action2_5718;
	4: action2_5719;
	action2_5707;
}

CHECK_NEARBY_TILE_CLASS(action2_5728)

switch(FEAT_INDUSTRYTILES, PARENT, action2_5729, founder) {
	16: action2_5728;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_5730, var[0x60, 0, 255, 0]) {
	1..255: return 1025;
	action2_5729;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_5731, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_5730;
	action2_5720;
}

item(FEAT_INDUSTRYTILES, tile_lumber_yard, 187) {
	graphics {
		action2_5731;
	}
}

tilelayout tilelayout_lumber_yard_1 {
	0, 0: tile_lumber_yard;
	0, 1: tile_lumber_yard;
	0, 2: tile_lumber_yard;
	1, 0: tile_lumber_yard;
	1, 1: tile_lumber_yard;
	1, 2: tile_lumber_yard;
	2, 0: tile_lumber_yard;
	2, 1: tile_lumber_yard;
	2, 2: tile_lumber_yard;
	3, 0: tile_lumber_yard;
	3, 1: tile_lumber_yard;
	3, 2: tile_lumber_yard;
}

tilelayout tilelayout_lumber_yard_2 {
	0, 0: tile_lumber_yard;
	0, 1: tile_lumber_yard;
	0, 2: tile_lumber_yard;
	0, 3: tile_lumber_yard;
	1, 0: tile_lumber_yard;
	1, 1: tile_lumber_yard;
	1, 2: tile_lumber_yard;
	1, 3: tile_lumber_yard;
	2, 0: tile_lumber_yard;
	2, 1: tile_lumber_yard;
	2, 2: tile_lumber_yard;
	2, 3: tile_lumber_yard;
}

tilelayout tilelayout_lumber_yard_3 {
	0, 0: tile_lumber_yard;
	0, 1: tile_lumber_yard;
	0, 2: tile_lumber_yard;
	0, 3: tile_lumber_yard;
	0, 4: tile_lumber_yard;
	1, 0: tile_lumber_yard;
	1, 1: tile_lumber_yard;
	1, 2: tile_lumber_yard;
	1, 3: tile_lumber_yard;
	1, 4: tile_lumber_yard;
}

tilelayout tilelayout_lumber_yard_4 {
	0, 0: tile_lumber_yard;
	0, 1: tile_lumber_yard;
	1, 0: tile_lumber_yard;
	1, 1: tile_lumber_yard;
	2, 0: tile_lumber_yard;
	2, 1: tile_lumber_yard;
	3, 0: tile_lumber_yard;
	3, 1: tile_lumber_yard;
	4, 0: tile_lumber_yard;
	4, 1: tile_lumber_yard;
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    2
#define THIS_PROD_RATIO_CARGO1    6
#define THIS_PROD_RATIO_CARGO2    2
#define THIS_PROD_RATIO_CARGO3    1
#define THIS_BOOST_12             2
#define THIS_BOOST_13             0
#define THIS_BOOST_21             6
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0
#define THIS_PRODUCTION_SPAN      30
/* extra text template */
#define THIS_STR_EXTRA_TEXT       STR_EXTRA_LUMBER_YARD
#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY


CHECK_INCOMPATIBLE(lumber_yard, 56, CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
CHECK_FOUNDER     (THIS_ID(lumber_yard))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_secondary.pnml"
#include "../templates/check_secondary_production_level.pnml"
#include "../templates/check_secondary_closure.pnml"

#include "../templates/extra_text_secondary.pnml"

#include "../templates/check_availability.pnml"

item(FEAT_INDUSTRIES, lumber_yard, 41) {
	property {
		substitute: 0;
		layouts: [
				tilelayout_lumber_yard_1,
				tilelayout_lumber_yard_2,
				tilelayout_lumber_yard_3,
				tilelayout_lumber_yard_4
			];
		life_type: 4;
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		name:                   string(STR_IND_LUMBER_YARD);
		prod_cargo_types: [ENSP, BDMT];
		accept_cargo_types: [WDPR, RFPR];
		prod_multiplier: [0, 0];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 5;
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 3;
		prospect_chance: 0.75;
		fund_cost_multiplier: 35;
		map_colour: 42;
		remove_cost_multiplier: 0;
		spec_flags:             0;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		availability:            THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"
