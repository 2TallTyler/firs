/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#include "../templates/spritelayout_templates.pnml"

#define THIS_ID(...) ${industry.id}_ ## __VA_ARGS__

${industry.get_spritesets()}

${industry.get_spritelayouts()}

${industry.get_industry_layouts_as_graphic_switches()}

${industry.get_fence_switches()}

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
TILE_ALLOW_PLAYER         (player_check, ${industry.id}_nearby_industry)
TILE_DISALLOW_SLOPES      (location_check, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_player_check)

item(FEAT_INDUSTRYTILES, ${industry.id}_tile, TILE_SUGARREFINERY_1) {
	property {
		substitute:       0;
		accepted_cargos:  [[SGBT, 8], [MNSP, 8]];
		land_shape_flags: bitmask(LSF_ONLY_ON_FLAT_LAND);
	}

	/* Economy specific tile acceptance */
	TILE_CARGO_2(ENABLE_SUGARCANE && ENABLE_MNSP, SGCN, MNSP)

	graphics {
		tile_check:   ${industry.id}_location_check;
		${industry.id}_tile_fences;
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

${industry.get_industry_layouts_as_tilelayouts()}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    1
#define THIS_PROD_RATIO_CARGO1    3
#define THIS_PROD_RATIO_CARGO2    5
#define THIS_PROD_RATIO_CARGO3    0
#define THIS_BOOST_12             3
#define THIS_BOOST_13             0
#define THIS_BOOST_21             5
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0
/* extra text template */
#define THIS_STR_EXTRA_TEXT       STR_EXTRA_SUGAR_REFINERY
#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY


CHECK_INCOMPATIBLE(sugar_refinery, 56, CB_RESULT_LOCATION_DISALLOW, return CB_RESULT_LOCATION_ALLOW)
CHECK_INCOMPATIBLE(arable_farm,    16, CB_RESULT_LOCATION_DISALLOW, ${industry.id}_sugar_refinery)
CHECK_FOUNDER     (${industry.id}_arable_farm)

SWITCH_COLOUR_SCHEME1(${industry.id}_colour)

#include "../templates/produce_secondary.pnml"
#include "../templates/check_secondary_production_level.pnml"
#include "../templates/check_secondary_closure.pnml"

#include "../templates/extra_text_secondary.pnml"

#include "../templates/check_availability.pnml"


item(FEAT_INDUSTRIES, sugar_refinery, IND_SUGARREFINERY_ID) {
	property {
		substitute:             0;
		layouts: [${industry.get_industry_layouts_as_property()}];
		life_type:              4;
		name:                   string(STR_IND_SUGAR_REFINERY);
		nearby_station_name:    string(STR_STATION, string(STR_TOWN), string(STR_IND_SUGAR_REFINERY));
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		prod_cargo_types:       [FOOD];
		accept_cargo_types:     [MNSP, SGBT];
		prod_multiplier:        [0, 0];
		input_multiplier_1:     [0, 0];
		input_multiplier_2:     [0, 0];
		input_multiplier_3:     [0, 0];
		min_cargo_distr:        5;
		conflicting_ind_types:  [];
		prob_random:            5;
		prob_in_game:           3;
		prospect_chance:        0.75;
		fund_cost_multiplier:   140;
		map_colour:             83;
		remove_cost_multiplier: 0;
		spec_flags:             bitmask(IND_FLAG_MILITARY_AIRPLANE_CAN_EXPLODE);
	}

	/* Economy specific cargo */
	INDUSTRY_INPUT_CARGO_2(ENABLE_SUGARCANE && ENABLE_MNSP, MNSP, SGCN)

	graphics {
		produce_cargo_arrival:   ${industry.id}_produce;
		construction_probability:${industry.id}_check_availability;
		location_check:          ${industry.id}_check_location;
		monthly_prod_change:     ${industry.id}_check_production_level;
		random_prod_change:      ${industry.id}_check_closure;
		extra_text_industry:     ${industry.id}_extra_text;
		colour:                  ${industry.id}_colour;
	}
}

#include "../templates/undefs.pnml"
