/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) builders_yard ## __VA_ARGS__

spriteset(THIS_ID(spriteset_ground_snow)) {
	tmpl_building_sprite_filename(150, 10, 43, -13, "sprites/graphics/industries/buildersyard.png")
	tmpl_building_sprite_filename(150, 10, 43, -13, "sprites/graphics/industries/buildersyard_snow.png")
}

spriteset(THIS_ID(spriteset_1)) {
	tmpl_building_sprite_filename(10, 10, 51, -13, "sprites/graphics/industries/buildersyard.png")
	tmpl_building_sprite_filename(10, 10, 51, -13, "sprites/graphics/industries/buildersyard_snow.png")
}

spriteset(THIS_ID(spriteset_2)) {
	tmpl_building_sprite_filename(80, 10, 51, -13, "sprites/graphics/industries/buildersyard.png")
	tmpl_building_sprite_filename(80, 10, 51, -13, "sprites/graphics/industries/buildersyard_snow.png")
}

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_1), 2022, THIS_ID(spriteset_ground_snow), THIS_ID(spriteset_1), 16)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_2), 2022, THIS_ID(spriteset_ground_snow), THIS_ID(spriteset_2), 16)

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_1), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_1);
	relative_coord(0, 1): THIS_ID(spritelayout_2);
	THIS_ID(spritelayout_1);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_2), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_1);
	relative_coord(1, 0): THIS_ID(spritelayout_2);
	THIS_ID(spritelayout_1);
}

switch(FEAT_INDUSTRYTILES, PARENT, THIS_ID(layout), layout_num) {
	1: THIS_ID(layout_1);
	2: THIS_ID(layout_2);
	THIS_ID(layout_1);
}
/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
TILE_ALLOW_PLAYER         (terrain_check,                                                           THIS_ID(nearby_industry))

item(FEAT_INDUSTRYTILES, tile_builders_yard, 164) {
	property {
		substitute: 0;
		accepted_cargos: [[BDMT, 8]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}

	graphics {
		slope_check: THIS_ID(terrain_check);
		THIS_ID(layout);
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

tilelayout tilelayout_builders_yard_1 {
	0, 0: tile_builders_yard;
	0, 1: tile_builders_yard;
}

tilelayout tilelayout_builders_yard_2 {
	0, 0: tile_builders_yard;
	1, 0: tile_builders_yard;
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

#include "../templates/produce_blackhole.pnml"
#include "../templates/check_secondary_closure.pnml"
#include "../templates/check_secondary_production_level.pnml"

#include "../templates/extra_text_blackhole.pnml"

#include "../templates/check_availability.pnml"

CHECK_TOWN_DISTANCE (town_distance,  0, 64, return CB_RESULT_IND_ALLOW_LOCATION)
CHECK_FOUNDER       (THIS_ID(town_distance))

item(FEAT_INDUSTRIES, builders_yard, 63) {
	property {
		substitute: 0;
		layouts: [
				tilelayout_builders_yard_1,
				tilelayout_builders_yard_2
			];
		life_type:              IND_LIFE_TYPE_BLACK_HOLE;
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		name:                   string(STR_IND_BUILDERS_YARD);
		prod_cargo_types: [];
		accept_cargo_types: [BDMT];
		prod_multiplier: [0, 0];
		spec_flags:             bitmask(IND_FLAG_BUILT_NEAR_TOWN);
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 0;
		conflicting_ind_types:  [builders_yard];
		prob_random: 18;
		prob_in_game: 12;
		prospect_chance: 0.75;
		fund_cost_multiplier: 8;
		map_colour: 15;
		remove_cost_multiplier: 0;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		availability:            THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		THIS_ID(produce);
	}
}

#include "../templates/undefs.pnml"
