/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) builders_yard ## __VA_ARGS__

item(FEAT_INDUSTRYTILES, tile_builders_yard, 164) {
	property {
		substitute: 0;
		accepted_cargos: [[BDMT, 8]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

spriteset(spriteset_3187, "sprites/graphics/industries/groundtiles.png") { tmpl_ground_tile(10, 10) } 
spriteset(spriteset_3188, "sprites/graphics/industries/buildersyard.png") { tmpl_building_sprite(10, 10, 51, -13) } 
spriteset(spriteset_3189, "sprites/graphics/industries/buildersyard.png") { tmpl_building_sprite(80, 10, 51, -13) } 
spriteset(spriteset_3190, "sprites/graphics/industries/buildersyard.png") { tmpl_building_sprite(150, 10, 43, -13) } 
spritelayout action2_3191 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_3190;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3188;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

spritelayout action2_3192 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_3190;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3189;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3193, relative_pos) {
	relative_coord(0, 0): action2_3191;
	relative_coord(0, 1): action2_3192;
	action2_3191;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3194, relative_pos) {
	relative_coord(0, 0): action2_3191;
	relative_coord(1, 0): action2_3192;
	action2_3191;
}

switch(FEAT_INDUSTRYTILES, PARENT, switch_builders_yard_default_layout, layout_num) {
	1: action2_3193;
	2: action2_3194;
	action2_3193;
}

spriteset(spriteset_3197, "sprites/graphics/industries/groundtiles.png") { tmpl_ground_tile(10, 10) } 
spriteset(spriteset_3198, "sprites/graphics/industries/buildersyard.png") { tmpl_building_sprite(10, 10, 51, -13) } 
spriteset(spriteset_3199, "sprites/graphics/industries/buildersyard.png") { tmpl_building_sprite(80, 10, 51, -13) } 
spriteset(spriteset_3200, "sprites/graphics/industries/buildersyard.png") { tmpl_building_sprite(150, 10, 43, -13) } 
spritelayout action2_3201 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_3200;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3198;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

spritelayout action2_3202 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_3200;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3199;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3203, relative_pos) {
	relative_coord(0, 0): action2_3201;
	relative_coord(0, 1): action2_3202;
	action2_3201;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3204, relative_pos) {
	relative_coord(0, 0): action2_3201;
	relative_coord(1, 0): action2_3202;
	action2_3201;
}

switch(FEAT_INDUSTRYTILES, PARENT, switch_builders_yard_desert_layout, layout_num) {
	1: action2_3203;
	2: action2_3204;
	action2_3203;
}

spriteset(spriteset_3207, "sprites/graphics/industries/groundtiles.png") { tmpl_ground_tile(10, 10) } 
spriteset(spriteset_3208) { 	[10, 10, 64, 51, -31, -13, 9, "sprites/graphics/industries/buildersyard_snow.png"] } 
spriteset(spriteset_3209) { 	[80, 10, 64, 51, -31, -13, 9, "sprites/graphics/industries/buildersyard_snow.png"] } 
spriteset(spriteset_3210) { 	[150, 10, 64, 43, -31, -13, 9, "sprites/graphics/industries/buildersyard_snow.png"] } 
spritelayout action2_3211 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_3210;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3208;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

spritelayout action2_3212 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_3210;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_3209;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3213, relative_pos) {
	relative_coord(0, 0): action2_3211;
	relative_coord(0, 1): action2_3212;
	action2_3211;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_3214, relative_pos) {
	relative_coord(0, 0): action2_3211;
	relative_coord(1, 0): action2_3212;
	action2_3211;
}

switch(FEAT_INDUSTRYTILES, PARENT, switch_builders_yard_snow_layout, layout_num) {
	1: action2_3213;
	2: action2_3214;
	action2_3213;
}

SWITCH_TERRAIN_NORMAL_DESERT_SNOW(builders_yard, layout)

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
TILE_ALLOW_PLAYER         (terrain_check,                        CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(nearby_industry))

item(FEAT_INDUSTRYTILES, tile_builders_yard, 164) {
	graphics {
		slope_check: THIS_ID(terrain_check);
		switch_builders_yard_terrain;
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

tilelayout tilelayout_builders_yard_1 {
	0, 0: tile_builders_yard;
	0, 1: tile_builders_yard;
}

tilelayout tilelayout_builders_yard_2 {
	0, 0: tile_builders_yard;
	1, 0: tile_builders_yard;
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

#include "../templates/produce_blackhole.pnml"
#include "../templates/check_secondary_closure.pnml"
#include "../templates/check_secondary_production_level.pnml"

#include "../templates/extra_text_blackhole.pnml"

#include "../templates/check_availability.pnml"

CHECK_TOWN_DISTANCE (town_distance,  0, 64, return CB_RESULT_IND_ALLOW_LOCATION)
CHECK_FOUNDER       (THIS_ID(town_distance))

item(FEAT_INDUSTRIES, builders_yard, 63) {
	property {
		substitute: 0;
		layouts: [
				tilelayout_builders_yard_1,
				tilelayout_builders_yard_2
			];
		life_type:              IND_LIFE_TYPE_BLACK_HOLE;
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		name:                   string(STR_IND_BUILDERS_YARD);
		prod_cargo_types: [];
		accept_cargo_types: [BDMT];
		prod_multiplier: [0, 0];
		spec_flags:             bitmask(IND_FLAG_BUILT_NEAR_TOWN);
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 0;
		conflicting_ind_types:  [builders_yard];
		prob_random: 18;
		prob_in_game: 12;
		prospect_chance: 0.75;
		fund_cost_multiplier: 8;
		map_colour: 15;
		remove_cost_multiplier: 0;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		availability:            THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		THIS_ID(produce);
	}
}

#include "../templates/undefs.pnml"
