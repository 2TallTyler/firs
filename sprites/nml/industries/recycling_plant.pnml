/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) recycling_plant ## __VA_ARGS__

spriteset(THIS_ID(spriteset_ground), "sprites/graphics/industries/groundtiles.png") { tmpl_ground_tile(80, 10) }

spriteset(THIS_ID(spriteset_1), "sprites/graphics/industries/recyclingplant.pcx") { tmpl_building_sprite(10, 10, 76, -45) }
spriteset(THIS_ID(spriteset_2), "sprites/graphics/industries/recyclingplant.pcx") { tmpl_building_sprite(80, 10, 76, -45) }
spriteset(THIS_ID(spriteset_3), "sprites/graphics/industries/recyclingplant.pcx") { tmpl_building_sprite(150, 10, 76, -45) }
spriteset(THIS_ID(spriteset_4), "sprites/graphics/industries/recyclingplant.pcx") { tmpl_building_sprite(220, 10, 63, -32) }
spriteset(THIS_ID(spriteset_5)) { 	[290, 10, 64, 63, -34, -32, 9, "sprites/graphics/industries/recyclingplant.pcx"] }
spriteset(THIS_ID(spriteset_6), "sprites/graphics/industries/recyclingplant.pcx") { tmpl_building_sprite(360, 10, 39, -8) }
spriteset(THIS_ID(spriteset_7), "sprites/graphics/industries/recyclingplant.pcx") { tmpl_building_sprite(430, 10, 39, -8) }
spriteset(THIS_ID(spriteset_8), "sprites/graphics/industries/recyclingplant.pcx") { tmpl_building_sprite(500, 10, 39, -8) }
spriteset(THIS_ID(spriteset_9), "sprites/graphics/industries/recyclingplant.pcx") { tmpl_building_sprite(570, 10, 43, -12) }

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_1), THIS_ID(spriteset_ground), THIS_ID(spriteset_1), 48)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_2), THIS_ID(spriteset_ground), THIS_ID(spriteset_2), 48)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_3), THIS_ID(spriteset_ground), THIS_ID(spriteset_3), 48)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_4), THIS_ID(spriteset_ground), THIS_ID(spriteset_4), 48)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_5), THIS_ID(spriteset_ground), THIS_ID(spriteset_5), 48)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_6), THIS_ID(spriteset_ground), THIS_ID(spriteset_6), 48)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_7), THIS_ID(spriteset_ground), THIS_ID(spriteset_7), 48)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_8), THIS_ID(spriteset_ground), THIS_ID(spriteset_8), 48)

SPRITELAYOUT_NORMAL(THIS_ID(spritelayout_9), THIS_ID(spriteset_ground), THIS_ID(spriteset_9), 48)

spritelayout THIS_ID(spritelayout_10) {
	ground {
		sprite: THIS_ID(spriteset_ground);
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout), relative_pos) {
	3: THIS_ID(spritelayout_1);
	259: THIS_ID(spritelayout_1);
	770: THIS_ID(spritelayout_1);
	2: THIS_ID(spritelayout_2);
	258: THIS_ID(spritelayout_2);
	769: THIS_ID(spritelayout_2);
	1: THIS_ID(spritelayout_3);
	257: THIS_ID(spritelayout_3);
	768: THIS_ID(spritelayout_3);
	1281: THIS_ID(spritelayout_4);
	1025: THIS_ID(spritelayout_5);
	260: THIS_ID(spritelayout_6);
	4: THIS_ID(spritelayout_7);
	771: THIS_ID(spritelayout_8);
	1026: THIS_ID(spritelayout_10);
	1027: THIS_ID(spritelayout_10);
	1028: THIS_ID(spritelayout_10);
	THIS_ID(spritelayout_9);
}

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(tile_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
TILE_ALLOW_PLAYER         (tile_location_check,                                                          THIS_ID(tile_nearby_industry))

item(FEAT_INDUSTRYTILES, THIS_ID(tile), 201) {
	property {
		substitute:       0;
		accepted_cargos:  [[RCYC, 8]];
		land_shape_flags: bitmask(LSF_ONLY_ON_FLAT_LAND);
	}
	graphics {
		tile_check: THIS_ID(tile_location_check);
		THIS_ID(layout);
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

tilelayout tilelayout_recycling_plant_1 {
	2, 4: THIS_ID(tile);
	3, 4: THIS_ID(tile);
	4, 3: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	3, 1: THIS_ID(tile);
	2, 3: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	1, 3: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	0, 3: THIS_ID(tile);
	1, 5: THIS_ID(tile);
	1, 4: THIS_ID(tile);
	4, 1: THIS_ID(tile);
	4, 0: THIS_ID(tile);
	3, 3: THIS_ID(tile);
	4, 4: THIS_ID(tile);
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    2
#define THIS_PROD_RATIO_CARGO1    6
#define THIS_PROD_RATIO_CARGO2    0
#define THIS_PROD_RATIO_CARGO3    0
#define THIS_BOOST_12             0
#define THIS_BOOST_13             0
#define THIS_BOOST_21             0
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0
#define THIS_PRODUCTION_SPAN      30
/* extra text template */
#define THIS_STR_EXTRA_TEXT       STR_EXTRA_RECYCLING_PLANT
#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY
/* availability years */
#define THIS_MIN_YEAR 1997


CHECK_INCOMPATIBLE  (recycling_plant, 56, CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
CHECK_INCOMPATIBLE  (recycling_depot, 16, CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(recycling_plant))
CHECK_FOUNDER       (THIS_ID(recycling_depot))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_secondary.pnml"
#include "../templates/check_secondary_production_level.pnml"
#include "../templates/check_secondary_closure.pnml"

#include "../templates/extra_text_secondary.pnml"

#include "../templates/check_availability.pnml"

/* Decide randomly on cargo output:
 * First cargo is always MNSP, 2nd is randomly a choice of 4,
 * 3rd cargo is not allowed nor defined */
random_switch (FEAT_INDUSTRIES, SELF, THIS_ID(random_output_cargo)) {
	1: return SCRP;   // scrap metal
	1: return RFPR;   // chemicals
	1: return BDMT;   // building materials
	1: return FMSP;   // farm supplies
}
switch(FEAT_INDUSTRIES, SELF, THIS_ID(cargo_output), (extra_callback_info1 & 255)) {
	0: return MNSP;                   // first output cargo
	1: THIS_ID(random_output_cargo);  // 2nd output cargo: randomly
	return 0xFF;                      // terminate callback
}

item(FEAT_INDUSTRIES, recycling_plant, 23) {
	property {
		substitute: 0;
		layouts: [
				tilelayout_recycling_plant_1
			];
		life_type:              IND_LIFE_TYPE_PROCESSING;
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_FARM;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		name:                   string(STR_IND_RECYCLING_PLANT);
		prod_cargo_types:      [SCRP, MNSP];
		accept_cargo_types:    [RCYC];
		prod_multiplier: [0, 0];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 5;
		conflicting_ind_types: [];
		prob_random: 7;
		prob_in_game: 7;
		prospect_chance: 0.75;
		fund_cost_multiplier: 118;
		map_colour: 164;
		remove_cost_multiplier: 0;
		spec_flags:             0;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		cargo_output:            THIS_ID(cargo_output);
		availability:            THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"
