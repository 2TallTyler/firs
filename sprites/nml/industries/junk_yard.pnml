/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) junk_yard ## __VA_ARGS__


item(FEAT_INDUSTRYTILES, tile_junkyard, 193) {
	property {
		substitute: 0;
		accepted_cargos: [[ENSP, 8]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

spriteset(spriteset_5509, "sprites/graphics/industries/groundtiles.png") { tmpl_ground_tile(10, 10) } 
spriteset(spriteset_5510, "sprites/graphics/industries/junkyard.pcx") { tmpl_building_sprite(10, 10, 55, -24) } 
spriteset(spriteset_5511, "sprites/graphics/industries/junkyard.pcx") { tmpl_building_sprite(80, 10, 55, -24) } 
spriteset(spriteset_5512, "sprites/graphics/industries/junkyard.pcx") { tmpl_building_sprite(150, 10, 55, -24) } 
spriteset(spriteset_5513, "sprites/graphics/industries/junkyard.pcx") { tmpl_building_sprite(220, 10, 55, -24) } 
spriteset(spriteset_5514, "sprites/graphics/industries/junkyard.pcx") { tmpl_building_sprite(290, 10, 55, -24) } 
spriteset(spriteset_5515, "sprites/graphics/industries/junkyard.pcx") { tmpl_building_sprite(360, 10, 55, -24) } 
spriteset(spriteset_5516, "sprites/graphics/industries/junkyard.pcx") { tmpl_building_sprite(430, 10, 55, -24) } 
spriteset(spriteset_5517, "sprites/graphics/industries/junkyard.pcx") { tmpl_building_sprite(500, 10, 55, -24) } 
spriteset(spriteset_5518, "sprites/graphics/industries/junkyard.pcx") { tmpl_building_sprite(570, 10, 55, -24) } 
spritelayout action2_5519 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5510;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_5520 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5511;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_5521 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5512;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_5522 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5513;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_5523 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5514;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_5524 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5515;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_5525 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5516;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_5526 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5517;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

spritelayout action2_5527 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_5518;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 32;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, action2_5528, relative_pos) {
	relative_coord(0, 2): action2_5520;
	relative_coord(1, 1): action2_5520;
	relative_coord(2, 1): action2_5519;
	relative_coord(2, 2): action2_5526;
	relative_coord(3, 1): action2_5522;
	relative_coord(3, 2): action2_5525;
	relative_coord(4, 0): action2_5523;
	relative_coord(4, 1): action2_5521;
	relative_coord(4, 2): action2_5524;
	action2_5527;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_5529, relative_pos) {
	relative_coord(0, 1): action2_5525;
	relative_coord(1, 1): action2_5519;
	relative_coord(1, 2): action2_5526;
	relative_coord(2, 0): action2_5523;
	relative_coord(2, 1): action2_5521;
	relative_coord(2, 2): action2_5524;
	action2_5527;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_5530, relative_pos) {
	relative_coord(0, 3): action2_5520;
	relative_coord(1, 1): action2_5520;
	relative_coord(1, 3): action2_5527;
	relative_coord(2, 1): action2_5519;
	relative_coord(2, 3): action2_5526;
	relative_coord(3, 1): action2_5522;
	relative_coord(3, 3): action2_5525;
	relative_coord(4, 0): action2_5523;
	relative_coord(4, 1): action2_5521;
	relative_coord(4, 3): action2_5524;
	action2_5527;
}

switch(FEAT_INDUSTRYTILES, PARENT, action2_5531, layout_num) {
	1: action2_5528;
	2: action2_5529;
	3: action2_5530;
	action2_5519;
}

CHECK_NEARBY_TILE_CLASS(action2_5539)

switch(FEAT_INDUSTRYTILES, PARENT, action2_5540, founder) {
	16: action2_5539;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_5541, var[0x60, 4, 1, 0]) {
	1: return 1025;
	action2_5540;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_5542, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_5541;
	action2_5531;
}

item(FEAT_INDUSTRYTILES, tile_junkyard, 193) {
	graphics {
		action2_5542;
	}
}

tilelayout tilelayout_junkyard_1 {
	0, 2: tile_junkyard;
	1, 1: tile_junkyard;
	1, 2: tile_junkyard;
	2, 1: tile_junkyard;
	2, 2: tile_junkyard;
	3, 1: tile_junkyard;
	3, 2: tile_junkyard;
	4, 0: tile_junkyard;
	4, 1: tile_junkyard;
	4, 2: tile_junkyard;
}

tilelayout tilelayout_junkyard_2 {
	0, 1: tile_junkyard;
	1, 1: tile_junkyard;
	1, 2: tile_junkyard;
	2, 0: tile_junkyard;
	2, 1: tile_junkyard;
	2, 2: tile_junkyard;
}

tilelayout tilelayout_junkyard_3 {
	0, 3: tile_junkyard;
	1, 1: tile_junkyard;
	1, 3: tile_junkyard;
	2, 1: tile_junkyard;
	2, 3: tile_junkyard;
	3, 1: tile_junkyard;
	3, 3: tile_junkyard;
	4, 0: tile_junkyard;
	4, 1: tile_junkyard;
	4, 3: tile_junkyard;
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

#define THIS_STR_EXTRA_SUPPLIES STR_EXTRA_ENGINEERING_SUPPLIES
/* availability years */
#define THIS_MIN_YEAR 1878

CHECK_TOWN_DISTANCE (town_distance, 0, 144, return CB_RESULT_IND_ALLOW_LOCATION)
CHECK_FOUNDER       (THIS_ID(town_distance))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_primary.pnml"
#include "../templates/check_primary_production_level.pnml"

#include "../templates/extra_text_primary.pnml"

#include "../templates/check_availability.pnml"

item(FEAT_INDUSTRIES, junkyard, 25) {
	property {
		substitute: 0;
		layouts: [
				tilelayout_junkyard_1,
				tilelayout_junkyard_2,
				tilelayout_junkyard_3
			];
		life_type:              IND_LIFE_TYPE_EXTRACTIVE;
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		name:                   string(STR_IND_JUNKYARD);
		prod_cargo_types: [SCRP];
		accept_cargo_types: [ENSP];
		prod_multiplier: [6, 0];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 5;
		conflicting_ind_types: [];
		prob_random: 7;
		prob_in_game: 3;
		prospect_chance: 0.75;
		fund_cost_multiplier: 101;
		map_colour: 36;
		remove_cost_multiplier: 0;
		spec_flags:             0;
		nearby_station_name: 0;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		availability:            THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"
