/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) metal_foundry ## __VA_ARGS__

spriteset(THIS_ID(spriteset_ground), "sprites/graphics/industries/groundtiles.png") {
	tmpl_ground_tile(150, 10)
	tmpl_ground_tile(150, 10)
}

spriteset(THIS_ID(spriteset_1)) {
	tmpl_building_sprite_filename(10, 10, 70, -39, "sprites/graphics/industries/metalfoundry.png")
	tmpl_building_sprite_filename(10, 10, 70, -39, "sprites/graphics/industries/metalfoundry_snow.png")
}

spriteset(THIS_ID(spriteset_2)) {
	tmpl_building_sprite_filename(80, 10, 70, -39, "sprites/graphics/industries/metalfoundry.png")
	tmpl_building_sprite_filename(80, 10, 70, -39, "sprites/graphics/industries/metalfoundry_snow.png")
}

spriteset(THIS_ID(spriteset_3)) {
	tmpl_building_sprite_filename(150, 10, 51, -20, "sprites/graphics/industries/metalfoundry.png")
	tmpl_building_sprite_filename(150, 10, 51, -20, "sprites/graphics/industries/metalfoundry_snow.png")
}

spriteset(THIS_ID(spriteset_4)) {
	tmpl_building_sprite_filename(220, 10, 51, -20, "sprites/graphics/industries/metalfoundry.png")
	tmpl_building_sprite_filename(220, 10, 51, -20, "sprites/graphics/industries/metalfoundry_snow.png")
}

spriteset(THIS_ID(spriteset_5)) {
	tmpl_building_sprite_filename(290, 10, 51, -20, "sprites/graphics/industries/metalfoundry.png")
	tmpl_building_sprite_filename(290, 10, 51, -20, "sprites/graphics/industries/metalfoundry_snow.png")
}

spriteset(THIS_ID(spriteset_6)) {
	tmpl_building_sprite_filename(360, 10, 31, 0, "sprites/graphics/industries/metalfoundry.png")
	tmpl_building_sprite_filename(360, 10, 31, 0, "sprites/graphics/industries/metalfoundry_snow.png")
}

spriteset(THIS_ID(spriteset_7)) {
	tmpl_building_sprite_filename(430, 10, 31, 0, "sprites/graphics/industries/metalfoundry.png")
	tmpl_building_sprite_filename(430, 10, 31, 0, "sprites/graphics/industries/metalfoundry_snow.png")
}

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_2), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_2), 32)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_3), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_3), 32)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_4), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_4), 32)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_5), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_5), 32)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_6), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_6), 32)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_7), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_7), 32)

SPRITELAYOUT_NORMAL_SNOW_BEGIN(THIS_ID(spritelayout_1_anim), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_1), 7)
	building {
		sprite: 2040 + (animation_frame / 4);
		yoffset: 8;
		zoffset: 53 + animation_frame;
		yextent: 8;
		zextent: 7;
		hide_sprite: animation_frame > 19;
	}
SPRITELAYOUT_END

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_1), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_3);
	relative_coord(2, 0): THIS_ID(spritelayout_3);
	relative_coord(0, 1): THIS_ID(spritelayout_3);
	relative_coord(1, 1): THIS_ID(spritelayout_3);
	relative_coord(1, 0): THIS_ID(spritelayout_3);
	relative_coord(0, 3): THIS_ID(spritelayout_4);
	relative_coord(1, 3): THIS_ID(spritelayout_4);
	relative_coord(1, 4): THIS_ID(spritelayout_6);
	relative_coord(2, 1): THIS_ID(spritelayout_1_anim);
	relative_coord(2, 2): THIS_ID(spritelayout_2);
	relative_coord(2, 3): THIS_ID(spritelayout_7);
	relative_coord(2, 4): THIS_ID(spritelayout_7);
	THIS_ID(spritelayout_5);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_2), relative_pos) {
	relative_coord(1, 0): THIS_ID(spritelayout_1_anim);
	relative_coord(1, 1): THIS_ID(spritelayout_2);
	relative_coord(0, 2): THIS_ID(spritelayout_3);
	relative_coord(1, 2): THIS_ID(spritelayout_3);
	relative_coord(1, 3): THIS_ID(spritelayout_3);
	relative_coord(2, 1): THIS_ID(spritelayout_7);
	relative_coord(2, 2): THIS_ID(spritelayout_6);
	relative_coord(2, 3): THIS_ID(spritelayout_6);
	relative_coord(2, 0): THIS_ID(spritelayout_4);
	relative_coord(3, 0): THIS_ID(spritelayout_4);
	relative_coord(3, 2): THIS_ID(spritelayout_4);
	relative_coord(0, 3): THIS_ID(spritelayout_3);
	relative_coord(3, 3): THIS_ID(spritelayout_3);
	THIS_ID(spritelayout_5);
}

switch(FEAT_INDUSTRYTILES, PARENT, THIS_ID(layout), layout_num) {
	1: THIS_ID(layout_1);
	2: THIS_ID(layout_2);
	THIS_ID(layout_1);
}

CHECK_NEARBY_TILE_CLASS(switch_metal_foundry_cb_nearby_check)

switch(FEAT_INDUSTRYTILES, PARENT, action2_6353, founder) {
	16: switch_metal_foundry_cb_nearby_check;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6354, var[0x60, 0, 255, 0]) {
	1..255: return 1025;
	action2_6353;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6355, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_6354;
	THIS_ID(layout);
}

item(FEAT_INDUSTRYTILES, THIS_ID(industrytile), 188) {
	property {
		substitute: 0;
		accepted_cargos: [[STEL, 8]];
		land_shape_flags: bitmask(LSF_ONLY_ON_FLAT_LAND);
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
		animation_info: [1, 47];
		animation_speed: 2;
	}

	graphics {
		action2_6355;
	}
}

tilelayout tilelayout_metal_foundry_1 {
	0, 0: THIS_ID(industrytile);
	0, 1: THIS_ID(industrytile);
	0, 2: THIS_ID(industrytile);
	0, 3: THIS_ID(industrytile);
	0, 4: THIS_ID(industrytile);
	1, 0: THIS_ID(industrytile);
	1, 1: THIS_ID(industrytile);
	1, 2: THIS_ID(industrytile);
	1, 3: THIS_ID(industrytile);
	2, 0: THIS_ID(industrytile);
	2, 1: THIS_ID(industrytile);
	2, 2: THIS_ID(industrytile);
	1, 4: THIS_ID(industrytile);
	2, 3: THIS_ID(industrytile);
	2, 4: THIS_ID(industrytile);
}

tilelayout tilelayout_metal_foundry_2 {
	0, 2: THIS_ID(industrytile);
	0, 3: THIS_ID(industrytile);
	1, 0: THIS_ID(industrytile);
	1, 1: THIS_ID(industrytile);
	1, 2: THIS_ID(industrytile);
	1, 3: THIS_ID(industrytile);
	2, 0: THIS_ID(industrytile);
	2, 3: THIS_ID(industrytile);
	3, 0: THIS_ID(industrytile);
	3, 1: THIS_ID(industrytile);
	3, 2: THIS_ID(industrytile);
	3, 3: THIS_ID(industrytile);
	2, 1: THIS_ID(industrytile);
	2, 2: THIS_ID(industrytile);
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    2
#define THIS_PROD_RATIO_CARGO1    8
#define THIS_PROD_RATIO_CARGO2    8
#define THIS_PROD_RATIO_CARGO3    0
#define THIS_BOOST_12             0
#define THIS_BOOST_13             0
#define THIS_BOOST_21             0
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0
#define THIS_PRODUCTION_SPAN      30
/* extra text template */
#define THIS_STR_EXTRA_TEXT       STR_EXTRA_METAL_FOUNDRY
#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY
/* availability years */
#define THIS_MIN_YEAR 1762


CHECK_INCOMPATIBLE(metal_foundry, 56, CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
CHECK_FOUNDER     (THIS_ID(metal_foundry))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_secondary.pnml"
#include "../templates/check_secondary_production_level.pnml"
#include "../templates/check_secondary_closure.pnml"

#include "../templates/extra_text_secondary.pnml"

#include "../templates/check_availability.pnml"


item(FEAT_INDUSTRIES, metal_foundry, 9) {
	property {
		substitute: 0;
		layouts: [
				tilelayout_metal_foundry_1,
				tilelayout_metal_foundry_2
			];
		life_type:              IND_LIFE_TYPE_PROCESSING;
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		name:                   string(STR_IND_METAL_FOUNDRY);
		prod_cargo_types: [GOOD, MNSP];
		accept_cargo_types: [STEL];
		prod_multiplier: [0, 0];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 5;
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 3;
		prospect_chance: 0.75;
		fund_cost_multiplier: 120;
		map_colour: 123;
		remove_cost_multiplier: 0;
		spec_flags:             0;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		availability:            THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"
