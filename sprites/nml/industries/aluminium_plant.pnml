/*
 * This file is part of FIRS Industry Set for OpenTTD.
 * FIRS is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS. If not, see <http://www.gnu.org/licenses/>.
 */

#include "../templates/spritelayout_templates.pnml"
#include "../templates/smoke_templates.pnml"

#define THIS_ID(...) aluminium_plant ## __VA_ARGS__

spriteset(THIS_ID(spriteset_ground), "sprites/graphics/industries/groundtiles.png") {
	tmpl_ground_tile(80, 10)
	tmpl_ground_tile(80, 10)
}

spriteset(THIS_ID(spriteset_1)) {
	tmpl_building_sprite_filename(10, 10, 57, -26, "sprites/graphics/industries/aluminiumplant.png")
	tmpl_building_sprite_filename(10, 10, 57, -26, "sprites/graphics/industries/aluminiumplant_snow.png")
}

spriteset(THIS_ID(spriteset_2)) {
	tmpl_building_sprite_filename(80, 10, 66, -26, "sprites/graphics/industries/aluminiumplant.png")
	tmpl_building_sprite_filename(80, 10, 66, -26, "sprites/graphics/industries/aluminiumplant_snow.png")
}

spriteset(THIS_ID(spriteset_3)) {
	tmpl_building_sprite_filename(150, 10, 92, -61, "sprites/graphics/industries/aluminiumplant.png")
	tmpl_building_sprite_filename(150, 10, 92, -61, "sprites/graphics/industries/aluminiumplant_snow.png")
}

spriteset(THIS_ID(spriteset_4)) {
	tmpl_building_sprite_filename(220, 10, 90, -61, "sprites/graphics/industries/aluminiumplant.png")
	tmpl_building_sprite_filename(220, 10, 90, -61, "sprites/graphics/industries/aluminiumplant_snow.png")
}

spriteset(THIS_ID(spriteset_5)) {
	tmpl_building_sprite_filename(290, 10, 100, -61, "sprites/graphics/industries/aluminiumplant.png")
	tmpl_building_sprite_filename(290, 10, 100, -61, "sprites/graphics/industries/aluminiumplant_snow.png")
}

spriteset(THIS_ID(spriteset_6)) {
	tmpl_building_sprite_filename(360, 10, 100, -61, "sprites/graphics/industries/aluminiumplant.png")
	tmpl_building_sprite_filename(360, 10, 100, -61, "sprites/graphics/industries/aluminiumplant_snow.png")
}

spriteset(THIS_ID(spriteset_7)) {
	tmpl_building_sprite_filename(430, 10, 56, -26, "sprites/graphics/industries/aluminiumplant.png")
	tmpl_building_sprite_filename(430, 10, 56, -26, "sprites/graphics/industries/aluminiumplant_snow.png")
}

spriteset(THIS_ID(spriteset_8)) {
	tmpl_building_sprite_filename(500, 10, 56, -26, "sprites/graphics/industries/aluminiumplant.png")
	tmpl_building_sprite_filename(500, 10, 56, -26, "sprites/graphics/industries/aluminiumplant_snow.png")
}

spriteset(THIS_ID(spriteset_9)) {
	tmpl_building_sprite_filename(570, 10, 110, -61, "sprites/graphics/industries/aluminiumplant.png")
	tmpl_building_sprite_filename(570, 10, 110, -61, "sprites/graphics/industries/aluminiumplant_snow.png")
}

spriteset(THIS_ID(spriteset_10)) {
	tmpl_building_sprite_filename(640, 10, 110, -61, "sprites/graphics/industries/aluminiumplant.png")
	tmpl_building_sprite_filename(640, 10, 110, -61, "sprites/graphics/industries/aluminiumplant_snow.png")
}

spriteset(THIS_ID(spriteset_11)) {
	tmpl_building_sprite_filename(710, 10, 110, -61, "sprites/graphics/industries/aluminiumplant.png")
	tmpl_building_sprite_filename(710, 10, 110, -61, "sprites/graphics/industries/aluminiumplant_snow.png")
}

spriteset(THIS_ID(spriteset_12)) {
	tmpl_building_sprite_filename(780, 10, 56, -25, "sprites/graphics/industries/aluminiumplant.png")
	tmpl_building_sprite_filename(780, 10, 56, -25, "sprites/graphics/industries/aluminiumplant_snow.png")
}

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_1), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_1), 64)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_2), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_2), 90)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_3), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_3), 64)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_5), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_5), 64)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_6), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_6), 64)

SPRITELAYOUT_NORMAL_SNOW_BEGIN(THIS_ID(spritelayout_7), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_7), 32)
	building {
		sprite: THIS_ID(spriteset_12)(terrain_type == TILETYPE_SNOW);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
	}
SPRITELAYOUT_END

SPRITELAYOUT_NORMAL_SNOW_BEGIN(THIS_ID(spritelayout_8), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_8), 32)
	building {
		sprite: THIS_ID(spriteset_12)(terrain_type == TILETYPE_SNOW);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
	}
SPRITELAYOUT_END

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_9), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_9), 90)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_10), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_10), 90)

SPRITELAYOUT_NORMAL_SNOW(THIS_ID(spritelayout_11), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_11), 90)

SPRITELAYOUT_NORMAL_SNOW_BEGIN(THIS_ID(spritelayout_12), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_12), 90)
	building {
		sprite: 2054;
		xoffset: 1;
		yoffset: 2;
		xextent: 15;
		yextent: 14;
	}
SPRITELAYOUT_END

SPRITELAYOUT_NORMAL_SNOW_BEGIN(THIS_ID(spritelayout_4_anim), THIS_ID(spriteset_ground), THIS_ID(spriteset_ground), THIS_ID(spriteset_4), 7)
	BUILDING_DARK_SMOKE_SMALL(5, 0, 64)
SPRITELAYOUT_END

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_1), relative_pos) {
	relative_coord(0, 3): THIS_ID(spritelayout_11);
	relative_coord(1, 2): THIS_ID(spritelayout_9);
	relative_coord(1, 3): THIS_ID(spritelayout_10);
	relative_coord(2, 0): THIS_ID(spritelayout_3);
	relative_coord(2, 1): THIS_ID(spritelayout_1);
	relative_coord(2, 2): THIS_ID(spritelayout_5);
	relative_coord(2, 3): THIS_ID(spritelayout_6);
	relative_coord(3, 0): THIS_ID(spritelayout_4_anim);
	relative_coord(3, 1): THIS_ID(spritelayout_1);
	relative_coord(3, 2): THIS_ID(spritelayout_1);
	relative_coord(3, 3): THIS_ID(spritelayout_8);
	relative_coord(4, 0): THIS_ID(spritelayout_1);
	relative_coord(4, 1): THIS_ID(spritelayout_1);
	relative_coord(4, 2): THIS_ID(spritelayout_1);
	relative_coord(4, 3): THIS_ID(spritelayout_2);
	relative_coord(5, 0): THIS_ID(spritelayout_1);
	relative_coord(5, 1): THIS_ID(spritelayout_1);
	relative_coord(5, 2): THIS_ID(spritelayout_1);
	relative_coord(5, 3): THIS_ID(spritelayout_7);
	relative_coord(7, 1): THIS_ID(spritelayout_12);
	THIS_ID(spritelayout_1);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_2), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_1);
	relative_coord(0, 2): THIS_ID(spritelayout_1);
	relative_coord(0, 4): THIS_ID(spritelayout_11);
	relative_coord(1, 0): THIS_ID(spritelayout_1);
	relative_coord(1, 1): THIS_ID(spritelayout_4_anim);
	relative_coord(1, 2): THIS_ID(spritelayout_1);
	relative_coord(1, 3): THIS_ID(spritelayout_9);
	relative_coord(1, 4): THIS_ID(spritelayout_10);
	relative_coord(2, 0): THIS_ID(spritelayout_1);
	relative_coord(2, 1): THIS_ID(spritelayout_3);
	relative_coord(2, 2): THIS_ID(spritelayout_1);
	relative_coord(2, 3): THIS_ID(spritelayout_5);
	relative_coord(2, 4): THIS_ID(spritelayout_6);
	relative_coord(3, 0): THIS_ID(spritelayout_1);
	relative_coord(3, 2): THIS_ID(spritelayout_1);
	relative_coord(3, 3): THIS_ID(spritelayout_8);
	relative_coord(4, 0): THIS_ID(spritelayout_1);
	relative_coord(4, 1): THIS_ID(spritelayout_12);
	relative_coord(4, 2): THIS_ID(spritelayout_1);
	relative_coord(4, 3): THIS_ID(spritelayout_2);
	relative_coord(4, 4): THIS_ID(spritelayout_7);
	THIS_ID(spritelayout_1);
}

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(layout_3), relative_pos) {
	relative_coord(0, 0): THIS_ID(spritelayout_12);
	relative_coord(1, 0): THIS_ID(spritelayout_3);
	relative_coord(1, 1): THIS_ID(spritelayout_2);
	relative_coord(2, 0): THIS_ID(spritelayout_4_anim);
	relative_coord(2, 1): THIS_ID(spritelayout_8);
	relative_coord(3, 0): THIS_ID(spritelayout_1);
	relative_coord(3, 1): THIS_ID(spritelayout_1);
	relative_coord(4, 0): THIS_ID(spritelayout_1);
	relative_coord(4, 1): THIS_ID(spritelayout_1);
	relative_coord(5, 0): THIS_ID(spritelayout_1);
	relative_coord(5, 1): THIS_ID(spritelayout_1);
	relative_coord(6, 0): THIS_ID(spritelayout_7);
	relative_coord(6, 1): THIS_ID(spritelayout_7);
	relative_coord(7, 0): THIS_ID(spritelayout_8);
	relative_coord(7, 1): THIS_ID(spritelayout_11);
	relative_coord(8, 0): THIS_ID(spritelayout_9);
	relative_coord(8, 1): THIS_ID(spritelayout_10);
	relative_coord(9, 0): THIS_ID(spritelayout_5);
	relative_coord(9, 1): THIS_ID(spritelayout_6);
	THIS_ID(spritelayout_1);
}

switch(FEAT_INDUSTRYTILES, PARENT, THIS_ID(layout), layout_num) {
	2: THIS_ID(layout_2);
	3: THIS_ID(layout_3);
	THIS_ID(layout_1);
}

/* *************************************************
 * Definition of the industry tile and its callbacks
 * *************************************************/

TILE_DISALLOW_NEARBY_CLASS(tile_nearby_industry, TILE_CLASS_INDUSTRY, CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
TILE_ALLOW_PLAYER         (tile_player,                                                                  THIS_ID(tile_nearby_industry))
TILE_ALLOW_ONLY_FLAT_LAND (tile_location,                             CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(tile_player))

switch(FEAT_INDUSTRYTILES, SELF, THIS_ID(anim_control), (extra_callback_info1 & 14)) {
	0: return 0;
	1: return 2;
	2: return 4;
	3: return 6;
	4: return 8;
	5: return 10;
	6: return 12;
	7: return 14;
	8: return 16;
	9: return 18;
	10: return 20;
	11: return 22;
	12: return 24;
	return CB_RESULT_START_ANIMATION;
}

item(FEAT_INDUSTRYTILES, THIS_ID(tile), 185) {
	property {
		substitute:         0;
		accepted_cargos:    [[AORE, 8], [RFPR, 8], [SCRP, 8]];
		land_shape_flags:   bitmask(LSF_ONLY_ON_FLAT_LAND);
		callback_flags:     bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
		animation_info:     [ANIMATION_LOOPING, 47];
		animation_speed:    2;
		animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_CONSTRUCTION_STATE);
	}

	graphics {
		anim_control: THIS_ID(anim_control);
		tile_check:   THIS_ID(tile_location);
		THIS_ID(layout);
	}
}

/* *************************************************
 * Definition of the industry layouts
 * *************************************************/

tilelayout tilelayout_aluminium_plant_1 {
	0, 2: item_FEAT_INDUSTRYTILES_224;
	0, 3: THIS_ID(tile);
	1, 2: THIS_ID(tile);
	1, 3: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	2, 2: THIS_ID(tile);
	2, 3: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	3, 1: THIS_ID(tile);
	3, 2: item_FEAT_INDUSTRYTILES_224;
	3, 3: THIS_ID(tile);
	4, 0: THIS_ID(tile);
	4, 1: THIS_ID(tile);
	4, 2: THIS_ID(tile);
	4, 3: THIS_ID(tile);
	5, 0: THIS_ID(tile);
	5, 1: THIS_ID(tile);
	5, 2: THIS_ID(tile);
	5, 3: THIS_ID(tile);
	7, 1: THIS_ID(tile);
}

tilelayout tilelayout_aluminium_plant_2 {
	0, 0: THIS_ID(tile);
	0, 1: item_FEAT_INDUSTRYTILES_224;
	0, 2: THIS_ID(tile);
	0, 3: item_FEAT_INDUSTRYTILES_224;
	0, 4: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	1, 2: THIS_ID(tile);
	1, 3: THIS_ID(tile);
	1, 4: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	2, 2: THIS_ID(tile);
	2, 3: THIS_ID(tile);
	2, 4: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	3, 1: item_FEAT_INDUSTRYTILES_224;
	3, 2: THIS_ID(tile);
	3, 3: THIS_ID(tile);
	3, 4: item_FEAT_INDUSTRYTILES_224;
	4, 0: THIS_ID(tile);
	4, 1: THIS_ID(tile);
	4, 2: THIS_ID(tile);
	4, 3: THIS_ID(tile);
	4, 4: THIS_ID(tile);
}

tilelayout tilelayout_aluminium_plant_3 {
	0, 0: THIS_ID(tile);
	1, 0: THIS_ID(tile);
	1, 1: THIS_ID(tile);
	2, 0: THIS_ID(tile);
	2, 1: THIS_ID(tile);
	3, 0: THIS_ID(tile);
	3, 1: THIS_ID(tile);
	4, 0: THIS_ID(tile);
	4, 1: THIS_ID(tile);
	5, 0: THIS_ID(tile);
	5, 1: THIS_ID(tile);
	6, 0: THIS_ID(tile);
	6, 1: THIS_ID(tile);
	7, 0: THIS_ID(tile);
	7, 1: THIS_ID(tile);
	8, 0: THIS_ID(tile);
	8, 1: THIS_ID(tile);
	9, 0: THIS_ID(tile);
	9, 1: THIS_ID(tile);
}

/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    1
#define THIS_PROD_RATIO_CARGO1    2
#define THIS_PROD_RATIO_CARGO2    2
#define THIS_PROD_RATIO_CARGO3    4
#define THIS_BOOST_12             2
#define THIS_BOOST_13             2
#define THIS_BOOST_21             2
#define THIS_BOOST_23             2
#define THIS_BOOST_31             4
#define THIS_BOOST_32             4
#define THIS_PRODUCTION_SPAN      30
/* extra text template */
#define THIS_STR_EXTRA_TEXT       STR_EXTRA_ALUMINUM_PLANT
#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY
/* availability years */
#define THIS_MIN_YEAR 1923

CHECK_INCOMPATIBLE  (aluminium_plant, 56, CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
CHECK_INCOMPATIBLE  (bauxite_mine,    16, CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(aluminium_plant))
CHECK_FOUNDER       (THIS_ID(bauxite_mine))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_secondary.pnml"
#include "../templates/check_secondary_production_level.pnml"
#include "../templates/check_secondary_closure.pnml"

#include "../templates/extra_text_secondary.pnml"

#include "../templates/check_availability.pnml"

item(FEAT_INDUSTRIES, aluminium_plant, 8) {
	property {
		substitute: 0;
		layouts: [
				tilelayout_aluminium_plant_1,
				tilelayout_aluminium_plant_2,
				tilelayout_aluminium_plant_3
			];
		life_type:              IND_LIFE_TYPE_PROCESSING;
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		name:                   string(STR_IND_ALUMINIUM_PLANT);
		nearby_station_name:    string(STR_STATIONNAME_PLANTS);
		prod_cargo_types:       [STEL];
		accept_cargo_types:     [AORE, RFPR, SCRP];
		prod_multiplier: [0, 0];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 5;
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 3;
		prospect_chance: 0.75;
		fund_cost_multiplier: 200;
		map_colour: 175;
		remove_cost_multiplier: 0;
		spec_flags:             0;
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		availability:            THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"
