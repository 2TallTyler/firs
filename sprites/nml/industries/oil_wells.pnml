/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) oil_wells ## __VA_ARGS__

#define THIS_STR_EXTRA_SUPPLIES        STR_EXTRA_ENGINEERING_SUPPLIES

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_215, 215) {
	property {
		substitute: 0;
		accepted_cargos: [[ENSP, 8]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

spritelayout action2_6563 {
	ground {
		sprite: 2173;
	}
	building {
		sprite: 2174;
		xoffset: 1;
		yoffset: 2;
		xextent: 15;
		yextent: 14;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6564, var[0x03, 0, 255]) {
	0: action2_6563;
	1: action2_6563;
	2: action2_6563;
	action2_6563;
}

CHECK_NEARBY_TILE_CLASS(action2_6572)

switch(FEAT_INDUSTRYTILES, PARENT, action2_6573, founder) {
	16: action2_6572;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6574, var[0x60, 4, 1, 0]) {
	1: return 1025;
	action2_6573;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6575, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_6574;
	action2_6564;
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_215, 215) {
	graphics {
		action2_6575;
	}
}

//??????? Oil well vvv ??????

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_216, 216) {
	property {
		substitute: 0;
		accepted_cargos: [[ENSP, 8]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

spriteset(spriteset_6579, "sprites/graphics/industries/oilwell.png") { tmpl_building_sprite(10, 10, 38, -9) } 
spritelayout action2_6580 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: spriteset_6579;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		xoffset: 1;
		yoffset: 2;
		xextent: 15;
		yextent: 14;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6581, var[0x03, 0, 255]) {
	0: action2_6580;
	1: action2_6580;
	2: action2_6580;
	action2_6580;
}

CHECK_NEARBY_TILE_CLASS(action2_6589)

switch(FEAT_INDUSTRYTILES, PARENT, action2_6590, founder) {
	16: action2_6589;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6591, var[0x60, 4, 1, 0]) {
	1: return 1025;
	action2_6590;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_6592, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_6591;
	action2_6581;
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_216, 216) {
	graphics {
		action2_6592;
	}
}

tilelayout tilelayout_7594_1 {
	0, 0: item_FEAT_INDUSTRYTILES_215;
	0, 7: item_FEAT_INDUSTRYTILES_215;
	1, 4: item_FEAT_INDUSTRYTILES_215;
	2, 1: item_FEAT_INDUSTRYTILES_215;
	3, 5: item_FEAT_INDUSTRYTILES_216;
	4, 8: item_FEAT_INDUSTRYTILES_215;
	5, 1: item_FEAT_INDUSTRYTILES_215;
	5, 4: item_FEAT_INDUSTRYTILES_215;
}

tilelayout tilelayout_7594_2 {
	0, 0: item_FEAT_INDUSTRYTILES_215;
	0, 4: item_FEAT_INDUSTRYTILES_215;
	1, 4: item_FEAT_INDUSTRYTILES_215;
	2, 8: item_FEAT_INDUSTRYTILES_215;
	4, 4: item_FEAT_INDUSTRYTILES_216;
	4, 8: item_FEAT_INDUSTRYTILES_215;
	5, 2: item_FEAT_INDUSTRYTILES_215;
	6, 2: item_FEAT_INDUSTRYTILES_215;
	6, 4: item_FEAT_INDUSTRYTILES_215;
}

tilelayout tilelayout_7594_3 {
	0, 0: item_FEAT_INDUSTRYTILES_215;
	0, 2: item_FEAT_INDUSTRYTILES_215;
	1, 4: item_FEAT_INDUSTRYTILES_215;
	1, 6: item_FEAT_INDUSTRYTILES_215;
	2, 0: item_FEAT_INDUSTRYTILES_216;
	3, 2: item_FEAT_INDUSTRYTILES_215;
	3, 4: item_FEAT_INDUSTRYTILES_215;
}

tilelayout tilelayout_7594_4 {
	0, 0: item_FEAT_INDUSTRYTILES_215;
	0, 4: item_FEAT_INDUSTRYTILES_215;
	0, 6: item_FEAT_INDUSTRYTILES_215;
	1, 2: item_FEAT_INDUSTRYTILES_215;
	1, 8: item_FEAT_INDUSTRYTILES_216;
	2, 0: item_FEAT_INDUSTRYTILES_215;
	2, 2: item_FEAT_INDUSTRYTILES_215;
	3, 1: item_FEAT_INDUSTRYTILES_215;
	5, 0: item_FEAT_INDUSTRYTILES_215;
	5, 2: item_FEAT_INDUSTRYTILES_215;
	6, 0: item_FEAT_INDUSTRYTILES_215;
}

item(FEAT_INDUSTRIES, oil_wells, 15) {
	property {
		substitute: 0;
		layouts: [tilelayout_7594_1, tilelayout_7594_2, tilelayout_7594_3, tilelayout_7594_4];
		life_type: 2;
		closure_msg: 18483;
		prod_increase_msg: 18485;
		prod_decrease_msg: 18489;
		new_ind_msg: 18477;
		name: 18445;
		prod_cargo_types: [OIL_];
		accept_cargo_types: [ENSP];
		prod_multiplier: [19];
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 3;
		prospect_chance: 0.75;
		fund_cost_multiplier: 230;
		map_colour: 152;
		spec_flags: 0;
		callback_flags: 1467;
		nearby_station_name: string(STR_GENERIC_DCE3);
	}
}

switch(FEAT_INDUSTRIES, SELF, action2_6595, 1) {
	1: return 1024;
	return 1024;
}

switch(FEAT_INDUSTRIES, SELF, action2_6596, industry_distance(oil_refinery)) {
	0..16: return 4;
	action2_6595;
}

switch(FEAT_INDUSTRIES, SELF, action2_6597, founder) {
	16: action2_6596;
	return 1024;
}

switch(FEAT_INDUSTRIES, SELF, action2_6598, game_mode) {
	1: action2_6597;
	return 1024;
}

#include "../templates/produce_primary.pnml"
#include "../templates/change_production_level_primary.pnml"
#include "../templates/extra_text_primary.pnml"

CHECK_OPENING(action2_6614, 1885, -1)

SWITCH_COLOUR_SCHEME1(action2_6618)

switch(FEAT_INDUSTRIES, SELF, action2_6619, current_callback) {
	0: THIS_ID(produce);
	IND_CB_LOCATION_CHECK: action2_6598;
	IND_CB_AVAILABILITY: action2_6614;
	IND_CB_COLOUR: action2_6618;
	IND_CB_EXTRA_TEXT_FUND:     return;
	IND_CB_RANDOM_PROD_CHANGE:  THIS_ID(check_closure);
	IND_CB_MONTHLY_PROD_CHANGE: THIS_ID(check_production_level);
	IND_CB_EXTRA_TEXT_INDUSTRY: THIS_ID(extra_text);
	THIS_ID(produce);
}

item(FEAT_INDUSTRIES, oil_wells, 15) {
	graphics {
		action2_6619;
	}
}
#include "../templates/undefs.pnml"
