/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define THIS_ID(...) sugar_refinery ## __VA_ARGS__

item(FEAT_INDUSTRYTILES, tile_sugar_refinery, 214) {
	property {
		substitute: 0;
		accepted_cargos: [[RSGR, 8], [MNSP, 8]];
		land_shape_flags: bitmask(LSF_ONLY_ON_FLAT_LAND);
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

spriteset(spriteset_7476, "sprites/graphics/industries/groundtiles.png") { tmpl_ground_tile(80, 10) } 
spriteset(spriteset_7477, "sprites/graphics/industries/sugarrefinery.pcx") { tmpl_building_sprite(10, 10, 50, -23) } 
spriteset(spriteset_7478, "sprites/graphics/industries/sugarrefinery.pcx") { tmpl_building_sprite(80, 10, 50, -25) } 
spriteset(spriteset_7479, "sprites/graphics/industries/sugarrefinery.pcx") { tmpl_building_sprite(150, 10, 88, -56) } 
spriteset(spriteset_7480, "sprites/graphics/industries/sugarrefinery.pcx") { tmpl_building_sprite(220, 10, 88, -58) } 
spritelayout action2_7481 {
	ground {
		sprite: spriteset_7476;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_7476;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 48;
	}
}

spritelayout action2_7482 {
	ground {
		sprite: spriteset_7476;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_7477;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 48;
	}
}

spritelayout action2_7483 {
	ground {
		sprite: spriteset_7476;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_7478;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 48;
	}
}

spritelayout action2_7484 {
	ground {
		sprite: spriteset_7476;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_7479;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 48;
	}
}

spritelayout action2_7485 {
	ground {
		sprite: spriteset_7476;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
	}
	building {
		sprite: spriteset_7480;
		recolour_mode: RECOLOUR_REMAP;
		palette: 0;
		zextent: 48;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, action2_7486, relative_pos) {
	relative_coord(0, 0): action2_7485;
	relative_coord(0, 1): action2_7484;
	relative_coord(1, 0): action2_7485;
	relative_coord(1, 1): action2_7483;
	relative_coord(2, 0): action2_7485;
	relative_coord(2, 1): action2_7482;
	action2_7481;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_7487, relative_pos) {
	relative_coord(0, 0): action2_7485;
	relative_coord(0, 1): action2_7485;
	relative_coord(0, 2): action2_7485;
	relative_coord(1, 0): action2_7484;
	relative_coord(1, 1): action2_7483;
	relative_coord(1, 2): action2_7482;
	action2_7481;
}

switch(FEAT_INDUSTRYTILES, PARENT, action2_7488, layout_num) {
	1: action2_7486;
	2: action2_7487;
	action2_7481;
}

CHECK_NEARBY_TILE_CLASS(action2_7496)

switch(FEAT_INDUSTRYTILES, PARENT, action2_7497, founder) {
	16: action2_7496;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_7498, var[0x60, 0, 255, 0]) {
	1..255: return 1025;
	action2_7497;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_7499, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_7498;
	action2_7488;
}

item(FEAT_INDUSTRYTILES, tile_sugar_refinery, 214) {
	graphics {
		action2_7499;
	}
}

tilelayout tilelayout_sugar_refinery_1 {
	0, 0: tile_sugar_refinery;
	0, 1: tile_sugar_refinery;
	1, 0: tile_sugar_refinery;
	1, 1: tile_sugar_refinery;
	2, 0: tile_sugar_refinery;
	2, 1: tile_sugar_refinery;
}

tilelayout tilelayout_sugar_refinery_2 {
	0, 0: tile_sugar_refinery;
	0, 1: tile_sugar_refinery;
	0, 2: tile_sugar_refinery;
	1, 0: tile_sugar_refinery;
	1, 1: tile_sugar_refinery;
	1, 2: tile_sugar_refinery;
}


/* *************************************************
 * Definition of the industry
 * *************************************************/

/* for secondary production template */
#define THIS_NUM_OUTPUT_CARGOS    1
#define THIS_PROD_RATIO_CARGO1    3
#define THIS_PROD_RATIO_CARGO2    5
#define THIS_PROD_RATIO_CARGO3    0
#define THIS_BOOST_12             3
#define THIS_BOOST_13             0
#define THIS_BOOST_21             5
#define THIS_BOOST_23             0
#define THIS_BOOST_31             0
#define THIS_BOOST_32             0
#define THIS_PRODUCTION_SPAN      30
/* extra text template */
#define THIS_STR_EXTRA_TEXT       STR_INFO_PRODUCTION_3PER8
#define THIS_STR_DEBUG_TEXT       STR_EXTRA_TEXT_DEBUG_SECONDARY
/* availability years */
#define THIS_MIN_YEAR 1730


CHECK_INCOMPATIBLE(sugar_refinery, 56, CB_RESULT_IND_DISALLOW_UNSUITABLE, return CB_RESULT_IND_ALLOW_LOCATION)
CHECK_INCOMPATIBLE(arable_farm,    16, CB_RESULT_IND_DISALLOW_UNSUITABLE, THIS_ID(sugar_refinery))
CHECK_FOUNDER     (THIS_ID(arable_farm))

SWITCH_COLOUR_SCHEME1(THIS_ID(colour))

#include "../templates/produce_secondary.pnml"
#include "../templates/check_secondary_production_level.pnml"
#include "../templates/check_secondary_closure.pnml"

#include "../templates/extra_text_secondary.pnml"

#include "../templates/check_availability.pnml"


item(FEAT_INDUSTRIES, sugar_refinery, 19) {
	property {
		substitute:             0;
		layouts: [
				tilelayout_sugar_refinery_1,
				tilelayout_sugar_refinery_2
			];
		life_type:              4;
		name:                   string(STR_IND_SUGAR_REFINERY);
		nearby_station_name:    string(STR_STATIONNAME_CHEMICALS);
		closure_msg:            TTD_STR_NEWS_INDUSTRY_CLOSURE_SUPPLY_PROBLEMS;
		prod_increase_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_INCREASE_GENERAL;
		prod_decrease_msg:      TTD_STR_NEWS_INDUSTRY_PRODUCTION_DECREASE_GENERAL;
		new_ind_msg:            TTD_STR_NEWS_INDUSTRY_CONSTRUCTION;
		prod_cargo_types:       [FOOD];
		accept_cargo_types:     [MNSP, RSGR];
		prod_multiplier:        [0, 0];
		input_multiplier_1:     [0, 0];
		input_multiplier_2:     [0, 0];
		input_multiplier_3:     [0, 0];
		min_cargo_distr:        5;
		conflicting_ind_types:  [];
		prob_random:            5;
		prob_in_game:           3;
		prospect_chance:        0.75;
		fund_cost_multiplier:   140;
		map_colour:             83;
		remove_cost_multiplier: 0;
		spec_flags:             bitmask(IND_FLAG_MILITARY_AIRPLANE_CAN_EXPLODE);
	}
	graphics {
		produce_cargo_arrival:   THIS_ID(produce);
		availability:            THIS_ID(check_availability);
		location_check:          THIS_ID(check_location);
		monthly_prod_change:     THIS_ID(check_production_level);
		random_prod_change:      THIS_ID(check_closure);
		extra_text_industry:     THIS_ID(extra_text);
		colour:                  THIS_ID(colour);
	}
}

#include "../templates/undefs.pnml"
