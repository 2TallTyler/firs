/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

#define IND_ID(...) bauxite_mine ## __VA_ARGS__

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_197, 197) {
	property {
		substitute: 0;
  accepted_cargos: [[ENSP, 8]];
		land_shape_flags: 0;
		callback_flags: bitmask(INDTILE_CBF_SLOPE_IS_SUITABLE);
	}
}

spritelayout action2_2756 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: 2039;
		zextent: 12;
	}
}

spritelayout action2_2757 {
	ground {
		sprite: 2022;
	}
}

spritelayout action2_2758 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: 2030;
		xoffset: 2;
		yoffset: 3;
		xextent: 13;
		yextent: 12;
		zextent: 12;
	}
}

spritelayout action2_2759 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: 2036;
		zextent: 12;
	}
}

spritelayout action2_2760 {
	ground {
		sprite: 2022;
	}
	building {
		sprite: 2033;
		zextent: 12;
	}
}

switch(FEAT_INDUSTRYTILES, SELF, action2_2761, relative_pos) {
	0: action2_2756;
	2: action2_2760;
	3: action2_2756;
	256: action2_2756;
	258: action2_2758;
	259: action2_2756;
	260: action2_2756;
	512: action2_2756;
	514: action2_2759;
	515: action2_2757;
	action2_2756;
}

switch(FEAT_INDUSTRYTILES, PARENT, action2_2762, layout_num) {
	1: action2_2761;
	action2_2756;
}

CHECK_NEARBY_TILE_CLASS(switch_bauxite_mine_cb_nearby_check)

switch(FEAT_INDUSTRYTILES, PARENT, action2_2771, founder) {
	16: switch_bauxite_mine_cb_nearby_check;
	return 1024;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_2772, var[0x60, 4, 1, 0]) {
	1: return 1025;
	action2_2771;
}

switch(FEAT_INDUSTRYTILES, SELF, action2_2773, (current_callback & 255)) {
	INDTILE_CB_SLOPE_IS_SUITABLE: action2_2772;
	action2_2762;
}

item(FEAT_INDUSTRYTILES, item_FEAT_INDUSTRYTILES_197, 197) {
	graphics {
		action2_2773;
	}
}

tilelayout tilelayout_bauxite_mine_1 {
	0, 0: item_FEAT_INDUSTRYTILES_197;
	2, 0: item_FEAT_INDUSTRYTILES_197;
	3, 0: item_FEAT_INDUSTRYTILES_197;
	0, 1: item_FEAT_INDUSTRYTILES_197;
	2, 1: item_FEAT_INDUSTRYTILES_197;
	3, 1: item_FEAT_INDUSTRYTILES_197;
	4, 1: item_FEAT_INDUSTRYTILES_197;
	0, 2: item_FEAT_INDUSTRYTILES_197;
	2, 2: item_FEAT_INDUSTRYTILES_197;
	3, 2: item_FEAT_INDUSTRYTILES_197;
}

item(FEAT_INDUSTRIES, bauxite_mine, 5) {
	property {
		substitute: 0;
		layouts: [tilelayout_bauxite_mine_1];
		life_type: 1;
		closure_msg: 18483;
		prod_increase_msg: 18485;
		prod_decrease_msg: 18489;
		new_ind_msg: 18477;
		name: string(STR_IND_BAUXITE_MINE);
		prod_cargo_types: [27, 255];
		accept_cargo_types: [24, 255, 255];
		prod_multiplier: [11, 0];
		input_multiplier_1: [0, 0];
		input_multiplier_2: [0, 0];
		input_multiplier_3: [0, 0];
		min_cargo_distr: 5;
		conflicting_ind_types: [];
		prob_random: 5;
		prob_in_game: 5;
		prospect_chance: 0.749999999942;
		fund_cost_multiplier: 238;
		map_colour: 71;
		remove_cost_multiplier: 0;
		spec_flags: 0;
		callback_flags: 1467;
	}
}

switch(FEAT_INDUSTRIES, SELF, action2_2776, industry_distance(5)) {
	20..70: return 1024;
	return 4;
}

switch(FEAT_INDUSTRIES, SELF, action2_2777, (((industry_count(5) * 2) / 3) / industry_clusters)) {
	0: return 1024;
	action2_2776;
}

switch(FEAT_INDUSTRIES, SELF, action2_2778, STORE_TEMP(-1, 256)) {
	0: action2_2777;
	action2_2777;
}

switch(FEAT_INDUSTRIES, SELF, action2_2779, industry_distance(8)) {
	0..16: return 4;
	action2_2778;
}

switch(FEAT_INDUSTRIES, SELF, action2_2780, founder) {
	16: action2_2779;
	return 1024;
}

switch(FEAT_INDUSTRIES, SELF, action2_2781, game_mode) {
	1: action2_2780;
	return 1024;
}

#include "../templates/produce_primary.pnml"

switch(FEAT_INDUSTRIES, SELF, action2_2784, var[0x93, 0, -1]) {
	0..4: return 3;
	return 0;
}

switch(FEAT_INDUSTRIES, SELF, action2_2785, allow_close_primary) {
	1..255: action2_2784;
	return 0;
}

switch(FEAT_INDUSTRIES, SELF, action2_2786, (extra_callback_info2 & 31)) {
	0: return 13;
	return 0;
}

switch(FEAT_INDUSTRIES, SELF, action2_2787, (extra_callback_info2 & 3)) {
	0: return 13;
	return 0;
}

switch(FEAT_INDUSTRIES, SELF, action2_2788, STORE_PERM(var[0x93, 0, -1], 2)) {
	0..4: return 0;
	5..32: action2_2786;
	action2_2787;
}

switch(FEAT_INDUSTRIES, SELF, action2_2789, allow_primary_production_decrease) {
	1..255: action2_2788;
	return 0;
}

switch(FEAT_INDUSTRIES, SELF, action2_2790, (extra_callback_info2 & 3)) {
	0: return 14;
	return 0;
}

switch(FEAT_INDUSTRIES, SELF, action2_2791, [STORE_PERM(0, 0), LOAD_TEMP(1)]) {
	1..-1: action2_2790;
	action2_2789;
}

switch(FEAT_INDUSTRIES, SELF, action2_2792, STORE_TEMP(LOAD_PERM(0), 1)) {
	0: action2_2791;
	action2_2791;
}

switch(FEAT_INDUSTRIES, SELF, action2_2793, [STORE_TEMP(LOAD_PERM(0), 256), var[0x93, 0, -1]]) {
	128: return string(STR_GENERIC_D0B3);
	return string(STR_GENERIC_D0B0);
}

CHECK_OPENING(action2_2797, 1924, -1)

switch(FEAT_INDUSTRIES, SELF, action2_2798, [STORE_TEMP((702361 - 701265), 256), 32933]) {
	return;
}

SWITCH_COLOUR_SCHEME1(action2_2801)

switch(FEAT_INDUSTRIES, SELF, switch_main_bauxite_mine, current_callback) {
	0: IND_ID(produce);
	IND_CB_LOCATION_CHECK: action2_2781;
	IND_CB_AVAILABILITY: action2_2797;
	IND_CB_COLOUR: action2_2801;
	IND_CB_EXTRA_TEXT_FUND: action2_2798;
	IND_CB_RANDOM_PROD_CHANGE: action2_2785;
	IND_CB_MONTHLY_PROD_CHANGE: action2_2792;
	IND_CB_EXTRA_TEXT_INDUSTRY: action2_2793;
	IND_ID(produce);
}

item(FEAT_INDUSTRIES, bauxite_mine, 5) {
	graphics {
		switch_main_bauxite_mine;
	}
}
#include "../templates/undefs.pnml"
