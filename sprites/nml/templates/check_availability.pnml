/*
 * This file is part of FIRS industry set.
 * FIRS industry set is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, version 2.
 * FIRS industry set is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with FIRS industry set. If not, see <http://www.gnu.org/licenses/>.
 */

/*
 * Template which checks availability of an industry for building
 * - Always allow in SE
 * - Never allow when NewGRF parameter forbids building
 * - Allow in THIS_MIN_YEAR ... THIS_MAX_YEAR
 *
 * Optionally an industry may define in its pnml file
 * THIS_MAX_YEAR      last availability year
 * THIS_MIN_YEAR      first availability year
 */

#ifndef THIS_MAX_YEAR
#define THIS_MAX_YEAR 5000000
#endif

#ifndef THIS_MIN_YEAR
#define THIS_MIN_YEAR 0
#endif


/* Allow industry funding by the player */
switch(FEAT_INDUSTRIES, SELF, THIS_ID(check_availability_build_type), (extra_callback_info2 & 255)) {
	IND_CREATION_FUND:     return CB_RESULT_IND_ALLOW;
	IND_CREATION_PROSPECT: return CB_RESULT_IND_ALLOW;
	return CB_RESULT_IND_DISALLOW;             // we're generating a map. Check availability years
}

/* Check for restriction via parameter */
switch(FEAT_INDUSTRIES, SELF, THIS_ID(check_availability_param), restrict_open_during_gameplay) {
	1..255: return CB_RESULT_IND_DISALLOW;            // disallow when restrictions in place
	THIS_ID(check_availability_build_type);           // check 
}

/* Allow always in the scenario editor */
switch (FEAT_INDUSTRIES, SELF, THIS_ID(available_game_mode), game_mode != GAMEMODE_GAME) {
	1: return CB_RESULT_IND_ALLOW;
	THIS_ID(check_availability_param);
}

/* check availability due to maximum year */
switch(FEAT_INDUSTRIES, SELF, THIS_ID(check_availability_max_year), (current_date + 1) > date(THIS_MAX_YEAR, 12, 31)) {
	1: return CB_RESULT_IND_DISALLOW;
	return THIS_ID(available_game_mode);
}

/* check availability due to minimum year */
switch(FEAT_INDUSTRIES, SELF, THIS_ID(check_availability), (current_date + 1)) {
	0 .. date(THIS_MIN_YEAR, 1, 1): return CB_RESULT_IND_DISALLOW;
	THIS_ID(check_availability_max_year);
}

