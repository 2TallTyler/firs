<!--! autofill sprites is magic to allow matching to the number of sprites in a different spriteset -->
<tal:default_feature_or_building condition="spriteset.type == ''">
    <!--! the default type of spriteset -->
    spriteset(${spriteset.id}) {
        <tal:autofill_sprites repeat="autosprite_num range(spriteset.num_sprites_to_autofill)">
            <tal:build_sprites repeat="sprite spriteset.sprites">
                [${sprite[0]}, ${sprite[1]}, ${sprite[2]}, ${sprite[3]}, ${sprite[4]}, ${sprite[5]}, NOCROP, ${industry.graphics_file}]
            </tal:build_sprites>
        </tal:autofill_sprites
    }
    spriteset(${spriteset.id}_snow) {
        <tal:autofill_sprites repeat="autosprite_num range(spriteset.num_sprites_to_autofill)">
            <tal:build_sprites repeat="sprite spriteset.sprites">
                    [${sprite[0]}, ${sprite[1]}, ${sprite[2]}, ${sprite[3]}, ${sprite[4]}, ${sprite[5]}, NOCROP, ${industry.graphics_file_snow}]
            </tal:build_sprites>
        </tal:autofill_sprites>
    }
</tal:default_feature_or_building>

<tal:ground condition="spriteset.type != ''">
    spriteset(${spriteset.id}, "sprites/graphics/industries/groundtiles.png") {
        <tal:autofill_sprites repeat="autosprite_num range(spriteset.num_sprites_to_autofill)">
            tmpl_ground_tile(${spriteset.get_ground_tile_x_start(spriteset.type)}, 10)
        </tal:autofill_sprites>
    }
    <!--! no need for a specific snow ground sprite, the spritelayout handles it -->
</tal:ground>
